/* eslint-disable */

/* THIS FILE IS AUTOGENERATED. CHANGES WILL BE LOST ON SUBSEQUENT RUNS. */

declare namespace Queries {

type Maybe<T> = T | null;
type InputMaybe<T> = T | null;
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
type Scalars = {
  /** The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID. */
  ID: string;
  /** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */
  String: string;
  /** The `Boolean` scalar type represents `true` or `false`. */
  Boolean: boolean;
  /** The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. */
  Int: number;
  /** The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point). */
  Float: number;
  /** A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard for representation of dates using the Gregorian calendar. */
  Content_Date: any;
  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar. */
  Content_DateTime: any;
  Content_Hex: any;
  /** Raw JSON value */
  Content_Json: any;
  /** The Long scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1. */
  Content_Long: any;
  Content_RGBAHue: any;
  Content_RGBATransparency: any;
  /** Slate-compatible RichText AST */
  Content_RichTextAST: any;
  /** A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */
  Date: string;
  GatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData;
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSON: Record<string, unknown>;
};

type AVIFOptions = {
  readonly lossless: InputMaybe<Scalars['Boolean']>;
  readonly quality: InputMaybe<Scalars['Int']>;
  readonly speed: InputMaybe<Scalars['Int']>;
};

type BlurredOptions = {
  /** Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this */
  readonly toFormat: InputMaybe<ImageFormat>;
  /** Width of the generated low-res preview. Default is 20px */
  readonly width: InputMaybe<Scalars['Int']>;
};

type BooleanQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Boolean']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Boolean']>>>;
  readonly ne: InputMaybe<Scalars['Boolean']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Boolean']>>>;
};

type Content = {
  /** Retrieve a single asset */
  readonly asset: Maybe<Content_Asset>;
  /** Retrieve document version */
  readonly assetVersion: Maybe<Content_DocumentVersion>;
  /** Retrieve multiple assets */
  readonly assets: ReadonlyArray<Content_Asset>;
  /** Retrieve multiple assets using the Relay connection interface */
  readonly assetsConnection: Content_AssetConnection;
  /** Retrieve a single developmentOption */
  readonly developmentOption: Maybe<Content_DevelopmentOption>;
  /** Retrieve document version */
  readonly developmentOptionVersion: Maybe<Content_DocumentVersion>;
  /** Retrieve multiple developmentOptions */
  readonly developmentOptions: ReadonlyArray<Content_DevelopmentOption>;
  /** Retrieve multiple developmentOptions using the Relay connection interface */
  readonly developmentOptionsConnection: Content_DevelopmentOptionConnection;
  /** Retrieve a single helpfulInfo */
  readonly helpfulInfo: Maybe<Content_HelpfulInfo>;
  /** Retrieve document version */
  readonly helpfulInfoVersion: Maybe<Content_DocumentVersion>;
  /** Retrieve multiple helpfulInfos */
  readonly helpfulInfos: ReadonlyArray<Content_HelpfulInfo>;
  /** Retrieve multiple helpfulInfos using the Relay connection interface */
  readonly helpfulInfosConnection: Content_HelpfulInfoConnection;
  /** Retrieve a single info */
  readonly info: Maybe<Content_Info>;
  /** Retrieve document version */
  readonly infoVersion: Maybe<Content_DocumentVersion>;
  /** Retrieve multiple infos */
  readonly infos: ReadonlyArray<Content_Info>;
  /** Retrieve multiple infos using the Relay connection interface */
  readonly infosConnection: Content_InfoConnection;
  /** Retrieve a single modelBusinessPlan */
  readonly modelBusinessPlan: Maybe<Content_ModelBusinessPlan>;
  /** Retrieve document version */
  readonly modelBusinessPlanVersion: Maybe<Content_DocumentVersion>;
  /** Retrieve multiple modelBusinessPlans */
  readonly modelBusinessPlans: ReadonlyArray<Content_ModelBusinessPlan>;
  /** Retrieve multiple modelBusinessPlans using the Relay connection interface */
  readonly modelBusinessPlansConnection: Content_ModelBusinessPlanConnection;
  /** Retrieve a single modelSwot */
  readonly modelSwot: Maybe<Content_ModelSwot>;
  /** Retrieve document version */
  readonly modelSwotVersion: Maybe<Content_DocumentVersion>;
  /** Retrieve multiple modelSwots */
  readonly modelSwots: ReadonlyArray<Content_ModelSwot>;
  /** Retrieve multiple modelSwots using the Relay connection interface */
  readonly modelSwotsConnection: Content_ModelSwotConnection;
  /** Fetches an object given its ID */
  readonly node: Maybe<Content_Node>;
  /** Retrieve a single presentationTipsPage */
  readonly presentationTipsPage: Maybe<Content_PresentationTipsPage>;
  /** Retrieve document version */
  readonly presentationTipsPageVersion: Maybe<Content_DocumentVersion>;
  /** Retrieve multiple presentationTipsPages */
  readonly presentationTipsPages: ReadonlyArray<Content_PresentationTipsPage>;
  /** Retrieve multiple presentationTipsPages using the Relay connection interface */
  readonly presentationTipsPagesConnection: Content_PresentationTipsPageConnection;
  /** Retrieve a single scheduledOperation */
  readonly scheduledOperation: Maybe<Content_ScheduledOperation>;
  /** Retrieve multiple scheduledOperations */
  readonly scheduledOperations: ReadonlyArray<Content_ScheduledOperation>;
  /** Retrieve multiple scheduledOperations using the Relay connection interface */
  readonly scheduledOperationsConnection: Content_ScheduledOperationConnection;
  /** Retrieve a single scheduledRelease */
  readonly scheduledRelease: Maybe<Content_ScheduledRelease>;
  /** Retrieve multiple scheduledReleases */
  readonly scheduledReleases: ReadonlyArray<Content_ScheduledRelease>;
  /** Retrieve multiple scheduledReleases using the Relay connection interface */
  readonly scheduledReleasesConnection: Content_ScheduledReleaseConnection;
  /** Retrieve a single stageLandingPage */
  readonly stageLandingPage: Maybe<Content_StageLandingPage>;
  /** Retrieve document version */
  readonly stageLandingPageVersion: Maybe<Content_DocumentVersion>;
  /** Retrieve multiple stageLandingPages */
  readonly stageLandingPages: ReadonlyArray<Content_StageLandingPage>;
  /** Retrieve multiple stageLandingPages using the Relay connection interface */
  readonly stageLandingPagesConnection: Content_StageLandingPageConnection;
  /** Retrieve a single stageTask */
  readonly stageTask: Maybe<Content_StageTask>;
  /** Retrieve a single stageTaskPage */
  readonly stageTaskPage: Maybe<Content_StageTaskPage>;
  /** Retrieve document version */
  readonly stageTaskPageVersion: Maybe<Content_DocumentVersion>;
  /** Retrieve multiple stageTaskPages */
  readonly stageTaskPages: ReadonlyArray<Content_StageTaskPage>;
  /** Retrieve multiple stageTaskPages using the Relay connection interface */
  readonly stageTaskPagesConnection: Content_StageTaskPageConnection;
  /** Retrieve document version */
  readonly stageTaskVersion: Maybe<Content_DocumentVersion>;
  /** Retrieve multiple stageTasks */
  readonly stageTasks: ReadonlyArray<Content_StageTask>;
  /** Retrieve multiple stageTasks using the Relay connection interface */
  readonly stageTasksConnection: Content_StageTaskConnection;
  /** Retrieve a single taskToComplete */
  readonly taskToComplete: Maybe<Content_TaskToComplete>;
  /** Retrieve document version */
  readonly taskToCompleteVersion: Maybe<Content_DocumentVersion>;
  /** Retrieve multiple tasksToComplete */
  readonly tasksToComplete: ReadonlyArray<Content_TaskToComplete>;
  /** Retrieve multiple tasksToComplete using the Relay connection interface */
  readonly tasksToCompleteConnection: Content_TaskToCompleteConnection;
  /** Retrieve a single user */
  readonly user: Maybe<Content_User>;
  /** Retrieve multiple users */
  readonly users: ReadonlyArray<Content_User>;
  /** Retrieve multiple users using the Relay connection interface */
  readonly usersConnection: Content_UserConnection;
};


type Content_assetArgs = {
  locales?: ReadonlyArray<Content_Locale>;
  stage?: Content_Stage;
  where: Content_AssetWhereUniqueInput;
};


type Content_assetVersionArgs = {
  where: Content_VersionWhereInput;
};


type Content_assetsArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_AssetOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_AssetWhereInput>;
};


type Content_assetsConnectionArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_AssetOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_AssetWhereInput>;
};


type Content_developmentOptionArgs = {
  locales?: ReadonlyArray<Content_Locale>;
  stage?: Content_Stage;
  where: Content_DevelopmentOptionWhereUniqueInput;
};


type Content_developmentOptionVersionArgs = {
  where: Content_VersionWhereInput;
};


type Content_developmentOptionsArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_DevelopmentOptionOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_DevelopmentOptionWhereInput>;
};


type Content_developmentOptionsConnectionArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_DevelopmentOptionOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_DevelopmentOptionWhereInput>;
};


type Content_helpfulInfoArgs = {
  locales?: ReadonlyArray<Content_Locale>;
  stage?: Content_Stage;
  where: Content_HelpfulInfoWhereUniqueInput;
};


type Content_helpfulInfoVersionArgs = {
  where: Content_VersionWhereInput;
};


type Content_helpfulInfosArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_HelpfulInfoOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_HelpfulInfoWhereInput>;
};


type Content_helpfulInfosConnectionArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_HelpfulInfoOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_HelpfulInfoWhereInput>;
};


type Content_infoArgs = {
  locales?: ReadonlyArray<Content_Locale>;
  stage?: Content_Stage;
  where: Content_InfoWhereUniqueInput;
};


type Content_infoVersionArgs = {
  where: Content_VersionWhereInput;
};


type Content_infosArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_InfoOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_InfoWhereInput>;
};


type Content_infosConnectionArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_InfoOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_InfoWhereInput>;
};


type Content_modelBusinessPlanArgs = {
  locales?: ReadonlyArray<Content_Locale>;
  stage?: Content_Stage;
  where: Content_ModelBusinessPlanWhereUniqueInput;
};


type Content_modelBusinessPlanVersionArgs = {
  where: Content_VersionWhereInput;
};


type Content_modelBusinessPlansArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_ModelBusinessPlanOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_ModelBusinessPlanWhereInput>;
};


type Content_modelBusinessPlansConnectionArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_ModelBusinessPlanOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_ModelBusinessPlanWhereInput>;
};


type Content_modelSwotArgs = {
  locales?: ReadonlyArray<Content_Locale>;
  stage?: Content_Stage;
  where: Content_ModelSwotWhereUniqueInput;
};


type Content_modelSwotVersionArgs = {
  where: Content_VersionWhereInput;
};


type Content_modelSwotsArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_ModelSwotOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_ModelSwotWhereInput>;
};


type Content_modelSwotsConnectionArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_ModelSwotOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_ModelSwotWhereInput>;
};


type Content_nodeArgs = {
  id: Scalars['ID'];
  locales?: ReadonlyArray<Content_Locale>;
  stage?: Content_Stage;
};


type Content_presentationTipsPageArgs = {
  locales?: ReadonlyArray<Content_Locale>;
  stage?: Content_Stage;
  where: Content_PresentationTipsPageWhereUniqueInput;
};


type Content_presentationTipsPageVersionArgs = {
  where: Content_VersionWhereInput;
};


type Content_presentationTipsPagesArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_PresentationTipsPageOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_PresentationTipsPageWhereInput>;
};


type Content_presentationTipsPagesConnectionArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_PresentationTipsPageOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_PresentationTipsPageWhereInput>;
};


type Content_scheduledOperationArgs = {
  locales?: ReadonlyArray<Content_Locale>;
  stage?: Content_Stage;
  where: Content_ScheduledOperationWhereUniqueInput;
};


type Content_scheduledOperationsArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_ScheduledOperationOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_ScheduledOperationWhereInput>;
};


type Content_scheduledOperationsConnectionArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_ScheduledOperationOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_ScheduledOperationWhereInput>;
};


type Content_scheduledReleaseArgs = {
  locales?: ReadonlyArray<Content_Locale>;
  stage?: Content_Stage;
  where: Content_ScheduledReleaseWhereUniqueInput;
};


type Content_scheduledReleasesArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_ScheduledReleaseOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_ScheduledReleaseWhereInput>;
};


type Content_scheduledReleasesConnectionArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_ScheduledReleaseOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_ScheduledReleaseWhereInput>;
};


type Content_stageLandingPageArgs = {
  locales?: ReadonlyArray<Content_Locale>;
  stage?: Content_Stage;
  where: Content_StageLandingPageWhereUniqueInput;
};


type Content_stageLandingPageVersionArgs = {
  where: Content_VersionWhereInput;
};


type Content_stageLandingPagesArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_StageLandingPageOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_StageLandingPageWhereInput>;
};


type Content_stageLandingPagesConnectionArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_StageLandingPageOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_StageLandingPageWhereInput>;
};


type Content_stageTaskArgs = {
  locales?: ReadonlyArray<Content_Locale>;
  stage?: Content_Stage;
  where: Content_StageTaskWhereUniqueInput;
};


type Content_stageTaskPageArgs = {
  locales?: ReadonlyArray<Content_Locale>;
  stage?: Content_Stage;
  where: Content_StageTaskPageWhereUniqueInput;
};


type Content_stageTaskPageVersionArgs = {
  where: Content_VersionWhereInput;
};


type Content_stageTaskPagesArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_StageTaskPageOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_StageTaskPageWhereInput>;
};


type Content_stageTaskPagesConnectionArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_StageTaskPageOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_StageTaskPageWhereInput>;
};


type Content_stageTaskVersionArgs = {
  where: Content_VersionWhereInput;
};


type Content_stageTasksArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_StageTaskOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_StageTaskWhereInput>;
};


type Content_stageTasksConnectionArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_StageTaskOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_StageTaskWhereInput>;
};


type Content_taskToCompleteArgs = {
  locales?: ReadonlyArray<Content_Locale>;
  stage?: Content_Stage;
  where: Content_TaskToCompleteWhereUniqueInput;
};


type Content_taskToCompleteVersionArgs = {
  where: Content_VersionWhereInput;
};


type Content_tasksToCompleteArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_TaskToCompleteOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_TaskToCompleteWhereInput>;
};


type Content_tasksToCompleteConnectionArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_TaskToCompleteOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_TaskToCompleteWhereInput>;
};


type Content_userArgs = {
  locales?: ReadonlyArray<Content_Locale>;
  stage?: Content_Stage;
  where: Content_UserWhereUniqueInput;
};


type Content_usersArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_UserOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_UserWhereInput>;
};


type Content_usersConnectionArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  last: InputMaybe<Scalars['Int']>;
  locales?: ReadonlyArray<Content_Locale>;
  orderBy: InputMaybe<Content_UserOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  stage?: Content_Stage;
  where: InputMaybe<Content_UserWhereInput>;
};

type Content_Aggregate = {
  readonly count: Scalars['Int'];
};

/** Asset system model */
type Content_Asset = Content_Node & {
  /** The time the document was created */
  readonly createdAt: Scalars['Content_DateTime'];
  /** User that created this document */
  readonly createdBy: Maybe<Content_User>;
  /** Get the document in other stages */
  readonly documentInStages: ReadonlyArray<Content_Asset>;
  /** The file name */
  readonly fileName: Scalars['String'];
  /** The file handle */
  readonly handle: Scalars['String'];
  /** The height of the file */
  readonly height: Maybe<Scalars['Float']>;
  /** List of Asset versions */
  readonly history: ReadonlyArray<Content_Version>;
  readonly iconDevelopmentOption: ReadonlyArray<Content_DevelopmentOption>;
  /** The unique identifier */
  readonly id: Scalars['ID'];
  readonly imageInfo: ReadonlyArray<Content_Info>;
  readonly informationMainImageDevelopmentOption: ReadonlyArray<Content_DevelopmentOption>;
  /** System Locale field */
  readonly locale: Content_Locale;
  /** Get the other localizations for this document */
  readonly localizations: ReadonlyArray<Content_Asset>;
  /** The mime type of the file */
  readonly mimeType: Maybe<Scalars['String']>;
  /** The time the document was published. Null on documents in draft stage. */
  readonly publishedAt: Maybe<Scalars['Content_DateTime']>;
  /** User that last published this document */
  readonly publishedBy: Maybe<Content_User>;
  readonly scheduledIn: ReadonlyArray<Content_ScheduledOperation>;
  /** The file size */
  readonly size: Maybe<Scalars['Float']>;
  /** System stage field */
  readonly stage: Content_Stage;
  /** The time the document was updated */
  readonly updatedAt: Scalars['Content_DateTime'];
  /** User that last updated this document */
  readonly updatedBy: Maybe<Content_User>;
  /** Get the url for the asset with provided transformations applied. */
  readonly url: Scalars['String'];
  /** The file width */
  readonly width: Maybe<Scalars['Float']>;
};


/** Asset system model */
type Content_Asset_createdAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


/** Asset system model */
type Content_Asset_createdByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


/** Asset system model */
type Content_Asset_documentInStagesArgs = {
  includeCurrent?: Scalars['Boolean'];
  inheritLocale?: Scalars['Boolean'];
  stages?: ReadonlyArray<Content_Stage>;
};


/** Asset system model */
type Content_Asset_historyArgs = {
  limit?: Scalars['Int'];
  skip?: Scalars['Int'];
  stageOverride: InputMaybe<Content_Stage>;
};


/** Asset system model */
type Content_Asset_iconDevelopmentOptionArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  orderBy: InputMaybe<Content_DevelopmentOptionOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  where: InputMaybe<Content_DevelopmentOptionWhereInput>;
};


/** Asset system model */
type Content_Asset_imageInfoArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  orderBy: InputMaybe<Content_InfoOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  where: InputMaybe<Content_InfoWhereInput>;
};


/** Asset system model */
type Content_Asset_informationMainImageDevelopmentOptionArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  orderBy: InputMaybe<Content_DevelopmentOptionOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  where: InputMaybe<Content_DevelopmentOptionWhereInput>;
};


/** Asset system model */
type Content_Asset_localizationsArgs = {
  includeCurrent?: Scalars['Boolean'];
  locales?: ReadonlyArray<Content_Locale>;
};


/** Asset system model */
type Content_Asset_publishedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


/** Asset system model */
type Content_Asset_publishedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


/** Asset system model */
type Content_Asset_scheduledInArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  skip: InputMaybe<Scalars['Int']>;
  where: InputMaybe<Content_ScheduledOperationWhereInput>;
};


/** Asset system model */
type Content_Asset_updatedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


/** Asset system model */
type Content_Asset_updatedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


/** Asset system model */
type Content_Asset_urlArgs = {
  transformation: InputMaybe<Content_AssetTransformationInput>;
};

type Content_AssetConnectInput = {
  /** Allow to specify document position in list of connected documents, will default to appending at end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Document to connect */
  readonly where: Content_AssetWhereUniqueInput;
};

/** A connection to a list of items. */
type Content_AssetConnection = {
  readonly aggregate: Content_Aggregate;
  /** A list of edges. */
  readonly edges: ReadonlyArray<Content_AssetEdge>;
  /** Information to aid in pagination. */
  readonly pageInfo: Content_PageInfo;
};

type Content_AssetCreateInput = {
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly fileName: Scalars['String'];
  readonly handle: Scalars['String'];
  readonly height: InputMaybe<Scalars['Float']>;
  readonly iconDevelopmentOption: InputMaybe<Content_DevelopmentOptionCreateManyInlineInput>;
  readonly imageInfo: InputMaybe<Content_InfoCreateManyInlineInput>;
  readonly informationMainImageDevelopmentOption: InputMaybe<Content_DevelopmentOptionCreateManyInlineInput>;
  /** Inline mutations for managing document localizations excluding the default locale */
  readonly localizations: InputMaybe<Content_AssetCreateLocalizationsInput>;
  readonly mimeType: InputMaybe<Scalars['String']>;
  readonly size: InputMaybe<Scalars['Float']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly width: InputMaybe<Scalars['Float']>;
};

type Content_AssetCreateLocalizationDataInput = {
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly fileName: Scalars['String'];
  readonly handle: Scalars['String'];
  readonly height: InputMaybe<Scalars['Float']>;
  readonly mimeType: InputMaybe<Scalars['String']>;
  readonly size: InputMaybe<Scalars['Float']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly width: InputMaybe<Scalars['Float']>;
};

type Content_AssetCreateLocalizationInput = {
  /** Localization input */
  readonly data: Content_AssetCreateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_AssetCreateLocalizationsInput = {
  /** Create localizations for the newly-created document */
  readonly create: InputMaybe<ReadonlyArray<Content_AssetCreateLocalizationInput>>;
};

type Content_AssetCreateManyInlineInput = {
  /** Connect multiple existing Asset documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_AssetWhereUniqueInput>>;
  /** Create and connect multiple existing Asset documents */
  readonly create: InputMaybe<ReadonlyArray<Content_AssetCreateInput>>;
};

type Content_AssetCreateOneInlineInput = {
  /** Connect one existing Asset document */
  readonly connect: InputMaybe<Content_AssetWhereUniqueInput>;
  /** Create and connect one Asset document */
  readonly create: InputMaybe<Content_AssetCreateInput>;
};

/** An edge in a connection. */
type Content_AssetEdge = {
  /** A cursor for use in pagination. */
  readonly cursor: Scalars['String'];
  /** The item at the end of the edge. */
  readonly node: Content_Asset;
};

/** Identifies documents */
type Content_AssetManyWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_AssetWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_AssetWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_AssetWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_AssetWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_AssetWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_AssetWhereStageInput>;
  readonly iconDevelopmentOption_every: InputMaybe<Content_DevelopmentOptionWhereInput>;
  readonly iconDevelopmentOption_none: InputMaybe<Content_DevelopmentOptionWhereInput>;
  readonly iconDevelopmentOption_some: InputMaybe<Content_DevelopmentOptionWhereInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly imageInfo_every: InputMaybe<Content_InfoWhereInput>;
  readonly imageInfo_none: InputMaybe<Content_InfoWhereInput>;
  readonly imageInfo_some: InputMaybe<Content_InfoWhereInput>;
  readonly informationMainImageDevelopmentOption_every: InputMaybe<Content_DevelopmentOptionWhereInput>;
  readonly informationMainImageDevelopmentOption_none: InputMaybe<Content_DevelopmentOptionWhereInput>;
  readonly informationMainImageDevelopmentOption_some: InputMaybe<Content_DevelopmentOptionWhereInput>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

type Content_AssetOrderByInput =
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'fileName_ASC'
  | 'fileName_DESC'
  | 'handle_ASC'
  | 'handle_DESC'
  | 'height_ASC'
  | 'height_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'mimeType_ASC'
  | 'mimeType_DESC'
  | 'publishedAt_ASC'
  | 'publishedAt_DESC'
  | 'size_ASC'
  | 'size_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'width_ASC'
  | 'width_DESC';

/** Transformations for Assets */
type Content_AssetTransformationInput = {
  readonly document: InputMaybe<Content_DocumentTransformationInput>;
  readonly image: InputMaybe<Content_ImageTransformationInput>;
  /** Pass true if you want to validate the passed transformation parameters */
  readonly validateOptions: InputMaybe<Scalars['Boolean']>;
};

type Content_AssetUpdateInput = {
  readonly fileName: InputMaybe<Scalars['String']>;
  readonly handle: InputMaybe<Scalars['String']>;
  readonly height: InputMaybe<Scalars['Float']>;
  readonly iconDevelopmentOption: InputMaybe<Content_DevelopmentOptionUpdateManyInlineInput>;
  readonly imageInfo: InputMaybe<Content_InfoUpdateManyInlineInput>;
  readonly informationMainImageDevelopmentOption: InputMaybe<Content_DevelopmentOptionUpdateManyInlineInput>;
  /** Manage document localizations */
  readonly localizations: InputMaybe<Content_AssetUpdateLocalizationsInput>;
  readonly mimeType: InputMaybe<Scalars['String']>;
  readonly size: InputMaybe<Scalars['Float']>;
  readonly width: InputMaybe<Scalars['Float']>;
};

type Content_AssetUpdateLocalizationDataInput = {
  readonly fileName: InputMaybe<Scalars['String']>;
  readonly handle: InputMaybe<Scalars['String']>;
  readonly height: InputMaybe<Scalars['Float']>;
  readonly mimeType: InputMaybe<Scalars['String']>;
  readonly size: InputMaybe<Scalars['Float']>;
  readonly width: InputMaybe<Scalars['Float']>;
};

type Content_AssetUpdateLocalizationInput = {
  readonly data: Content_AssetUpdateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_AssetUpdateLocalizationsInput = {
  /** Localizations to create */
  readonly create: InputMaybe<ReadonlyArray<Content_AssetCreateLocalizationInput>>;
  /** Localizations to delete */
  readonly delete: InputMaybe<ReadonlyArray<Content_Locale>>;
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_AssetUpdateLocalizationInput>>;
  readonly upsert: InputMaybe<ReadonlyArray<Content_AssetUpsertLocalizationInput>>;
};

type Content_AssetUpdateManyInlineInput = {
  /** Connect multiple existing Asset documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_AssetConnectInput>>;
  /** Create and connect multiple Asset documents */
  readonly create: InputMaybe<ReadonlyArray<Content_AssetCreateInput>>;
  /** Delete multiple Asset documents */
  readonly delete: InputMaybe<ReadonlyArray<Content_AssetWhereUniqueInput>>;
  /** Disconnect multiple Asset documents */
  readonly disconnect: InputMaybe<ReadonlyArray<Content_AssetWhereUniqueInput>>;
  /** Override currently-connected documents with multiple existing Asset documents */
  readonly set: InputMaybe<ReadonlyArray<Content_AssetWhereUniqueInput>>;
  /** Update multiple Asset documents */
  readonly update: InputMaybe<ReadonlyArray<Content_AssetUpdateWithNestedWhereUniqueInput>>;
  /** Upsert multiple Asset documents */
  readonly upsert: InputMaybe<ReadonlyArray<Content_AssetUpsertWithNestedWhereUniqueInput>>;
};

type Content_AssetUpdateManyInput = {
  readonly fileName: InputMaybe<Scalars['String']>;
  readonly height: InputMaybe<Scalars['Float']>;
  /** Optional updates to localizations */
  readonly localizations: InputMaybe<Content_AssetUpdateManyLocalizationsInput>;
  readonly mimeType: InputMaybe<Scalars['String']>;
  readonly size: InputMaybe<Scalars['Float']>;
  readonly width: InputMaybe<Scalars['Float']>;
};

type Content_AssetUpdateManyLocalizationDataInput = {
  readonly fileName: InputMaybe<Scalars['String']>;
  readonly height: InputMaybe<Scalars['Float']>;
  readonly mimeType: InputMaybe<Scalars['String']>;
  readonly size: InputMaybe<Scalars['Float']>;
  readonly width: InputMaybe<Scalars['Float']>;
};

type Content_AssetUpdateManyLocalizationInput = {
  readonly data: Content_AssetUpdateManyLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_AssetUpdateManyLocalizationsInput = {
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_AssetUpdateManyLocalizationInput>>;
};

type Content_AssetUpdateManyWithNestedWhereInput = {
  /** Update many input */
  readonly data: Content_AssetUpdateManyInput;
  /** Document search */
  readonly where: Content_AssetWhereInput;
};

type Content_AssetUpdateOneInlineInput = {
  /** Connect existing Asset document */
  readonly connect: InputMaybe<Content_AssetWhereUniqueInput>;
  /** Create and connect one Asset document */
  readonly create: InputMaybe<Content_AssetCreateInput>;
  /** Delete currently connected Asset document */
  readonly delete: InputMaybe<Scalars['Boolean']>;
  /** Disconnect currently connected Asset document */
  readonly disconnect: InputMaybe<Scalars['Boolean']>;
  /** Update single Asset document */
  readonly update: InputMaybe<Content_AssetUpdateWithNestedWhereUniqueInput>;
  /** Upsert single Asset document */
  readonly upsert: InputMaybe<Content_AssetUpsertWithNestedWhereUniqueInput>;
};

type Content_AssetUpdateWithNestedWhereUniqueInput = {
  /** Document to update */
  readonly data: Content_AssetUpdateInput;
  /** Unique document search */
  readonly where: Content_AssetWhereUniqueInput;
};

type Content_AssetUpsertInput = {
  /** Create document if it didn't exist */
  readonly create: Content_AssetCreateInput;
  /** Update document if it exists */
  readonly update: Content_AssetUpdateInput;
};

type Content_AssetUpsertLocalizationInput = {
  readonly create: Content_AssetCreateLocalizationDataInput;
  readonly locale: Content_Locale;
  readonly update: Content_AssetUpdateLocalizationDataInput;
};

type Content_AssetUpsertWithNestedWhereUniqueInput = {
  /** Upsert data */
  readonly data: Content_AssetUpsertInput;
  /** Unique document search */
  readonly where: Content_AssetWhereUniqueInput;
};

/** This contains a set of filters that can be used to compare values internally */
type Content_AssetWhereComparatorInput = {
  /** This field can be used to request to check if the entry is outdated by internal comparison */
  readonly outdated_to: InputMaybe<Scalars['Boolean']>;
};

/** Identifies documents */
type Content_AssetWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_AssetWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_AssetWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_AssetWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_AssetWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_AssetWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_AssetWhereStageInput>;
  readonly fileName: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly fileName_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly fileName_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly fileName_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly fileName_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly fileName_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly fileName_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly fileName_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly fileName_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly fileName_starts_with: InputMaybe<Scalars['String']>;
  readonly handle: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly handle_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly handle_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly handle_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly handle_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly handle_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly handle_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly handle_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly handle_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly handle_starts_with: InputMaybe<Scalars['String']>;
  readonly height: InputMaybe<Scalars['Float']>;
  /** All values greater than the given value. */
  readonly height_gt: InputMaybe<Scalars['Float']>;
  /** All values greater than or equal the given value. */
  readonly height_gte: InputMaybe<Scalars['Float']>;
  /** All values that are contained in given list. */
  readonly height_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  /** All values less than the given value. */
  readonly height_lt: InputMaybe<Scalars['Float']>;
  /** All values less than or equal the given value. */
  readonly height_lte: InputMaybe<Scalars['Float']>;
  /** All values that are not equal to given value. */
  readonly height_not: InputMaybe<Scalars['Float']>;
  /** All values that are not contained in given list. */
  readonly height_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  readonly iconDevelopmentOption_every: InputMaybe<Content_DevelopmentOptionWhereInput>;
  readonly iconDevelopmentOption_none: InputMaybe<Content_DevelopmentOptionWhereInput>;
  readonly iconDevelopmentOption_some: InputMaybe<Content_DevelopmentOptionWhereInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly imageInfo_every: InputMaybe<Content_InfoWhereInput>;
  readonly imageInfo_none: InputMaybe<Content_InfoWhereInput>;
  readonly imageInfo_some: InputMaybe<Content_InfoWhereInput>;
  readonly informationMainImageDevelopmentOption_every: InputMaybe<Content_DevelopmentOptionWhereInput>;
  readonly informationMainImageDevelopmentOption_none: InputMaybe<Content_DevelopmentOptionWhereInput>;
  readonly informationMainImageDevelopmentOption_some: InputMaybe<Content_DevelopmentOptionWhereInput>;
  readonly mimeType: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly mimeType_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly mimeType_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly mimeType_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly mimeType_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly mimeType_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly mimeType_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly mimeType_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly mimeType_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly mimeType_starts_with: InputMaybe<Scalars['String']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly size: InputMaybe<Scalars['Float']>;
  /** All values greater than the given value. */
  readonly size_gt: InputMaybe<Scalars['Float']>;
  /** All values greater than or equal the given value. */
  readonly size_gte: InputMaybe<Scalars['Float']>;
  /** All values that are contained in given list. */
  readonly size_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  /** All values less than the given value. */
  readonly size_lt: InputMaybe<Scalars['Float']>;
  /** All values less than or equal the given value. */
  readonly size_lte: InputMaybe<Scalars['Float']>;
  /** All values that are not equal to given value. */
  readonly size_not: InputMaybe<Scalars['Float']>;
  /** All values that are not contained in given list. */
  readonly size_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
  readonly width: InputMaybe<Scalars['Float']>;
  /** All values greater than the given value. */
  readonly width_gt: InputMaybe<Scalars['Float']>;
  /** All values greater than or equal the given value. */
  readonly width_gte: InputMaybe<Scalars['Float']>;
  /** All values that are contained in given list. */
  readonly width_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  /** All values less than the given value. */
  readonly width_lt: InputMaybe<Scalars['Float']>;
  /** All values less than or equal the given value. */
  readonly width_lte: InputMaybe<Scalars['Float']>;
  /** All values that are not equal to given value. */
  readonly width_not: InputMaybe<Scalars['Float']>;
  /** All values that are not contained in given list. */
  readonly width_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
};

/** The document in stages filter allows specifying a stage entry to cross compare the same document between different stages */
type Content_AssetWhereStageInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_AssetWhereStageInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_AssetWhereStageInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_AssetWhereStageInput>>;
  /** This field contains fields which can be set as true or false to specify an internal comparison */
  readonly compareWithParent: InputMaybe<Content_AssetWhereComparatorInput>;
  /** Specify the stage to compare with */
  readonly stage: InputMaybe<Content_Stage>;
};

/** References Asset record uniquely */
type Content_AssetWhereUniqueInput = {
  readonly id: InputMaybe<Scalars['ID']>;
};

type Content_BatchPayload = {
  /** The number of nodes that have been affected by the Batch operation. */
  readonly count: Scalars['Content_Long'];
};

type Content_CapitalCosts = {
  readonly details: Content_RichText;
  readonly funding: Content_RichText;
  /** The unique identifier */
  readonly id: Scalars['ID'];
  /** System stage field */
  readonly stage: Content_Stage;
};

type Content_CapitalCostsConnectInput = {
  /** Allow to specify document position in list of connected documents, will default to appending at end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Document to connect */
  readonly where: Content_CapitalCostsWhereUniqueInput;
};

/** A connection to a list of items. */
type Content_CapitalCostsConnection = {
  readonly aggregate: Content_Aggregate;
  /** A list of edges. */
  readonly edges: ReadonlyArray<Content_CapitalCostsEdge>;
  /** Information to aid in pagination. */
  readonly pageInfo: Content_PageInfo;
};

type Content_CapitalCostsCreateInput = {
  readonly details: Scalars['Content_RichTextAST'];
  readonly funding: Scalars['Content_RichTextAST'];
};

type Content_CapitalCostsCreateManyInlineInput = {
  /** Create and connect multiple existing CapitalCosts documents */
  readonly create: InputMaybe<ReadonlyArray<Content_CapitalCostsCreateInput>>;
};

type Content_CapitalCostsCreateOneInlineInput = {
  /** Create and connect one CapitalCosts document */
  readonly create: InputMaybe<Content_CapitalCostsCreateInput>;
};

type Content_CapitalCostsCreateWithPositionInput = {
  /** Document to create */
  readonly data: Content_CapitalCostsCreateInput;
  /** Position in the list of existing component instances, will default to appending at the end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
};

/** An edge in a connection. */
type Content_CapitalCostsEdge = {
  /** A cursor for use in pagination. */
  readonly cursor: Scalars['String'];
  /** The item at the end of the edge. */
  readonly node: Content_CapitalCosts;
};

/** Identifies documents */
type Content_CapitalCostsManyWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_CapitalCostsWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_CapitalCostsWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_CapitalCostsWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
};

type Content_CapitalCostsOrderByInput =
  | 'id_ASC'
  | 'id_DESC';

type Content_CapitalCostsParent = Content_ModelBusinessPlan;

type Content_CapitalCostsParentConnectInput = {
  readonly ModelBusinessPlan: InputMaybe<Content_ModelBusinessPlanConnectInput>;
};

type Content_CapitalCostsParentCreateInput = {
  readonly ModelBusinessPlan: InputMaybe<Content_ModelBusinessPlanCreateInput>;
};

type Content_CapitalCostsParentCreateManyInlineInput = {
  /** Connect multiple existing CapitalCostsParent documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_CapitalCostsParentWhereUniqueInput>>;
  /** Create and connect multiple existing CapitalCostsParent documents */
  readonly create: InputMaybe<ReadonlyArray<Content_CapitalCostsParentCreateInput>>;
};

type Content_CapitalCostsParentCreateOneInlineInput = {
  /** Connect one existing CapitalCostsParent document */
  readonly connect: InputMaybe<Content_CapitalCostsParentWhereUniqueInput>;
  /** Create and connect one CapitalCostsParent document */
  readonly create: InputMaybe<Content_CapitalCostsParentCreateInput>;
};

type Content_CapitalCostsParentUpdateInput = {
  readonly ModelBusinessPlan: InputMaybe<Content_ModelBusinessPlanUpdateInput>;
};

type Content_CapitalCostsParentUpdateManyInlineInput = {
  /** Connect multiple existing CapitalCostsParent documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_CapitalCostsParentConnectInput>>;
  /** Create and connect multiple CapitalCostsParent documents */
  readonly create: InputMaybe<ReadonlyArray<Content_CapitalCostsParentCreateInput>>;
  /** Delete multiple CapitalCostsParent documents */
  readonly delete: InputMaybe<ReadonlyArray<Content_CapitalCostsParentWhereUniqueInput>>;
  /** Disconnect multiple CapitalCostsParent documents */
  readonly disconnect: InputMaybe<ReadonlyArray<Content_CapitalCostsParentWhereUniqueInput>>;
  /** Override currently-connected documents with multiple existing CapitalCostsParent documents */
  readonly set: InputMaybe<ReadonlyArray<Content_CapitalCostsParentWhereUniqueInput>>;
  /** Update multiple CapitalCostsParent documents */
  readonly update: InputMaybe<ReadonlyArray<Content_CapitalCostsParentUpdateWithNestedWhereUniqueInput>>;
  /** Upsert multiple CapitalCostsParent documents */
  readonly upsert: InputMaybe<ReadonlyArray<Content_CapitalCostsParentUpsertWithNestedWhereUniqueInput>>;
};

type Content_CapitalCostsParentUpdateManyWithNestedWhereInput = {
  readonly ModelBusinessPlan: InputMaybe<Content_ModelBusinessPlanUpdateManyWithNestedWhereInput>;
};

type Content_CapitalCostsParentUpdateOneInlineInput = {
  /** Connect existing CapitalCostsParent document */
  readonly connect: InputMaybe<Content_CapitalCostsParentWhereUniqueInput>;
  /** Create and connect one CapitalCostsParent document */
  readonly create: InputMaybe<Content_CapitalCostsParentCreateInput>;
  /** Delete currently connected CapitalCostsParent document */
  readonly delete: InputMaybe<Scalars['Boolean']>;
  /** Disconnect currently connected CapitalCostsParent document */
  readonly disconnect: InputMaybe<Scalars['Boolean']>;
  /** Update single CapitalCostsParent document */
  readonly update: InputMaybe<Content_CapitalCostsParentUpdateWithNestedWhereUniqueInput>;
  /** Upsert single CapitalCostsParent document */
  readonly upsert: InputMaybe<Content_CapitalCostsParentUpsertWithNestedWhereUniqueInput>;
};

type Content_CapitalCostsParentUpdateWithNestedWhereUniqueInput = {
  readonly ModelBusinessPlan: InputMaybe<Content_ModelBusinessPlanUpdateWithNestedWhereUniqueInput>;
};

type Content_CapitalCostsParentUpsertWithNestedWhereUniqueInput = {
  readonly ModelBusinessPlan: InputMaybe<Content_ModelBusinessPlanUpsertWithNestedWhereUniqueInput>;
};

type Content_CapitalCostsParentWhereInput = {
  readonly ModelBusinessPlan: InputMaybe<Content_ModelBusinessPlanWhereInput>;
};

type Content_CapitalCostsParentWhereUniqueInput = {
  readonly ModelBusinessPlan: InputMaybe<Content_ModelBusinessPlanWhereUniqueInput>;
};

type Content_CapitalCostsUpdateInput = {
  readonly details: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly funding: InputMaybe<Scalars['Content_RichTextAST']>;
};

type Content_CapitalCostsUpdateManyInlineInput = {
  /** Create and connect multiple CapitalCosts component instances */
  readonly create: InputMaybe<ReadonlyArray<Content_CapitalCostsCreateWithPositionInput>>;
  /** Delete multiple CapitalCosts documents */
  readonly delete: InputMaybe<ReadonlyArray<Content_CapitalCostsWhereUniqueInput>>;
  /** Update multiple CapitalCosts component instances */
  readonly update: InputMaybe<ReadonlyArray<Content_CapitalCostsUpdateWithNestedWhereUniqueAndPositionInput>>;
  /** Upsert multiple CapitalCosts component instances */
  readonly upsert: InputMaybe<ReadonlyArray<Content_CapitalCostsUpsertWithNestedWhereUniqueAndPositionInput>>;
};

type Content_CapitalCostsUpdateManyInput = {
  readonly details: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly funding: InputMaybe<Scalars['Content_RichTextAST']>;
};

type Content_CapitalCostsUpdateManyWithNestedWhereInput = {
  /** Update many input */
  readonly data: Content_CapitalCostsUpdateManyInput;
  /** Document search */
  readonly where: Content_CapitalCostsWhereInput;
};

type Content_CapitalCostsUpdateOneInlineInput = {
  /** Create and connect one CapitalCosts document */
  readonly create: InputMaybe<Content_CapitalCostsCreateInput>;
  /** Delete currently connected CapitalCosts document */
  readonly delete: InputMaybe<Scalars['Boolean']>;
  /** Update single CapitalCosts document */
  readonly update: InputMaybe<Content_CapitalCostsUpdateWithNestedWhereUniqueInput>;
  /** Upsert single CapitalCosts document */
  readonly upsert: InputMaybe<Content_CapitalCostsUpsertWithNestedWhereUniqueInput>;
};

type Content_CapitalCostsUpdateWithNestedWhereUniqueAndPositionInput = {
  /** Document to update */
  readonly data: InputMaybe<Content_CapitalCostsUpdateInput>;
  /** Position in the list of existing component instances, will default to appending at the end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Unique component instance search */
  readonly where: Content_CapitalCostsWhereUniqueInput;
};

type Content_CapitalCostsUpdateWithNestedWhereUniqueInput = {
  /** Document to update */
  readonly data: Content_CapitalCostsUpdateInput;
  /** Unique document search */
  readonly where: Content_CapitalCostsWhereUniqueInput;
};

type Content_CapitalCostsUpsertInput = {
  /** Create document if it didn't exist */
  readonly create: Content_CapitalCostsCreateInput;
  /** Update document if it exists */
  readonly update: Content_CapitalCostsUpdateInput;
};

type Content_CapitalCostsUpsertWithNestedWhereUniqueAndPositionInput = {
  /** Document to upsert */
  readonly data: InputMaybe<Content_CapitalCostsUpsertInput>;
  /** Position in the list of existing component instances, will default to appending at the end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Unique component instance search */
  readonly where: Content_CapitalCostsWhereUniqueInput;
};

type Content_CapitalCostsUpsertWithNestedWhereUniqueInput = {
  /** Upsert data */
  readonly data: Content_CapitalCostsUpsertInput;
  /** Unique document search */
  readonly where: Content_CapitalCostsWhereUniqueInput;
};

/** Identifies documents */
type Content_CapitalCostsWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_CapitalCostsWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_CapitalCostsWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_CapitalCostsWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
};

/** References CapitalCosts record uniquely */
type Content_CapitalCostsWhereUniqueInput = {
  readonly id: InputMaybe<Scalars['ID']>;
};

type Content_Checklist = {
  /** The unique identifier */
  readonly id: Scalars['ID'];
  readonly item: ReadonlyArray<Scalars['String']>;
  /** System Locale field */
  readonly locale: Content_Locale;
  /** Get the other localizations for this document */
  readonly localizations: ReadonlyArray<Content_Checklist>;
  /** System stage field */
  readonly stage: Content_Stage;
};


type Content_Checklist_localizationsArgs = {
  includeCurrent?: Scalars['Boolean'];
  locales?: ReadonlyArray<Content_Locale>;
};

type Content_ChecklistConnectInput = {
  /** Allow to specify document position in list of connected documents, will default to appending at end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Document to connect */
  readonly where: Content_ChecklistWhereUniqueInput;
};

/** A connection to a list of items. */
type Content_ChecklistConnection = {
  readonly aggregate: Content_Aggregate;
  /** A list of edges. */
  readonly edges: ReadonlyArray<Content_ChecklistEdge>;
  /** Information to aid in pagination. */
  readonly pageInfo: Content_PageInfo;
};

type Content_ChecklistCreateInput = {
  /** item input for default locale (en) */
  readonly item: InputMaybe<ReadonlyArray<Scalars['String']>>;
  /** Inline mutations for managing document localizations excluding the default locale */
  readonly localizations: InputMaybe<Content_ChecklistCreateLocalizationsInput>;
};

type Content_ChecklistCreateLocalizationDataInput = {
  readonly item: InputMaybe<ReadonlyArray<Scalars['String']>>;
};

type Content_ChecklistCreateLocalizationInput = {
  /** Localization input */
  readonly data: Content_ChecklistCreateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_ChecklistCreateLocalizationsInput = {
  /** Create localizations for the newly-created document */
  readonly create: InputMaybe<ReadonlyArray<Content_ChecklistCreateLocalizationInput>>;
};

type Content_ChecklistCreateManyInlineInput = {
  /** Create and connect multiple existing Checklist documents */
  readonly create: InputMaybe<ReadonlyArray<Content_ChecklistCreateInput>>;
};

type Content_ChecklistCreateOneInlineInput = {
  /** Create and connect one Checklist document */
  readonly create: InputMaybe<Content_ChecklistCreateInput>;
};

type Content_ChecklistCreateWithPositionInput = {
  /** Document to create */
  readonly data: Content_ChecklistCreateInput;
  /** Position in the list of existing component instances, will default to appending at the end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
};

/** An edge in a connection. */
type Content_ChecklistEdge = {
  /** A cursor for use in pagination. */
  readonly cursor: Scalars['String'];
  /** The item at the end of the edge. */
  readonly node: Content_Checklist;
};

/** Identifies documents */
type Content_ChecklistManyWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_ChecklistWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_ChecklistWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_ChecklistWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
};

type Content_ChecklistOrderByInput =
  | 'id_ASC'
  | 'id_DESC'
  | 'item_ASC'
  | 'item_DESC';

type Content_ChecklistParent = Content_DevelopmentOption;

type Content_ChecklistParentConnectInput = {
  readonly DevelopmentOption: InputMaybe<Content_DevelopmentOptionConnectInput>;
};

type Content_ChecklistParentCreateInput = {
  readonly DevelopmentOption: InputMaybe<Content_DevelopmentOptionCreateInput>;
};

type Content_ChecklistParentCreateManyInlineInput = {
  /** Connect multiple existing ChecklistParent documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_ChecklistParentWhereUniqueInput>>;
  /** Create and connect multiple existing ChecklistParent documents */
  readonly create: InputMaybe<ReadonlyArray<Content_ChecklistParentCreateInput>>;
};

type Content_ChecklistParentCreateOneInlineInput = {
  /** Connect one existing ChecklistParent document */
  readonly connect: InputMaybe<Content_ChecklistParentWhereUniqueInput>;
  /** Create and connect one ChecklistParent document */
  readonly create: InputMaybe<Content_ChecklistParentCreateInput>;
};

type Content_ChecklistParentUpdateInput = {
  readonly DevelopmentOption: InputMaybe<Content_DevelopmentOptionUpdateInput>;
};

type Content_ChecklistParentUpdateManyInlineInput = {
  /** Connect multiple existing ChecklistParent documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_ChecklistParentConnectInput>>;
  /** Create and connect multiple ChecklistParent documents */
  readonly create: InputMaybe<ReadonlyArray<Content_ChecklistParentCreateInput>>;
  /** Delete multiple ChecklistParent documents */
  readonly delete: InputMaybe<ReadonlyArray<Content_ChecklistParentWhereUniqueInput>>;
  /** Disconnect multiple ChecklistParent documents */
  readonly disconnect: InputMaybe<ReadonlyArray<Content_ChecklistParentWhereUniqueInput>>;
  /** Override currently-connected documents with multiple existing ChecklistParent documents */
  readonly set: InputMaybe<ReadonlyArray<Content_ChecklistParentWhereUniqueInput>>;
  /** Update multiple ChecklistParent documents */
  readonly update: InputMaybe<ReadonlyArray<Content_ChecklistParentUpdateWithNestedWhereUniqueInput>>;
  /** Upsert multiple ChecklistParent documents */
  readonly upsert: InputMaybe<ReadonlyArray<Content_ChecklistParentUpsertWithNestedWhereUniqueInput>>;
};

type Content_ChecklistParentUpdateManyWithNestedWhereInput = {
  readonly DevelopmentOption: InputMaybe<Content_DevelopmentOptionUpdateManyWithNestedWhereInput>;
};

type Content_ChecklistParentUpdateOneInlineInput = {
  /** Connect existing ChecklistParent document */
  readonly connect: InputMaybe<Content_ChecklistParentWhereUniqueInput>;
  /** Create and connect one ChecklistParent document */
  readonly create: InputMaybe<Content_ChecklistParentCreateInput>;
  /** Delete currently connected ChecklistParent document */
  readonly delete: InputMaybe<Scalars['Boolean']>;
  /** Disconnect currently connected ChecklistParent document */
  readonly disconnect: InputMaybe<Scalars['Boolean']>;
  /** Update single ChecklistParent document */
  readonly update: InputMaybe<Content_ChecklistParentUpdateWithNestedWhereUniqueInput>;
  /** Upsert single ChecklistParent document */
  readonly upsert: InputMaybe<Content_ChecklistParentUpsertWithNestedWhereUniqueInput>;
};

type Content_ChecklistParentUpdateWithNestedWhereUniqueInput = {
  readonly DevelopmentOption: InputMaybe<Content_DevelopmentOptionUpdateWithNestedWhereUniqueInput>;
};

type Content_ChecklistParentUpsertWithNestedWhereUniqueInput = {
  readonly DevelopmentOption: InputMaybe<Content_DevelopmentOptionUpsertWithNestedWhereUniqueInput>;
};

type Content_ChecklistParentWhereInput = {
  readonly DevelopmentOption: InputMaybe<Content_DevelopmentOptionWhereInput>;
};

type Content_ChecklistParentWhereUniqueInput = {
  readonly DevelopmentOption: InputMaybe<Content_DevelopmentOptionWhereUniqueInput>;
};

type Content_ChecklistUpdateInput = {
  /** item input for default locale (en) */
  readonly item: InputMaybe<ReadonlyArray<Scalars['String']>>;
  /** Manage document localizations */
  readonly localizations: InputMaybe<Content_ChecklistUpdateLocalizationsInput>;
};

type Content_ChecklistUpdateLocalizationDataInput = {
  readonly item: InputMaybe<ReadonlyArray<Scalars['String']>>;
};

type Content_ChecklistUpdateLocalizationInput = {
  readonly data: Content_ChecklistUpdateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_ChecklistUpdateLocalizationsInput = {
  /** Localizations to create */
  readonly create: InputMaybe<ReadonlyArray<Content_ChecklistCreateLocalizationInput>>;
  /** Localizations to delete */
  readonly delete: InputMaybe<ReadonlyArray<Content_Locale>>;
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_ChecklistUpdateLocalizationInput>>;
  readonly upsert: InputMaybe<ReadonlyArray<Content_ChecklistUpsertLocalizationInput>>;
};

type Content_ChecklistUpdateManyInlineInput = {
  /** Create and connect multiple Checklist component instances */
  readonly create: InputMaybe<ReadonlyArray<Content_ChecklistCreateWithPositionInput>>;
  /** Delete multiple Checklist documents */
  readonly delete: InputMaybe<ReadonlyArray<Content_ChecklistWhereUniqueInput>>;
  /** Update multiple Checklist component instances */
  readonly update: InputMaybe<ReadonlyArray<Content_ChecklistUpdateWithNestedWhereUniqueAndPositionInput>>;
  /** Upsert multiple Checklist component instances */
  readonly upsert: InputMaybe<ReadonlyArray<Content_ChecklistUpsertWithNestedWhereUniqueAndPositionInput>>;
};

type Content_ChecklistUpdateManyInput = {
  /** item input for default locale (en) */
  readonly item: InputMaybe<ReadonlyArray<Scalars['String']>>;
  /** Optional updates to localizations */
  readonly localizations: InputMaybe<Content_ChecklistUpdateManyLocalizationsInput>;
};

type Content_ChecklistUpdateManyLocalizationDataInput = {
  readonly item: InputMaybe<ReadonlyArray<Scalars['String']>>;
};

type Content_ChecklistUpdateManyLocalizationInput = {
  readonly data: Content_ChecklistUpdateManyLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_ChecklistUpdateManyLocalizationsInput = {
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_ChecklistUpdateManyLocalizationInput>>;
};

type Content_ChecklistUpdateManyWithNestedWhereInput = {
  /** Update many input */
  readonly data: Content_ChecklistUpdateManyInput;
  /** Document search */
  readonly where: Content_ChecklistWhereInput;
};

type Content_ChecklistUpdateOneInlineInput = {
  /** Create and connect one Checklist document */
  readonly create: InputMaybe<Content_ChecklistCreateInput>;
  /** Delete currently connected Checklist document */
  readonly delete: InputMaybe<Scalars['Boolean']>;
  /** Update single Checklist document */
  readonly update: InputMaybe<Content_ChecklistUpdateWithNestedWhereUniqueInput>;
  /** Upsert single Checklist document */
  readonly upsert: InputMaybe<Content_ChecklistUpsertWithNestedWhereUniqueInput>;
};

type Content_ChecklistUpdateWithNestedWhereUniqueAndPositionInput = {
  /** Document to update */
  readonly data: InputMaybe<Content_ChecklistUpdateInput>;
  /** Position in the list of existing component instances, will default to appending at the end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Unique component instance search */
  readonly where: Content_ChecklistWhereUniqueInput;
};

type Content_ChecklistUpdateWithNestedWhereUniqueInput = {
  /** Document to update */
  readonly data: Content_ChecklistUpdateInput;
  /** Unique document search */
  readonly where: Content_ChecklistWhereUniqueInput;
};

type Content_ChecklistUpsertInput = {
  /** Create document if it didn't exist */
  readonly create: Content_ChecklistCreateInput;
  /** Update document if it exists */
  readonly update: Content_ChecklistUpdateInput;
};

type Content_ChecklistUpsertLocalizationInput = {
  readonly create: Content_ChecklistCreateLocalizationDataInput;
  readonly locale: Content_Locale;
  readonly update: Content_ChecklistUpdateLocalizationDataInput;
};

type Content_ChecklistUpsertWithNestedWhereUniqueAndPositionInput = {
  /** Document to upsert */
  readonly data: InputMaybe<Content_ChecklistUpsertInput>;
  /** Position in the list of existing component instances, will default to appending at the end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Unique component instance search */
  readonly where: Content_ChecklistWhereUniqueInput;
};

type Content_ChecklistUpsertWithNestedWhereUniqueInput = {
  /** Upsert data */
  readonly data: Content_ChecklistUpsertInput;
  /** Unique document search */
  readonly where: Content_ChecklistWhereUniqueInput;
};

/** Identifies documents */
type Content_ChecklistWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_ChecklistWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_ChecklistWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_ChecklistWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  /** Matches if the field array contains *all* items provided to the filter and order does match */
  readonly item: InputMaybe<ReadonlyArray<Scalars['String']>>;
  /** Matches if the field array contains *all* items provided to the filter */
  readonly item_contains_all: InputMaybe<ReadonlyArray<Scalars['String']>>;
  /** Matches if the field array does not contain any of the items provided to the filter */
  readonly item_contains_none: InputMaybe<ReadonlyArray<Scalars['String']>>;
  /** Matches if the field array contains at least one item provided to the filter */
  readonly item_contains_some: InputMaybe<ReadonlyArray<Scalars['String']>>;
  /** Matches if the field array does not contains *all* items provided to the filter or order does not match */
  readonly item_not: InputMaybe<ReadonlyArray<Scalars['String']>>;
};

/** References Checklist record uniquely */
type Content_ChecklistWhereUniqueInput = {
  readonly id: InputMaybe<Scalars['ID']>;
};

/** Representing a color value comprising of HEX, RGBA and css color values */
type Content_Color = {
  readonly css: Scalars['String'];
  readonly hex: Scalars['Content_Hex'];
  readonly rgba: Content_RGBA;
};

/** Accepts either HEX or RGBA color value. At least one of hex or rgba value should be passed. If both are passed RGBA is used. */
type Content_ColorInput = {
  readonly hex: InputMaybe<Scalars['Content_Hex']>;
  readonly rgba: InputMaybe<Content_RGBAInput>;
};

type Content_ConnectPositionInput = {
  /** Connect document after specified document */
  readonly after: InputMaybe<Scalars['ID']>;
  /** Connect document before specified document */
  readonly before: InputMaybe<Scalars['ID']>;
  /** Connect document at last position */
  readonly end: InputMaybe<Scalars['Boolean']>;
  /** Connect document at first position */
  readonly start: InputMaybe<Scalars['Boolean']>;
};

type Content_DevelopmentOption = Content_Node & {
  readonly checklist: Maybe<Content_DevelopmentOptionchecklistUnion>;
  /** The time the document was created */
  readonly createdAt: Scalars['Content_DateTime'];
  /** User that created this document */
  readonly createdBy: Maybe<Content_User>;
  /** Get the document in other stages */
  readonly documentInStages: ReadonlyArray<Content_DevelopmentOption>;
  readonly fundingOptions: Maybe<Content_RichText>;
  /** List of DevelopmentOption versions */
  readonly history: ReadonlyArray<Content_Version>;
  readonly icon: Content_Asset;
  /** The unique identifier */
  readonly id: Scalars['ID'];
  readonly informationMainImage: Maybe<Content_Asset>;
  /** Read info text */
  readonly intro: Maybe<Scalars['String']>;
  /** System Locale field */
  readonly locale: Content_Locale;
  /** Get the other localizations for this document */
  readonly localizations: ReadonlyArray<Content_DevelopmentOption>;
  readonly mainText: Maybe<Content_RichText>;
  readonly modelSwot: Maybe<Content_ModelSwot>;
  /** The time the document was published. Null on documents in draft stage. */
  readonly publishedAt: Maybe<Scalars['Content_DateTime']>;
  /** User that last published this document */
  readonly publishedBy: Maybe<Content_User>;
  readonly scheduledIn: ReadonlyArray<Content_ScheduledOperation>;
  readonly slug: Maybe<Scalars['String']>;
  /** System stage field */
  readonly stage: Content_Stage;
  /** Information Page Title */
  readonly title: Scalars['String'];
  /** The time the document was updated */
  readonly updatedAt: Scalars['Content_DateTime'];
  /** User that last updated this document */
  readonly updatedBy: Maybe<Content_User>;
};


type Content_DevelopmentOption_checklistArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_DevelopmentOption_createdAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_DevelopmentOption_createdByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_DevelopmentOption_documentInStagesArgs = {
  includeCurrent?: Scalars['Boolean'];
  inheritLocale?: Scalars['Boolean'];
  stages?: ReadonlyArray<Content_Stage>;
};


type Content_DevelopmentOption_historyArgs = {
  limit?: Scalars['Int'];
  skip?: Scalars['Int'];
  stageOverride: InputMaybe<Content_Stage>;
};


type Content_DevelopmentOption_iconArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_DevelopmentOption_informationMainImageArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_DevelopmentOption_localizationsArgs = {
  includeCurrent?: Scalars['Boolean'];
  locales?: ReadonlyArray<Content_Locale>;
};


type Content_DevelopmentOption_modelSwotArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_DevelopmentOption_publishedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_DevelopmentOption_publishedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_DevelopmentOption_scheduledInArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  skip: InputMaybe<Scalars['Int']>;
  where: InputMaybe<Content_ScheduledOperationWhereInput>;
};


type Content_DevelopmentOption_updatedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_DevelopmentOption_updatedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};

type Content_DevelopmentOptionConnectInput = {
  /** Allow to specify document position in list of connected documents, will default to appending at end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Document to connect */
  readonly where: Content_DevelopmentOptionWhereUniqueInput;
};

/** A connection to a list of items. */
type Content_DevelopmentOptionConnection = {
  readonly aggregate: Content_Aggregate;
  /** A list of edges. */
  readonly edges: ReadonlyArray<Content_DevelopmentOptionEdge>;
  /** Information to aid in pagination. */
  readonly pageInfo: Content_PageInfo;
};

type Content_DevelopmentOptionCreateInput = {
  readonly checklist: InputMaybe<Content_DevelopmentOptionchecklistUnionCreateOneInlineInput>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly fundingOptions: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly icon: Content_AssetCreateOneInlineInput;
  readonly informationMainImage: InputMaybe<Content_AssetCreateOneInlineInput>;
  /** intro input for default locale (en) */
  readonly intro: InputMaybe<Scalars['String']>;
  /** Inline mutations for managing document localizations excluding the default locale */
  readonly localizations: InputMaybe<Content_DevelopmentOptionCreateLocalizationsInput>;
  /** mainText input for default locale (en) */
  readonly mainText: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly modelSwot: InputMaybe<Content_ModelSwotCreateOneInlineInput>;
  readonly slug: InputMaybe<Scalars['String']>;
  /** title input for default locale (en) */
  readonly title: Scalars['String'];
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_DevelopmentOptionCreateLocalizationDataInput = {
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly intro: InputMaybe<Scalars['String']>;
  readonly mainText: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly title: Scalars['String'];
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_DevelopmentOptionCreateLocalizationInput = {
  /** Localization input */
  readonly data: Content_DevelopmentOptionCreateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_DevelopmentOptionCreateLocalizationsInput = {
  /** Create localizations for the newly-created document */
  readonly create: InputMaybe<ReadonlyArray<Content_DevelopmentOptionCreateLocalizationInput>>;
};

type Content_DevelopmentOptionCreateManyInlineInput = {
  /** Connect multiple existing DevelopmentOption documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_DevelopmentOptionWhereUniqueInput>>;
  /** Create and connect multiple existing DevelopmentOption documents */
  readonly create: InputMaybe<ReadonlyArray<Content_DevelopmentOptionCreateInput>>;
};

type Content_DevelopmentOptionCreateOneInlineInput = {
  /** Connect one existing DevelopmentOption document */
  readonly connect: InputMaybe<Content_DevelopmentOptionWhereUniqueInput>;
  /** Create and connect one DevelopmentOption document */
  readonly create: InputMaybe<Content_DevelopmentOptionCreateInput>;
};

/** An edge in a connection. */
type Content_DevelopmentOptionEdge = {
  /** A cursor for use in pagination. */
  readonly cursor: Scalars['String'];
  /** The item at the end of the edge. */
  readonly node: Content_DevelopmentOption;
};

/** Identifies documents */
type Content_DevelopmentOptionManyWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_DevelopmentOptionWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_DevelopmentOptionWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_DevelopmentOptionWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_DevelopmentOptionWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_DevelopmentOptionWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_DevelopmentOptionWhereStageInput>;
  readonly icon: InputMaybe<Content_AssetWhereInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly informationMainImage: InputMaybe<Content_AssetWhereInput>;
  readonly modelSwot: InputMaybe<Content_ModelSwotWhereInput>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly slug: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly slug_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly slug_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly slug_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly slug_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly slug_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly slug_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly slug_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly slug_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly slug_starts_with: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

type Content_DevelopmentOptionOrderByInput =
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'intro_ASC'
  | 'intro_DESC'
  | 'publishedAt_ASC'
  | 'publishedAt_DESC'
  | 'slug_ASC'
  | 'slug_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC';

type Content_DevelopmentOptionUpdateInput = {
  readonly checklist: InputMaybe<Content_DevelopmentOptionchecklistUnionUpdateOneInlineInput>;
  readonly fundingOptions: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly icon: InputMaybe<Content_AssetUpdateOneInlineInput>;
  readonly informationMainImage: InputMaybe<Content_AssetUpdateOneInlineInput>;
  /** intro input for default locale (en) */
  readonly intro: InputMaybe<Scalars['String']>;
  /** Manage document localizations */
  readonly localizations: InputMaybe<Content_DevelopmentOptionUpdateLocalizationsInput>;
  /** mainText input for default locale (en) */
  readonly mainText: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly modelSwot: InputMaybe<Content_ModelSwotUpdateOneInlineInput>;
  readonly slug: InputMaybe<Scalars['String']>;
  /** title input for default locale (en) */
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_DevelopmentOptionUpdateLocalizationDataInput = {
  readonly intro: InputMaybe<Scalars['String']>;
  readonly mainText: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_DevelopmentOptionUpdateLocalizationInput = {
  readonly data: Content_DevelopmentOptionUpdateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_DevelopmentOptionUpdateLocalizationsInput = {
  /** Localizations to create */
  readonly create: InputMaybe<ReadonlyArray<Content_DevelopmentOptionCreateLocalizationInput>>;
  /** Localizations to delete */
  readonly delete: InputMaybe<ReadonlyArray<Content_Locale>>;
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_DevelopmentOptionUpdateLocalizationInput>>;
  readonly upsert: InputMaybe<ReadonlyArray<Content_DevelopmentOptionUpsertLocalizationInput>>;
};

type Content_DevelopmentOptionUpdateManyInlineInput = {
  /** Connect multiple existing DevelopmentOption documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_DevelopmentOptionConnectInput>>;
  /** Create and connect multiple DevelopmentOption documents */
  readonly create: InputMaybe<ReadonlyArray<Content_DevelopmentOptionCreateInput>>;
  /** Delete multiple DevelopmentOption documents */
  readonly delete: InputMaybe<ReadonlyArray<Content_DevelopmentOptionWhereUniqueInput>>;
  /** Disconnect multiple DevelopmentOption documents */
  readonly disconnect: InputMaybe<ReadonlyArray<Content_DevelopmentOptionWhereUniqueInput>>;
  /** Override currently-connected documents with multiple existing DevelopmentOption documents */
  readonly set: InputMaybe<ReadonlyArray<Content_DevelopmentOptionWhereUniqueInput>>;
  /** Update multiple DevelopmentOption documents */
  readonly update: InputMaybe<ReadonlyArray<Content_DevelopmentOptionUpdateWithNestedWhereUniqueInput>>;
  /** Upsert multiple DevelopmentOption documents */
  readonly upsert: InputMaybe<ReadonlyArray<Content_DevelopmentOptionUpsertWithNestedWhereUniqueInput>>;
};

type Content_DevelopmentOptionUpdateManyInput = {
  readonly fundingOptions: InputMaybe<Scalars['Content_RichTextAST']>;
  /** intro input for default locale (en) */
  readonly intro: InputMaybe<Scalars['String']>;
  /** Optional updates to localizations */
  readonly localizations: InputMaybe<Content_DevelopmentOptionUpdateManyLocalizationsInput>;
  /** mainText input for default locale (en) */
  readonly mainText: InputMaybe<Scalars['Content_RichTextAST']>;
  /** title input for default locale (en) */
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_DevelopmentOptionUpdateManyLocalizationDataInput = {
  readonly intro: InputMaybe<Scalars['String']>;
  readonly mainText: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_DevelopmentOptionUpdateManyLocalizationInput = {
  readonly data: Content_DevelopmentOptionUpdateManyLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_DevelopmentOptionUpdateManyLocalizationsInput = {
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_DevelopmentOptionUpdateManyLocalizationInput>>;
};

type Content_DevelopmentOptionUpdateManyWithNestedWhereInput = {
  /** Update many input */
  readonly data: Content_DevelopmentOptionUpdateManyInput;
  /** Document search */
  readonly where: Content_DevelopmentOptionWhereInput;
};

type Content_DevelopmentOptionUpdateOneInlineInput = {
  /** Connect existing DevelopmentOption document */
  readonly connect: InputMaybe<Content_DevelopmentOptionWhereUniqueInput>;
  /** Create and connect one DevelopmentOption document */
  readonly create: InputMaybe<Content_DevelopmentOptionCreateInput>;
  /** Delete currently connected DevelopmentOption document */
  readonly delete: InputMaybe<Scalars['Boolean']>;
  /** Disconnect currently connected DevelopmentOption document */
  readonly disconnect: InputMaybe<Scalars['Boolean']>;
  /** Update single DevelopmentOption document */
  readonly update: InputMaybe<Content_DevelopmentOptionUpdateWithNestedWhereUniqueInput>;
  /** Upsert single DevelopmentOption document */
  readonly upsert: InputMaybe<Content_DevelopmentOptionUpsertWithNestedWhereUniqueInput>;
};

type Content_DevelopmentOptionUpdateWithNestedWhereUniqueInput = {
  /** Document to update */
  readonly data: Content_DevelopmentOptionUpdateInput;
  /** Unique document search */
  readonly where: Content_DevelopmentOptionWhereUniqueInput;
};

type Content_DevelopmentOptionUpsertInput = {
  /** Create document if it didn't exist */
  readonly create: Content_DevelopmentOptionCreateInput;
  /** Update document if it exists */
  readonly update: Content_DevelopmentOptionUpdateInput;
};

type Content_DevelopmentOptionUpsertLocalizationInput = {
  readonly create: Content_DevelopmentOptionCreateLocalizationDataInput;
  readonly locale: Content_Locale;
  readonly update: Content_DevelopmentOptionUpdateLocalizationDataInput;
};

type Content_DevelopmentOptionUpsertWithNestedWhereUniqueInput = {
  /** Upsert data */
  readonly data: Content_DevelopmentOptionUpsertInput;
  /** Unique document search */
  readonly where: Content_DevelopmentOptionWhereUniqueInput;
};

/** This contains a set of filters that can be used to compare values internally */
type Content_DevelopmentOptionWhereComparatorInput = {
  /** This field can be used to request to check if the entry is outdated by internal comparison */
  readonly outdated_to: InputMaybe<Scalars['Boolean']>;
};

/** Identifies documents */
type Content_DevelopmentOptionWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_DevelopmentOptionWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_DevelopmentOptionWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_DevelopmentOptionWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_DevelopmentOptionWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_DevelopmentOptionWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_DevelopmentOptionWhereStageInput>;
  readonly icon: InputMaybe<Content_AssetWhereInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly informationMainImage: InputMaybe<Content_AssetWhereInput>;
  readonly intro: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly intro_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly intro_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly intro_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly intro_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly intro_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly intro_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly intro_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly intro_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly intro_starts_with: InputMaybe<Scalars['String']>;
  readonly modelSwot: InputMaybe<Content_ModelSwotWhereInput>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly slug: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly slug_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly slug_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly slug_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly slug_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly slug_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly slug_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly slug_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly slug_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly slug_starts_with: InputMaybe<Scalars['String']>;
  readonly title: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly title_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly title_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly title_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly title_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly title_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly title_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly title_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly title_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly title_starts_with: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

/** The document in stages filter allows specifying a stage entry to cross compare the same document between different stages */
type Content_DevelopmentOptionWhereStageInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_DevelopmentOptionWhereStageInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_DevelopmentOptionWhereStageInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_DevelopmentOptionWhereStageInput>>;
  /** This field contains fields which can be set as true or false to specify an internal comparison */
  readonly compareWithParent: InputMaybe<Content_DevelopmentOptionWhereComparatorInput>;
  /** Specify the stage to compare with */
  readonly stage: InputMaybe<Content_Stage>;
};

/** References DevelopmentOption record uniquely */
type Content_DevelopmentOptionWhereUniqueInput = {
  readonly id: InputMaybe<Scalars['ID']>;
  readonly slug: InputMaybe<Scalars['String']>;
};

type Content_DevelopmentOptionchecklistUnion = Content_Checklist;

type Content_DevelopmentOptionchecklistUnionConnectInput = {
  readonly Checklist: InputMaybe<Content_ChecklistConnectInput>;
};

type Content_DevelopmentOptionchecklistUnionCreateInput = {
  readonly Checklist: InputMaybe<Content_ChecklistCreateInput>;
};

type Content_DevelopmentOptionchecklistUnionCreateManyInlineInput = {
  /** Create and connect multiple existing DevelopmentOptionchecklistUnion documents */
  readonly create: InputMaybe<ReadonlyArray<Content_DevelopmentOptionchecklistUnionCreateInput>>;
};

type Content_DevelopmentOptionchecklistUnionCreateOneInlineInput = {
  /** Create and connect one DevelopmentOptionchecklistUnion document */
  readonly create: InputMaybe<Content_DevelopmentOptionchecklistUnionCreateInput>;
};

type Content_DevelopmentOptionchecklistUnionCreateWithPositionInput = {
  readonly Checklist: InputMaybe<Content_ChecklistCreateWithPositionInput>;
};

type Content_DevelopmentOptionchecklistUnionUpdateInput = {
  readonly Checklist: InputMaybe<Content_ChecklistUpdateInput>;
};

type Content_DevelopmentOptionchecklistUnionUpdateManyInlineInput = {
  /** Create and connect multiple DevelopmentOptionchecklistUnion component instances */
  readonly create: InputMaybe<ReadonlyArray<Content_DevelopmentOptionchecklistUnionCreateWithPositionInput>>;
  /** Delete multiple DevelopmentOptionchecklistUnion documents */
  readonly delete: InputMaybe<ReadonlyArray<Content_DevelopmentOptionchecklistUnionWhereUniqueInput>>;
  /** Update multiple DevelopmentOptionchecklistUnion component instances */
  readonly update: InputMaybe<ReadonlyArray<Content_DevelopmentOptionchecklistUnionUpdateWithNestedWhereUniqueAndPositionInput>>;
  /** Upsert multiple DevelopmentOptionchecklistUnion component instances */
  readonly upsert: InputMaybe<ReadonlyArray<Content_DevelopmentOptionchecklistUnionUpsertWithNestedWhereUniqueAndPositionInput>>;
};

type Content_DevelopmentOptionchecklistUnionUpdateManyWithNestedWhereInput = {
  readonly Checklist: InputMaybe<Content_ChecklistUpdateManyWithNestedWhereInput>;
};

type Content_DevelopmentOptionchecklistUnionUpdateOneInlineInput = {
  /** Create and connect one DevelopmentOptionchecklistUnion document */
  readonly create: InputMaybe<Content_DevelopmentOptionchecklistUnionCreateInput>;
  /** Delete currently connected DevelopmentOptionchecklistUnion document */
  readonly delete: InputMaybe<Scalars['Boolean']>;
  /** Update single DevelopmentOptionchecklistUnion document */
  readonly update: InputMaybe<Content_DevelopmentOptionchecklistUnionUpdateWithNestedWhereUniqueInput>;
  /** Upsert single DevelopmentOptionchecklistUnion document */
  readonly upsert: InputMaybe<Content_DevelopmentOptionchecklistUnionUpsertWithNestedWhereUniqueInput>;
};

type Content_DevelopmentOptionchecklistUnionUpdateWithNestedWhereUniqueAndPositionInput = {
  readonly Checklist: InputMaybe<Content_ChecklistUpdateWithNestedWhereUniqueAndPositionInput>;
};

type Content_DevelopmentOptionchecklistUnionUpdateWithNestedWhereUniqueInput = {
  readonly Checklist: InputMaybe<Content_ChecklistUpdateWithNestedWhereUniqueInput>;
};

type Content_DevelopmentOptionchecklistUnionUpsertWithNestedWhereUniqueAndPositionInput = {
  readonly Checklist: InputMaybe<Content_ChecklistUpsertWithNestedWhereUniqueAndPositionInput>;
};

type Content_DevelopmentOptionchecklistUnionUpsertWithNestedWhereUniqueInput = {
  readonly Checklist: InputMaybe<Content_ChecklistUpsertWithNestedWhereUniqueInput>;
};

type Content_DevelopmentOptionchecklistUnionWhereInput = {
  readonly Checklist: InputMaybe<Content_ChecklistWhereInput>;
};

type Content_DevelopmentOptionchecklistUnionWhereUniqueInput = {
  readonly Checklist: InputMaybe<Content_ChecklistWhereUniqueInput>;
};

type Content_DocumentFileTypes =
  | 'doc'
  | 'docx'
  | 'html'
  | 'jpg'
  | 'odp'
  | 'ods'
  | 'odt'
  | 'pdf'
  | 'png'
  | 'ppt'
  | 'pptx'
  | 'svg'
  | 'txt'
  | 'webp'
  | 'xls'
  | 'xlsx';

type Content_DocumentOutputInput = {
  /**
   * Transforms a document into a desired file type.
   * See this matrix for format support:
   *
   * PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
   * DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
   * DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
   * ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
   * XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
   * XLSX:	jpg, pdf, ods, png, svg, xls, and webp
   * ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
   * PPT:	jpg, odp, pdf, png, svg, pptx, and webp
   * PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
   * ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
   * BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
   * GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
   * JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
   * PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
   * WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
   * TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
   * AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
   * PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
   * SVG:	jpg, odp, ods, odt, pdf, png, and webp
   * HTML:	jpg, odt, pdf, svg, txt, and webp
   * TXT:	jpg, html, odt, pdf, svg, and webp
   */
  readonly format: InputMaybe<Content_DocumentFileTypes>;
};

/** Transformations for Documents */
type Content_DocumentTransformationInput = {
  /** Changes the output for the file. */
  readonly output: InputMaybe<Content_DocumentOutputInput>;
};

type Content_DocumentVersion = {
  readonly createdAt: Scalars['Content_DateTime'];
  readonly data: Maybe<Scalars['Content_Json']>;
  readonly id: Scalars['ID'];
  readonly revision: Scalars['Int'];
  readonly stage: Content_Stage;
};

type Content_HelpfulInfo = Content_Node & {
  /** The time the document was created */
  readonly createdAt: Scalars['Content_DateTime'];
  /** User that created this document */
  readonly createdBy: Maybe<Content_User>;
  /** Get the document in other stages */
  readonly documentInStages: ReadonlyArray<Content_HelpfulInfo>;
  /** List of HelpfulInfo versions */
  readonly history: ReadonlyArray<Content_Version>;
  /** The unique identifier */
  readonly id: Scalars['ID'];
  readonly info: Content_RichText;
  /** System Locale field */
  readonly locale: Content_Locale;
  /** Get the other localizations for this document */
  readonly localizations: ReadonlyArray<Content_HelpfulInfo>;
  /** The time the document was published. Null on documents in draft stage. */
  readonly publishedAt: Maybe<Scalars['Content_DateTime']>;
  /** User that last published this document */
  readonly publishedBy: Maybe<Content_User>;
  readonly scheduledIn: ReadonlyArray<Content_ScheduledOperation>;
  /** System stage field */
  readonly stage: Content_Stage;
  readonly stageNumber: Scalars['Int'];
  /** The time the document was updated */
  readonly updatedAt: Scalars['Content_DateTime'];
  /** User that last updated this document */
  readonly updatedBy: Maybe<Content_User>;
};


type Content_HelpfulInfo_createdAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_HelpfulInfo_createdByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_HelpfulInfo_documentInStagesArgs = {
  includeCurrent?: Scalars['Boolean'];
  inheritLocale?: Scalars['Boolean'];
  stages?: ReadonlyArray<Content_Stage>;
};


type Content_HelpfulInfo_historyArgs = {
  limit?: Scalars['Int'];
  skip?: Scalars['Int'];
  stageOverride: InputMaybe<Content_Stage>;
};


type Content_HelpfulInfo_localizationsArgs = {
  includeCurrent?: Scalars['Boolean'];
  locales?: ReadonlyArray<Content_Locale>;
};


type Content_HelpfulInfo_publishedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_HelpfulInfo_publishedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_HelpfulInfo_scheduledInArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  skip: InputMaybe<Scalars['Int']>;
  where: InputMaybe<Content_ScheduledOperationWhereInput>;
};


type Content_HelpfulInfo_updatedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_HelpfulInfo_updatedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};

type Content_HelpfulInfoConnectInput = {
  /** Allow to specify document position in list of connected documents, will default to appending at end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Document to connect */
  readonly where: Content_HelpfulInfoWhereUniqueInput;
};

/** A connection to a list of items. */
type Content_HelpfulInfoConnection = {
  readonly aggregate: Content_Aggregate;
  /** A list of edges. */
  readonly edges: ReadonlyArray<Content_HelpfulInfoEdge>;
  /** Information to aid in pagination. */
  readonly pageInfo: Content_PageInfo;
};

type Content_HelpfulInfoCreateInput = {
  readonly cksmc9czo0t9901xn047yfiro: InputMaybe<Content_StageTaskCreateManyInlineInput>;
  readonly cksmc215y0us801yudj7z4n3i: InputMaybe<Content_StageLandingPageCreateManyInlineInput>;
  readonly cksnoq7jg1c7v01xn58atfv6o: InputMaybe<Content_StageTaskPageCreateManyInlineInput>;
  readonly cksqevglx3chq01yu9wz61b9s: InputMaybe<Content_InfoCreateManyInlineInput>;
  readonly cksql58573inh01y23ue7bkwr: InputMaybe<Content_PresentationTipsPageCreateManyInlineInput>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** info input for default locale (en) */
  readonly info: Scalars['Content_RichTextAST'];
  /** Inline mutations for managing document localizations excluding the default locale */
  readonly localizations: InputMaybe<Content_HelpfulInfoCreateLocalizationsInput>;
  readonly stageNumber: Scalars['Int'];
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_HelpfulInfoCreateLocalizationDataInput = {
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly info: Scalars['Content_RichTextAST'];
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_HelpfulInfoCreateLocalizationInput = {
  /** Localization input */
  readonly data: Content_HelpfulInfoCreateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_HelpfulInfoCreateLocalizationsInput = {
  /** Create localizations for the newly-created document */
  readonly create: InputMaybe<ReadonlyArray<Content_HelpfulInfoCreateLocalizationInput>>;
};

type Content_HelpfulInfoCreateManyInlineInput = {
  /** Connect multiple existing HelpfulInfo documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_HelpfulInfoWhereUniqueInput>>;
  /** Create and connect multiple existing HelpfulInfo documents */
  readonly create: InputMaybe<ReadonlyArray<Content_HelpfulInfoCreateInput>>;
};

type Content_HelpfulInfoCreateOneInlineInput = {
  /** Connect one existing HelpfulInfo document */
  readonly connect: InputMaybe<Content_HelpfulInfoWhereUniqueInput>;
  /** Create and connect one HelpfulInfo document */
  readonly create: InputMaybe<Content_HelpfulInfoCreateInput>;
};

/** An edge in a connection. */
type Content_HelpfulInfoEdge = {
  /** A cursor for use in pagination. */
  readonly cursor: Scalars['String'];
  /** The item at the end of the edge. */
  readonly node: Content_HelpfulInfo;
};

/** Identifies documents */
type Content_HelpfulInfoManyWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_HelpfulInfoWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_HelpfulInfoWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_HelpfulInfoWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_HelpfulInfoWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_HelpfulInfoWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_HelpfulInfoWhereStageInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** All values greater than the given value. */
  readonly stageNumber_gt: InputMaybe<Scalars['Int']>;
  /** All values greater than or equal the given value. */
  readonly stageNumber_gte: InputMaybe<Scalars['Int']>;
  /** All values that are contained in given list. */
  readonly stageNumber_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  /** All values less than the given value. */
  readonly stageNumber_lt: InputMaybe<Scalars['Int']>;
  /** All values less than or equal the given value. */
  readonly stageNumber_lte: InputMaybe<Scalars['Int']>;
  /** All values that are not equal to given value. */
  readonly stageNumber_not: InputMaybe<Scalars['Int']>;
  /** All values that are not contained in given list. */
  readonly stageNumber_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

type Content_HelpfulInfoOrderByInput =
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'publishedAt_ASC'
  | 'publishedAt_DESC'
  | 'stageNumber_ASC'
  | 'stageNumber_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC';

type Content_HelpfulInfoUpdateInput = {
  readonly cksmc9czo0t9901xn047yfiro: InputMaybe<Content_StageTaskUpdateManyInlineInput>;
  readonly cksmc215y0us801yudj7z4n3i: InputMaybe<Content_StageLandingPageUpdateManyInlineInput>;
  readonly cksnoq7jg1c7v01xn58atfv6o: InputMaybe<Content_StageTaskPageUpdateManyInlineInput>;
  readonly cksqevglx3chq01yu9wz61b9s: InputMaybe<Content_InfoUpdateManyInlineInput>;
  readonly cksql58573inh01y23ue7bkwr: InputMaybe<Content_PresentationTipsPageUpdateManyInlineInput>;
  /** info input for default locale (en) */
  readonly info: InputMaybe<Scalars['Content_RichTextAST']>;
  /** Manage document localizations */
  readonly localizations: InputMaybe<Content_HelpfulInfoUpdateLocalizationsInput>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
};

type Content_HelpfulInfoUpdateLocalizationDataInput = {
  readonly info: InputMaybe<Scalars['Content_RichTextAST']>;
};

type Content_HelpfulInfoUpdateLocalizationInput = {
  readonly data: Content_HelpfulInfoUpdateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_HelpfulInfoUpdateLocalizationsInput = {
  /** Localizations to create */
  readonly create: InputMaybe<ReadonlyArray<Content_HelpfulInfoCreateLocalizationInput>>;
  /** Localizations to delete */
  readonly delete: InputMaybe<ReadonlyArray<Content_Locale>>;
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_HelpfulInfoUpdateLocalizationInput>>;
  readonly upsert: InputMaybe<ReadonlyArray<Content_HelpfulInfoUpsertLocalizationInput>>;
};

type Content_HelpfulInfoUpdateManyInlineInput = {
  /** Connect multiple existing HelpfulInfo documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_HelpfulInfoConnectInput>>;
  /** Create and connect multiple HelpfulInfo documents */
  readonly create: InputMaybe<ReadonlyArray<Content_HelpfulInfoCreateInput>>;
  /** Delete multiple HelpfulInfo documents */
  readonly delete: InputMaybe<ReadonlyArray<Content_HelpfulInfoWhereUniqueInput>>;
  /** Disconnect multiple HelpfulInfo documents */
  readonly disconnect: InputMaybe<ReadonlyArray<Content_HelpfulInfoWhereUniqueInput>>;
  /** Override currently-connected documents with multiple existing HelpfulInfo documents */
  readonly set: InputMaybe<ReadonlyArray<Content_HelpfulInfoWhereUniqueInput>>;
  /** Update multiple HelpfulInfo documents */
  readonly update: InputMaybe<ReadonlyArray<Content_HelpfulInfoUpdateWithNestedWhereUniqueInput>>;
  /** Upsert multiple HelpfulInfo documents */
  readonly upsert: InputMaybe<ReadonlyArray<Content_HelpfulInfoUpsertWithNestedWhereUniqueInput>>;
};

type Content_HelpfulInfoUpdateManyInput = {
  /** info input for default locale (en) */
  readonly info: InputMaybe<Scalars['Content_RichTextAST']>;
  /** Optional updates to localizations */
  readonly localizations: InputMaybe<Content_HelpfulInfoUpdateManyLocalizationsInput>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
};

type Content_HelpfulInfoUpdateManyLocalizationDataInput = {
  readonly info: InputMaybe<Scalars['Content_RichTextAST']>;
};

type Content_HelpfulInfoUpdateManyLocalizationInput = {
  readonly data: Content_HelpfulInfoUpdateManyLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_HelpfulInfoUpdateManyLocalizationsInput = {
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_HelpfulInfoUpdateManyLocalizationInput>>;
};

type Content_HelpfulInfoUpdateManyWithNestedWhereInput = {
  /** Update many input */
  readonly data: Content_HelpfulInfoUpdateManyInput;
  /** Document search */
  readonly where: Content_HelpfulInfoWhereInput;
};

type Content_HelpfulInfoUpdateOneInlineInput = {
  /** Connect existing HelpfulInfo document */
  readonly connect: InputMaybe<Content_HelpfulInfoWhereUniqueInput>;
  /** Create and connect one HelpfulInfo document */
  readonly create: InputMaybe<Content_HelpfulInfoCreateInput>;
  /** Delete currently connected HelpfulInfo document */
  readonly delete: InputMaybe<Scalars['Boolean']>;
  /** Disconnect currently connected HelpfulInfo document */
  readonly disconnect: InputMaybe<Scalars['Boolean']>;
  /** Update single HelpfulInfo document */
  readonly update: InputMaybe<Content_HelpfulInfoUpdateWithNestedWhereUniqueInput>;
  /** Upsert single HelpfulInfo document */
  readonly upsert: InputMaybe<Content_HelpfulInfoUpsertWithNestedWhereUniqueInput>;
};

type Content_HelpfulInfoUpdateWithNestedWhereUniqueInput = {
  /** Document to update */
  readonly data: Content_HelpfulInfoUpdateInput;
  /** Unique document search */
  readonly where: Content_HelpfulInfoWhereUniqueInput;
};

type Content_HelpfulInfoUpsertInput = {
  /** Create document if it didn't exist */
  readonly create: Content_HelpfulInfoCreateInput;
  /** Update document if it exists */
  readonly update: Content_HelpfulInfoUpdateInput;
};

type Content_HelpfulInfoUpsertLocalizationInput = {
  readonly create: Content_HelpfulInfoCreateLocalizationDataInput;
  readonly locale: Content_Locale;
  readonly update: Content_HelpfulInfoUpdateLocalizationDataInput;
};

type Content_HelpfulInfoUpsertWithNestedWhereUniqueInput = {
  /** Upsert data */
  readonly data: Content_HelpfulInfoUpsertInput;
  /** Unique document search */
  readonly where: Content_HelpfulInfoWhereUniqueInput;
};

/** This contains a set of filters that can be used to compare values internally */
type Content_HelpfulInfoWhereComparatorInput = {
  /** This field can be used to request to check if the entry is outdated by internal comparison */
  readonly outdated_to: InputMaybe<Scalars['Boolean']>;
};

/** Identifies documents */
type Content_HelpfulInfoWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_HelpfulInfoWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_HelpfulInfoWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_HelpfulInfoWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_HelpfulInfoWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_HelpfulInfoWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_HelpfulInfoWhereStageInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** All values greater than the given value. */
  readonly stageNumber_gt: InputMaybe<Scalars['Int']>;
  /** All values greater than or equal the given value. */
  readonly stageNumber_gte: InputMaybe<Scalars['Int']>;
  /** All values that are contained in given list. */
  readonly stageNumber_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  /** All values less than the given value. */
  readonly stageNumber_lt: InputMaybe<Scalars['Int']>;
  /** All values less than or equal the given value. */
  readonly stageNumber_lte: InputMaybe<Scalars['Int']>;
  /** All values that are not equal to given value. */
  readonly stageNumber_not: InputMaybe<Scalars['Int']>;
  /** All values that are not contained in given list. */
  readonly stageNumber_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

/** The document in stages filter allows specifying a stage entry to cross compare the same document between different stages */
type Content_HelpfulInfoWhereStageInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_HelpfulInfoWhereStageInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_HelpfulInfoWhereStageInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_HelpfulInfoWhereStageInput>>;
  /** This field contains fields which can be set as true or false to specify an internal comparison */
  readonly compareWithParent: InputMaybe<Content_HelpfulInfoWhereComparatorInput>;
  /** Specify the stage to compare with */
  readonly stage: InputMaybe<Content_Stage>;
};

/** References HelpfulInfo record uniquely */
type Content_HelpfulInfoWhereUniqueInput = {
  readonly id: InputMaybe<Scalars['ID']>;
};

type Content_ImageFit =
  /** Resizes the image to fit within the specified parameters without distorting, cropping, or changing the aspect ratio. */
  | 'clip'
  /** Resizes the image to fit the specified parameters exactly by removing any parts of the image that don't fit within the boundaries. */
  | 'crop'
  /** Resizes the image to fit within the parameters, but as opposed to 'fit:clip' will not scale the image if the image is smaller than the output size. */
  | 'max'
  /** Resizes the image to fit the specified parameters exactly by scaling the image to the desired size. The aspect ratio of the image is not respected and the image can be distorted using this method. */
  | 'scale';

type Content_ImageResizeInput = {
  /** The default value for the fit parameter is fit:clip. */
  readonly fit: InputMaybe<Content_ImageFit>;
  /** The height in pixels to resize the image to. The value must be an integer from 1 to 10000. */
  readonly height: InputMaybe<Scalars['Int']>;
  /** The width in pixels to resize the image to. The value must be an integer from 1 to 10000. */
  readonly width: InputMaybe<Scalars['Int']>;
};

/** Transformations for Images */
type Content_ImageTransformationInput = {
  /** Resizes the image */
  readonly resize: InputMaybe<Content_ImageResizeInput>;
};

type Content_Info = Content_Node & {
  /** The time the document was created */
  readonly createdAt: Scalars['Content_DateTime'];
  /** User that created this document */
  readonly createdBy: Maybe<Content_User>;
  /** Get the document in other stages */
  readonly documentInStages: ReadonlyArray<Content_Info>;
  readonly helpfulInfo: Maybe<Content_HelpfulInfo>;
  /** List of Info versions */
  readonly history: ReadonlyArray<Content_Version>;
  /** The unique identifier */
  readonly id: Scalars['ID'];
  readonly image: ReadonlyArray<Content_Asset>;
  readonly infoBlock: ReadonlyArray<Content_RichText>;
  readonly intro: Maybe<Content_RichText>;
  /** System Locale field */
  readonly locale: Content_Locale;
  /** Get the other localizations for this document */
  readonly localizations: ReadonlyArray<Content_Info>;
  /** The time the document was published. Null on documents in draft stage. */
  readonly publishedAt: Maybe<Scalars['Content_DateTime']>;
  /** User that last published this document */
  readonly publishedBy: Maybe<Content_User>;
  readonly scheduledIn: ReadonlyArray<Content_ScheduledOperation>;
  readonly slider: ReadonlyArray<Content_RichText>;
  readonly slug: Maybe<Scalars['String']>;
  /** System stage field */
  readonly stage: Content_Stage;
  readonly title: Maybe<Scalars['String']>;
  /** The time the document was updated */
  readonly updatedAt: Scalars['Content_DateTime'];
  /** User that last updated this document */
  readonly updatedBy: Maybe<Content_User>;
};


type Content_Info_createdAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_Info_createdByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_Info_documentInStagesArgs = {
  includeCurrent?: Scalars['Boolean'];
  inheritLocale?: Scalars['Boolean'];
  stages?: ReadonlyArray<Content_Stage>;
};


type Content_Info_helpfulInfoArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_Info_historyArgs = {
  limit?: Scalars['Int'];
  skip?: Scalars['Int'];
  stageOverride: InputMaybe<Content_Stage>;
};


type Content_Info_imageArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  orderBy: InputMaybe<Content_AssetOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  where: InputMaybe<Content_AssetWhereInput>;
};


type Content_Info_localizationsArgs = {
  includeCurrent?: Scalars['Boolean'];
  locales?: ReadonlyArray<Content_Locale>;
};


type Content_Info_publishedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_Info_publishedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_Info_scheduledInArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  skip: InputMaybe<Scalars['Int']>;
  where: InputMaybe<Content_ScheduledOperationWhereInput>;
};


type Content_Info_updatedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_Info_updatedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};

type Content_InfoConnectInput = {
  /** Allow to specify document position in list of connected documents, will default to appending at end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Document to connect */
  readonly where: Content_InfoWhereUniqueInput;
};

/** A connection to a list of items. */
type Content_InfoConnection = {
  readonly aggregate: Content_Aggregate;
  /** A list of edges. */
  readonly edges: ReadonlyArray<Content_InfoEdge>;
  /** Information to aid in pagination. */
  readonly pageInfo: Content_PageInfo;
};

type Content_InfoCreateInput = {
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoCreateOneInlineInput>;
  readonly image: InputMaybe<Content_AssetCreateManyInlineInput>;
  /** infoBlock input for default locale (en) */
  readonly infoBlock: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  /** intro input for default locale (en) */
  readonly intro: InputMaybe<Scalars['Content_RichTextAST']>;
  /** Inline mutations for managing document localizations excluding the default locale */
  readonly localizations: InputMaybe<Content_InfoCreateLocalizationsInput>;
  /** slider input for default locale (en) */
  readonly slider: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  readonly slug: InputMaybe<Scalars['String']>;
  /** title input for default locale (en) */
  readonly title: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_InfoCreateLocalizationDataInput = {
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly infoBlock: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  readonly intro: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly slider: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  readonly title: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_InfoCreateLocalizationInput = {
  /** Localization input */
  readonly data: Content_InfoCreateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_InfoCreateLocalizationsInput = {
  /** Create localizations for the newly-created document */
  readonly create: InputMaybe<ReadonlyArray<Content_InfoCreateLocalizationInput>>;
};

type Content_InfoCreateManyInlineInput = {
  /** Connect multiple existing Info documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_InfoWhereUniqueInput>>;
  /** Create and connect multiple existing Info documents */
  readonly create: InputMaybe<ReadonlyArray<Content_InfoCreateInput>>;
};

type Content_InfoCreateOneInlineInput = {
  /** Connect one existing Info document */
  readonly connect: InputMaybe<Content_InfoWhereUniqueInput>;
  /** Create and connect one Info document */
  readonly create: InputMaybe<Content_InfoCreateInput>;
};

/** An edge in a connection. */
type Content_InfoEdge = {
  /** A cursor for use in pagination. */
  readonly cursor: Scalars['String'];
  /** The item at the end of the edge. */
  readonly node: Content_Info;
};

/** Identifies documents */
type Content_InfoManyWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_InfoWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_InfoWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_InfoWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_InfoWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_InfoWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_InfoWhereStageInput>;
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoWhereInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly image_every: InputMaybe<Content_AssetWhereInput>;
  readonly image_none: InputMaybe<Content_AssetWhereInput>;
  readonly image_some: InputMaybe<Content_AssetWhereInput>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly slug: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly slug_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly slug_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly slug_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly slug_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly slug_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly slug_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly slug_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly slug_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly slug_starts_with: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

type Content_InfoOrderByInput =
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'publishedAt_ASC'
  | 'publishedAt_DESC'
  | 'slug_ASC'
  | 'slug_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC';

type Content_InfoUpdateInput = {
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoUpdateOneInlineInput>;
  readonly image: InputMaybe<Content_AssetUpdateManyInlineInput>;
  /** infoBlock input for default locale (en) */
  readonly infoBlock: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  /** intro input for default locale (en) */
  readonly intro: InputMaybe<Scalars['Content_RichTextAST']>;
  /** Manage document localizations */
  readonly localizations: InputMaybe<Content_InfoUpdateLocalizationsInput>;
  /** slider input for default locale (en) */
  readonly slider: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  readonly slug: InputMaybe<Scalars['String']>;
  /** title input for default locale (en) */
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_InfoUpdateLocalizationDataInput = {
  readonly infoBlock: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  readonly intro: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly slider: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_InfoUpdateLocalizationInput = {
  readonly data: Content_InfoUpdateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_InfoUpdateLocalizationsInput = {
  /** Localizations to create */
  readonly create: InputMaybe<ReadonlyArray<Content_InfoCreateLocalizationInput>>;
  /** Localizations to delete */
  readonly delete: InputMaybe<ReadonlyArray<Content_Locale>>;
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_InfoUpdateLocalizationInput>>;
  readonly upsert: InputMaybe<ReadonlyArray<Content_InfoUpsertLocalizationInput>>;
};

type Content_InfoUpdateManyInlineInput = {
  /** Connect multiple existing Info documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_InfoConnectInput>>;
  /** Create and connect multiple Info documents */
  readonly create: InputMaybe<ReadonlyArray<Content_InfoCreateInput>>;
  /** Delete multiple Info documents */
  readonly delete: InputMaybe<ReadonlyArray<Content_InfoWhereUniqueInput>>;
  /** Disconnect multiple Info documents */
  readonly disconnect: InputMaybe<ReadonlyArray<Content_InfoWhereUniqueInput>>;
  /** Override currently-connected documents with multiple existing Info documents */
  readonly set: InputMaybe<ReadonlyArray<Content_InfoWhereUniqueInput>>;
  /** Update multiple Info documents */
  readonly update: InputMaybe<ReadonlyArray<Content_InfoUpdateWithNestedWhereUniqueInput>>;
  /** Upsert multiple Info documents */
  readonly upsert: InputMaybe<ReadonlyArray<Content_InfoUpsertWithNestedWhereUniqueInput>>;
};

type Content_InfoUpdateManyInput = {
  /** infoBlock input for default locale (en) */
  readonly infoBlock: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  /** intro input for default locale (en) */
  readonly intro: InputMaybe<Scalars['Content_RichTextAST']>;
  /** Optional updates to localizations */
  readonly localizations: InputMaybe<Content_InfoUpdateManyLocalizationsInput>;
  /** slider input for default locale (en) */
  readonly slider: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  /** title input for default locale (en) */
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_InfoUpdateManyLocalizationDataInput = {
  readonly infoBlock: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  readonly intro: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly slider: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_InfoUpdateManyLocalizationInput = {
  readonly data: Content_InfoUpdateManyLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_InfoUpdateManyLocalizationsInput = {
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_InfoUpdateManyLocalizationInput>>;
};

type Content_InfoUpdateManyWithNestedWhereInput = {
  /** Update many input */
  readonly data: Content_InfoUpdateManyInput;
  /** Document search */
  readonly where: Content_InfoWhereInput;
};

type Content_InfoUpdateOneInlineInput = {
  /** Connect existing Info document */
  readonly connect: InputMaybe<Content_InfoWhereUniqueInput>;
  /** Create and connect one Info document */
  readonly create: InputMaybe<Content_InfoCreateInput>;
  /** Delete currently connected Info document */
  readonly delete: InputMaybe<Scalars['Boolean']>;
  /** Disconnect currently connected Info document */
  readonly disconnect: InputMaybe<Scalars['Boolean']>;
  /** Update single Info document */
  readonly update: InputMaybe<Content_InfoUpdateWithNestedWhereUniqueInput>;
  /** Upsert single Info document */
  readonly upsert: InputMaybe<Content_InfoUpsertWithNestedWhereUniqueInput>;
};

type Content_InfoUpdateWithNestedWhereUniqueInput = {
  /** Document to update */
  readonly data: Content_InfoUpdateInput;
  /** Unique document search */
  readonly where: Content_InfoWhereUniqueInput;
};

type Content_InfoUpsertInput = {
  /** Create document if it didn't exist */
  readonly create: Content_InfoCreateInput;
  /** Update document if it exists */
  readonly update: Content_InfoUpdateInput;
};

type Content_InfoUpsertLocalizationInput = {
  readonly create: Content_InfoCreateLocalizationDataInput;
  readonly locale: Content_Locale;
  readonly update: Content_InfoUpdateLocalizationDataInput;
};

type Content_InfoUpsertWithNestedWhereUniqueInput = {
  /** Upsert data */
  readonly data: Content_InfoUpsertInput;
  /** Unique document search */
  readonly where: Content_InfoWhereUniqueInput;
};

/** This contains a set of filters that can be used to compare values internally */
type Content_InfoWhereComparatorInput = {
  /** This field can be used to request to check if the entry is outdated by internal comparison */
  readonly outdated_to: InputMaybe<Scalars['Boolean']>;
};

/** Identifies documents */
type Content_InfoWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_InfoWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_InfoWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_InfoWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_InfoWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_InfoWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_InfoWhereStageInput>;
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoWhereInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly image_every: InputMaybe<Content_AssetWhereInput>;
  readonly image_none: InputMaybe<Content_AssetWhereInput>;
  readonly image_some: InputMaybe<Content_AssetWhereInput>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly slug: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly slug_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly slug_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly slug_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly slug_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly slug_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly slug_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly slug_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly slug_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly slug_starts_with: InputMaybe<Scalars['String']>;
  readonly title: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly title_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly title_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly title_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly title_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly title_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly title_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly title_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly title_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly title_starts_with: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

/** The document in stages filter allows specifying a stage entry to cross compare the same document between different stages */
type Content_InfoWhereStageInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_InfoWhereStageInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_InfoWhereStageInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_InfoWhereStageInput>>;
  /** This field contains fields which can be set as true or false to specify an internal comparison */
  readonly compareWithParent: InputMaybe<Content_InfoWhereComparatorInput>;
  /** Specify the stage to compare with */
  readonly stage: InputMaybe<Content_Stage>;
};

/** References Info record uniquely */
type Content_InfoWhereUniqueInput = {
  readonly id: InputMaybe<Scalars['ID']>;
  readonly slug: InputMaybe<Scalars['String']>;
};

/** Locale system enumeration */
type Content_Locale =
  /** System locale */
  | 'en'
  | 'gd';

/** Representing a geolocation point with latitude and longitude */
type Content_Location = {
  readonly distance: Scalars['Float'];
  readonly latitude: Scalars['Float'];
  readonly longitude: Scalars['Float'];
};


/** Representing a geolocation point with latitude and longitude */
type Content_Location_distanceArgs = {
  from: Content_LocationInput;
};

/** Input for a geolocation point with latitude and longitude */
type Content_LocationInput = {
  readonly latitude: Scalars['Float'];
  readonly longitude: Scalars['Float'];
};

type Content_ModelBusinessPlan = Content_Node & {
  readonly capitalCosts: Maybe<Content_CapitalCosts>;
  /** The time the document was created */
  readonly createdAt: Scalars['Content_DateTime'];
  /** User that created this document */
  readonly createdBy: Maybe<Content_User>;
  readonly developmentOption: Scalars['String'];
  /** Get the document in other stages */
  readonly documentInStages: ReadonlyArray<Content_ModelBusinessPlan>;
  /** List of ModelBusinessPlan versions */
  readonly history: ReadonlyArray<Content_Version>;
  /** The unique identifier */
  readonly id: Scalars['ID'];
  /** System Locale field */
  readonly locale: Content_Locale;
  /** Get the other localizations for this document */
  readonly localizations: ReadonlyArray<Content_ModelBusinessPlan>;
  /** The time the document was published. Null on documents in draft stage. */
  readonly publishedAt: Maybe<Scalars['Content_DateTime']>;
  /** User that last published this document */
  readonly publishedBy: Maybe<Content_User>;
  readonly scheduledIn: ReadonlyArray<Content_ScheduledOperation>;
  /** System stage field */
  readonly stage: Content_Stage;
  /** The time the document was updated */
  readonly updatedAt: Scalars['Content_DateTime'];
  /** User that last updated this document */
  readonly updatedBy: Maybe<Content_User>;
};


type Content_ModelBusinessPlan_capitalCostsArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_ModelBusinessPlan_createdAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_ModelBusinessPlan_createdByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_ModelBusinessPlan_documentInStagesArgs = {
  includeCurrent?: Scalars['Boolean'];
  inheritLocale?: Scalars['Boolean'];
  stages?: ReadonlyArray<Content_Stage>;
};


type Content_ModelBusinessPlan_historyArgs = {
  limit?: Scalars['Int'];
  skip?: Scalars['Int'];
  stageOverride: InputMaybe<Content_Stage>;
};


type Content_ModelBusinessPlan_localizationsArgs = {
  includeCurrent?: Scalars['Boolean'];
  locales?: ReadonlyArray<Content_Locale>;
};


type Content_ModelBusinessPlan_publishedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_ModelBusinessPlan_publishedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_ModelBusinessPlan_scheduledInArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  skip: InputMaybe<Scalars['Int']>;
  where: InputMaybe<Content_ScheduledOperationWhereInput>;
};


type Content_ModelBusinessPlan_updatedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_ModelBusinessPlan_updatedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};

type Content_ModelBusinessPlanConnectInput = {
  /** Allow to specify document position in list of connected documents, will default to appending at end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Document to connect */
  readonly where: Content_ModelBusinessPlanWhereUniqueInput;
};

/** A connection to a list of items. */
type Content_ModelBusinessPlanConnection = {
  readonly aggregate: Content_Aggregate;
  /** A list of edges. */
  readonly edges: ReadonlyArray<Content_ModelBusinessPlanEdge>;
  /** Information to aid in pagination. */
  readonly pageInfo: Content_PageInfo;
};

type Content_ModelBusinessPlanCreateInput = {
  readonly capitalCosts: InputMaybe<Content_CapitalCostsCreateOneInlineInput>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** developmentOption input for default locale (en) */
  readonly developmentOption: Scalars['String'];
  /** Inline mutations for managing document localizations excluding the default locale */
  readonly localizations: InputMaybe<Content_ModelBusinessPlanCreateLocalizationsInput>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_ModelBusinessPlanCreateLocalizationDataInput = {
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly developmentOption: Scalars['String'];
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_ModelBusinessPlanCreateLocalizationInput = {
  /** Localization input */
  readonly data: Content_ModelBusinessPlanCreateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_ModelBusinessPlanCreateLocalizationsInput = {
  /** Create localizations for the newly-created document */
  readonly create: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanCreateLocalizationInput>>;
};

type Content_ModelBusinessPlanCreateManyInlineInput = {
  /** Connect multiple existing ModelBusinessPlan documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanWhereUniqueInput>>;
  /** Create and connect multiple existing ModelBusinessPlan documents */
  readonly create: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanCreateInput>>;
};

type Content_ModelBusinessPlanCreateOneInlineInput = {
  /** Connect one existing ModelBusinessPlan document */
  readonly connect: InputMaybe<Content_ModelBusinessPlanWhereUniqueInput>;
  /** Create and connect one ModelBusinessPlan document */
  readonly create: InputMaybe<Content_ModelBusinessPlanCreateInput>;
};

/** An edge in a connection. */
type Content_ModelBusinessPlanEdge = {
  /** A cursor for use in pagination. */
  readonly cursor: Scalars['String'];
  /** The item at the end of the edge. */
  readonly node: Content_ModelBusinessPlan;
};

/** Identifies documents */
type Content_ModelBusinessPlanManyWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly capitalCosts: InputMaybe<Content_CapitalCostsWhereInput>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_ModelBusinessPlanWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_ModelBusinessPlanWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_ModelBusinessPlanWhereStageInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

type Content_ModelBusinessPlanOrderByInput =
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'developmentOption_ASC'
  | 'developmentOption_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'publishedAt_ASC'
  | 'publishedAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC';

type Content_ModelBusinessPlanUpdateInput = {
  readonly capitalCosts: InputMaybe<Content_CapitalCostsUpdateOneInlineInput>;
  /** developmentOption input for default locale (en) */
  readonly developmentOption: InputMaybe<Scalars['String']>;
  /** Manage document localizations */
  readonly localizations: InputMaybe<Content_ModelBusinessPlanUpdateLocalizationsInput>;
};

type Content_ModelBusinessPlanUpdateLocalizationDataInput = {
  readonly developmentOption: InputMaybe<Scalars['String']>;
};

type Content_ModelBusinessPlanUpdateLocalizationInput = {
  readonly data: Content_ModelBusinessPlanUpdateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_ModelBusinessPlanUpdateLocalizationsInput = {
  /** Localizations to create */
  readonly create: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanCreateLocalizationInput>>;
  /** Localizations to delete */
  readonly delete: InputMaybe<ReadonlyArray<Content_Locale>>;
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanUpdateLocalizationInput>>;
  readonly upsert: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanUpsertLocalizationInput>>;
};

type Content_ModelBusinessPlanUpdateManyInlineInput = {
  /** Connect multiple existing ModelBusinessPlan documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanConnectInput>>;
  /** Create and connect multiple ModelBusinessPlan documents */
  readonly create: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanCreateInput>>;
  /** Delete multiple ModelBusinessPlan documents */
  readonly delete: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanWhereUniqueInput>>;
  /** Disconnect multiple ModelBusinessPlan documents */
  readonly disconnect: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanWhereUniqueInput>>;
  /** Override currently-connected documents with multiple existing ModelBusinessPlan documents */
  readonly set: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanWhereUniqueInput>>;
  /** Update multiple ModelBusinessPlan documents */
  readonly update: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanUpdateWithNestedWhereUniqueInput>>;
  /** Upsert multiple ModelBusinessPlan documents */
  readonly upsert: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanUpsertWithNestedWhereUniqueInput>>;
};

type Content_ModelBusinessPlanUpdateManyInput = {
  /** No fields in updateMany data input */
  readonly _: InputMaybe<Scalars['String']>;
};

type Content_ModelBusinessPlanUpdateManyWithNestedWhereInput = {
  /** Update many input */
  readonly data: Content_ModelBusinessPlanUpdateManyInput;
  /** Document search */
  readonly where: Content_ModelBusinessPlanWhereInput;
};

type Content_ModelBusinessPlanUpdateOneInlineInput = {
  /** Connect existing ModelBusinessPlan document */
  readonly connect: InputMaybe<Content_ModelBusinessPlanWhereUniqueInput>;
  /** Create and connect one ModelBusinessPlan document */
  readonly create: InputMaybe<Content_ModelBusinessPlanCreateInput>;
  /** Delete currently connected ModelBusinessPlan document */
  readonly delete: InputMaybe<Scalars['Boolean']>;
  /** Disconnect currently connected ModelBusinessPlan document */
  readonly disconnect: InputMaybe<Scalars['Boolean']>;
  /** Update single ModelBusinessPlan document */
  readonly update: InputMaybe<Content_ModelBusinessPlanUpdateWithNestedWhereUniqueInput>;
  /** Upsert single ModelBusinessPlan document */
  readonly upsert: InputMaybe<Content_ModelBusinessPlanUpsertWithNestedWhereUniqueInput>;
};

type Content_ModelBusinessPlanUpdateWithNestedWhereUniqueInput = {
  /** Document to update */
  readonly data: Content_ModelBusinessPlanUpdateInput;
  /** Unique document search */
  readonly where: Content_ModelBusinessPlanWhereUniqueInput;
};

type Content_ModelBusinessPlanUpsertInput = {
  /** Create document if it didn't exist */
  readonly create: Content_ModelBusinessPlanCreateInput;
  /** Update document if it exists */
  readonly update: Content_ModelBusinessPlanUpdateInput;
};

type Content_ModelBusinessPlanUpsertLocalizationInput = {
  readonly create: Content_ModelBusinessPlanCreateLocalizationDataInput;
  readonly locale: Content_Locale;
  readonly update: Content_ModelBusinessPlanUpdateLocalizationDataInput;
};

type Content_ModelBusinessPlanUpsertWithNestedWhereUniqueInput = {
  /** Upsert data */
  readonly data: Content_ModelBusinessPlanUpsertInput;
  /** Unique document search */
  readonly where: Content_ModelBusinessPlanWhereUniqueInput;
};

/** This contains a set of filters that can be used to compare values internally */
type Content_ModelBusinessPlanWhereComparatorInput = {
  /** This field can be used to request to check if the entry is outdated by internal comparison */
  readonly outdated_to: InputMaybe<Scalars['Boolean']>;
};

/** Identifies documents */
type Content_ModelBusinessPlanWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly capitalCosts: InputMaybe<Content_CapitalCostsWhereInput>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly developmentOption: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly developmentOption_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly developmentOption_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly developmentOption_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly developmentOption_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly developmentOption_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly developmentOption_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly developmentOption_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly developmentOption_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly developmentOption_starts_with: InputMaybe<Scalars['String']>;
  readonly documentInStages_every: InputMaybe<Content_ModelBusinessPlanWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_ModelBusinessPlanWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_ModelBusinessPlanWhereStageInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

/** The document in stages filter allows specifying a stage entry to cross compare the same document between different stages */
type Content_ModelBusinessPlanWhereStageInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanWhereStageInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanWhereStageInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_ModelBusinessPlanWhereStageInput>>;
  /** This field contains fields which can be set as true or false to specify an internal comparison */
  readonly compareWithParent: InputMaybe<Content_ModelBusinessPlanWhereComparatorInput>;
  /** Specify the stage to compare with */
  readonly stage: InputMaybe<Content_Stage>;
};

/** References ModelBusinessPlan record uniquely */
type Content_ModelBusinessPlanWhereUniqueInput = {
  readonly id: InputMaybe<Scalars['ID']>;
};

type Content_ModelSwot = Content_Node & {
  /** The time the document was created */
  readonly createdAt: Scalars['Content_DateTime'];
  /** User that created this document */
  readonly createdBy: Maybe<Content_User>;
  readonly developmentOption: Scalars['String'];
  /** Get the document in other stages */
  readonly documentInStages: ReadonlyArray<Content_ModelSwot>;
  /** List of ModelSwot versions */
  readonly history: ReadonlyArray<Content_Version>;
  /** The unique identifier */
  readonly id: Scalars['ID'];
  /** System Locale field */
  readonly locale: Content_Locale;
  /** Get the other localizations for this document */
  readonly localizations: ReadonlyArray<Content_ModelSwot>;
  readonly opportunities: Content_RichText;
  /** The time the document was published. Null on documents in draft stage. */
  readonly publishedAt: Maybe<Scalars['Content_DateTime']>;
  /** User that last published this document */
  readonly publishedBy: Maybe<Content_User>;
  readonly scheduledIn: ReadonlyArray<Content_ScheduledOperation>;
  /** System stage field */
  readonly stage: Content_Stage;
  readonly strengths: Content_RichText;
  readonly threats: Content_RichText;
  /** The time the document was updated */
  readonly updatedAt: Scalars['Content_DateTime'];
  /** User that last updated this document */
  readonly updatedBy: Maybe<Content_User>;
  readonly weaknesses: Content_RichText;
};


type Content_ModelSwot_createdAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_ModelSwot_createdByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_ModelSwot_documentInStagesArgs = {
  includeCurrent?: Scalars['Boolean'];
  inheritLocale?: Scalars['Boolean'];
  stages?: ReadonlyArray<Content_Stage>;
};


type Content_ModelSwot_historyArgs = {
  limit?: Scalars['Int'];
  skip?: Scalars['Int'];
  stageOverride: InputMaybe<Content_Stage>;
};


type Content_ModelSwot_localizationsArgs = {
  includeCurrent?: Scalars['Boolean'];
  locales?: ReadonlyArray<Content_Locale>;
};


type Content_ModelSwot_publishedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_ModelSwot_publishedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_ModelSwot_scheduledInArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  skip: InputMaybe<Scalars['Int']>;
  where: InputMaybe<Content_ScheduledOperationWhereInput>;
};


type Content_ModelSwot_updatedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_ModelSwot_updatedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};

type Content_ModelSwotConnectInput = {
  /** Allow to specify document position in list of connected documents, will default to appending at end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Document to connect */
  readonly where: Content_ModelSwotWhereUniqueInput;
};

/** A connection to a list of items. */
type Content_ModelSwotConnection = {
  readonly aggregate: Content_Aggregate;
  /** A list of edges. */
  readonly edges: ReadonlyArray<Content_ModelSwotEdge>;
  /** Information to aid in pagination. */
  readonly pageInfo: Content_PageInfo;
};

type Content_ModelSwotCreateInput = {
  readonly cl05hzmf71w3001xocg7ze5vq: InputMaybe<Content_DevelopmentOptionCreateManyInlineInput>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** developmentOption input for default locale (en) */
  readonly developmentOption: Scalars['String'];
  /** Inline mutations for managing document localizations excluding the default locale */
  readonly localizations: InputMaybe<Content_ModelSwotCreateLocalizationsInput>;
  /** opportunities input for default locale (en) */
  readonly opportunities: Scalars['Content_RichTextAST'];
  /** strengths input for default locale (en) */
  readonly strengths: Scalars['Content_RichTextAST'];
  /** threats input for default locale (en) */
  readonly threats: Scalars['Content_RichTextAST'];
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** weaknesses input for default locale (en) */
  readonly weaknesses: Scalars['Content_RichTextAST'];
};

type Content_ModelSwotCreateLocalizationDataInput = {
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly developmentOption: Scalars['String'];
  readonly opportunities: Scalars['Content_RichTextAST'];
  readonly strengths: Scalars['Content_RichTextAST'];
  readonly threats: Scalars['Content_RichTextAST'];
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly weaknesses: Scalars['Content_RichTextAST'];
};

type Content_ModelSwotCreateLocalizationInput = {
  /** Localization input */
  readonly data: Content_ModelSwotCreateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_ModelSwotCreateLocalizationsInput = {
  /** Create localizations for the newly-created document */
  readonly create: InputMaybe<ReadonlyArray<Content_ModelSwotCreateLocalizationInput>>;
};

type Content_ModelSwotCreateManyInlineInput = {
  /** Connect multiple existing ModelSwot documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_ModelSwotWhereUniqueInput>>;
  /** Create and connect multiple existing ModelSwot documents */
  readonly create: InputMaybe<ReadonlyArray<Content_ModelSwotCreateInput>>;
};

type Content_ModelSwotCreateOneInlineInput = {
  /** Connect one existing ModelSwot document */
  readonly connect: InputMaybe<Content_ModelSwotWhereUniqueInput>;
  /** Create and connect one ModelSwot document */
  readonly create: InputMaybe<Content_ModelSwotCreateInput>;
};

/** An edge in a connection. */
type Content_ModelSwotEdge = {
  /** A cursor for use in pagination. */
  readonly cursor: Scalars['String'];
  /** The item at the end of the edge. */
  readonly node: Content_ModelSwot;
};

/** Identifies documents */
type Content_ModelSwotManyWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_ModelSwotWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_ModelSwotWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_ModelSwotWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_ModelSwotWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_ModelSwotWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_ModelSwotWhereStageInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

type Content_ModelSwotOrderByInput =
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'developmentOption_ASC'
  | 'developmentOption_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'publishedAt_ASC'
  | 'publishedAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC';

type Content_ModelSwotUpdateInput = {
  readonly cl05hzmf71w3001xocg7ze5vq: InputMaybe<Content_DevelopmentOptionUpdateManyInlineInput>;
  /** developmentOption input for default locale (en) */
  readonly developmentOption: InputMaybe<Scalars['String']>;
  /** Manage document localizations */
  readonly localizations: InputMaybe<Content_ModelSwotUpdateLocalizationsInput>;
  /** opportunities input for default locale (en) */
  readonly opportunities: InputMaybe<Scalars['Content_RichTextAST']>;
  /** strengths input for default locale (en) */
  readonly strengths: InputMaybe<Scalars['Content_RichTextAST']>;
  /** threats input for default locale (en) */
  readonly threats: InputMaybe<Scalars['Content_RichTextAST']>;
  /** weaknesses input for default locale (en) */
  readonly weaknesses: InputMaybe<Scalars['Content_RichTextAST']>;
};

type Content_ModelSwotUpdateLocalizationDataInput = {
  readonly developmentOption: InputMaybe<Scalars['String']>;
  readonly opportunities: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly strengths: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly threats: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly weaknesses: InputMaybe<Scalars['Content_RichTextAST']>;
};

type Content_ModelSwotUpdateLocalizationInput = {
  readonly data: Content_ModelSwotUpdateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_ModelSwotUpdateLocalizationsInput = {
  /** Localizations to create */
  readonly create: InputMaybe<ReadonlyArray<Content_ModelSwotCreateLocalizationInput>>;
  /** Localizations to delete */
  readonly delete: InputMaybe<ReadonlyArray<Content_Locale>>;
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_ModelSwotUpdateLocalizationInput>>;
  readonly upsert: InputMaybe<ReadonlyArray<Content_ModelSwotUpsertLocalizationInput>>;
};

type Content_ModelSwotUpdateManyInlineInput = {
  /** Connect multiple existing ModelSwot documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_ModelSwotConnectInput>>;
  /** Create and connect multiple ModelSwot documents */
  readonly create: InputMaybe<ReadonlyArray<Content_ModelSwotCreateInput>>;
  /** Delete multiple ModelSwot documents */
  readonly delete: InputMaybe<ReadonlyArray<Content_ModelSwotWhereUniqueInput>>;
  /** Disconnect multiple ModelSwot documents */
  readonly disconnect: InputMaybe<ReadonlyArray<Content_ModelSwotWhereUniqueInput>>;
  /** Override currently-connected documents with multiple existing ModelSwot documents */
  readonly set: InputMaybe<ReadonlyArray<Content_ModelSwotWhereUniqueInput>>;
  /** Update multiple ModelSwot documents */
  readonly update: InputMaybe<ReadonlyArray<Content_ModelSwotUpdateWithNestedWhereUniqueInput>>;
  /** Upsert multiple ModelSwot documents */
  readonly upsert: InputMaybe<ReadonlyArray<Content_ModelSwotUpsertWithNestedWhereUniqueInput>>;
};

type Content_ModelSwotUpdateManyInput = {
  /** Optional updates to localizations */
  readonly localizations: InputMaybe<Content_ModelSwotUpdateManyLocalizationsInput>;
  /** opportunities input for default locale (en) */
  readonly opportunities: InputMaybe<Scalars['Content_RichTextAST']>;
  /** strengths input for default locale (en) */
  readonly strengths: InputMaybe<Scalars['Content_RichTextAST']>;
  /** threats input for default locale (en) */
  readonly threats: InputMaybe<Scalars['Content_RichTextAST']>;
  /** weaknesses input for default locale (en) */
  readonly weaknesses: InputMaybe<Scalars['Content_RichTextAST']>;
};

type Content_ModelSwotUpdateManyLocalizationDataInput = {
  readonly opportunities: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly strengths: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly threats: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly weaknesses: InputMaybe<Scalars['Content_RichTextAST']>;
};

type Content_ModelSwotUpdateManyLocalizationInput = {
  readonly data: Content_ModelSwotUpdateManyLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_ModelSwotUpdateManyLocalizationsInput = {
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_ModelSwotUpdateManyLocalizationInput>>;
};

type Content_ModelSwotUpdateManyWithNestedWhereInput = {
  /** Update many input */
  readonly data: Content_ModelSwotUpdateManyInput;
  /** Document search */
  readonly where: Content_ModelSwotWhereInput;
};

type Content_ModelSwotUpdateOneInlineInput = {
  /** Connect existing ModelSwot document */
  readonly connect: InputMaybe<Content_ModelSwotWhereUniqueInput>;
  /** Create and connect one ModelSwot document */
  readonly create: InputMaybe<Content_ModelSwotCreateInput>;
  /** Delete currently connected ModelSwot document */
  readonly delete: InputMaybe<Scalars['Boolean']>;
  /** Disconnect currently connected ModelSwot document */
  readonly disconnect: InputMaybe<Scalars['Boolean']>;
  /** Update single ModelSwot document */
  readonly update: InputMaybe<Content_ModelSwotUpdateWithNestedWhereUniqueInput>;
  /** Upsert single ModelSwot document */
  readonly upsert: InputMaybe<Content_ModelSwotUpsertWithNestedWhereUniqueInput>;
};

type Content_ModelSwotUpdateWithNestedWhereUniqueInput = {
  /** Document to update */
  readonly data: Content_ModelSwotUpdateInput;
  /** Unique document search */
  readonly where: Content_ModelSwotWhereUniqueInput;
};

type Content_ModelSwotUpsertInput = {
  /** Create document if it didn't exist */
  readonly create: Content_ModelSwotCreateInput;
  /** Update document if it exists */
  readonly update: Content_ModelSwotUpdateInput;
};

type Content_ModelSwotUpsertLocalizationInput = {
  readonly create: Content_ModelSwotCreateLocalizationDataInput;
  readonly locale: Content_Locale;
  readonly update: Content_ModelSwotUpdateLocalizationDataInput;
};

type Content_ModelSwotUpsertWithNestedWhereUniqueInput = {
  /** Upsert data */
  readonly data: Content_ModelSwotUpsertInput;
  /** Unique document search */
  readonly where: Content_ModelSwotWhereUniqueInput;
};

/** This contains a set of filters that can be used to compare values internally */
type Content_ModelSwotWhereComparatorInput = {
  /** This field can be used to request to check if the entry is outdated by internal comparison */
  readonly outdated_to: InputMaybe<Scalars['Boolean']>;
};

/** Identifies documents */
type Content_ModelSwotWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_ModelSwotWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_ModelSwotWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_ModelSwotWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly developmentOption: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly developmentOption_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly developmentOption_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly developmentOption_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly developmentOption_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly developmentOption_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly developmentOption_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly developmentOption_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly developmentOption_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly developmentOption_starts_with: InputMaybe<Scalars['String']>;
  readonly documentInStages_every: InputMaybe<Content_ModelSwotWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_ModelSwotWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_ModelSwotWhereStageInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

/** The document in stages filter allows specifying a stage entry to cross compare the same document between different stages */
type Content_ModelSwotWhereStageInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_ModelSwotWhereStageInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_ModelSwotWhereStageInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_ModelSwotWhereStageInput>>;
  /** This field contains fields which can be set as true or false to specify an internal comparison */
  readonly compareWithParent: InputMaybe<Content_ModelSwotWhereComparatorInput>;
  /** Specify the stage to compare with */
  readonly stage: InputMaybe<Content_Stage>;
};

/** References ModelSwot record uniquely */
type Content_ModelSwotWhereUniqueInput = {
  readonly id: InputMaybe<Scalars['ID']>;
};

/** An object with an ID */
type Content_Node = {
  /** The id of the object. */
  readonly id: Scalars['ID'];
  /** The Stage of an object */
  readonly stage: Content_Stage;
};

/** Information about pagination in a connection. */
type Content_PageInfo = {
  /** When paginating forwards, the cursor to continue. */
  readonly endCursor: Maybe<Scalars['String']>;
  /** When paginating forwards, are there more items? */
  readonly hasNextPage: Scalars['Boolean'];
  /** When paginating backwards, are there more items? */
  readonly hasPreviousPage: Scalars['Boolean'];
  /** Number of items in the current page. */
  readonly pageSize: Maybe<Scalars['Int']>;
  /** When paginating backwards, the cursor to continue. */
  readonly startCursor: Maybe<Scalars['String']>;
};

type Content_PresentationTipsPage = Content_Node & {
  /** The time the document was created */
  readonly createdAt: Scalars['Content_DateTime'];
  /** User that created this document */
  readonly createdBy: Maybe<Content_User>;
  /** Get the document in other stages */
  readonly documentInStages: ReadonlyArray<Content_PresentationTipsPage>;
  readonly helpfulInfo: Maybe<Content_HelpfulInfo>;
  /** List of PresentationTipsPage versions */
  readonly history: ReadonlyArray<Content_Version>;
  /** The unique identifier */
  readonly id: Scalars['ID'];
  readonly info: Maybe<Content_RichText>;
  readonly intro: Maybe<Scalars['String']>;
  /** System Locale field */
  readonly locale: Content_Locale;
  /** Get the other localizations for this document */
  readonly localizations: ReadonlyArray<Content_PresentationTipsPage>;
  /** The time the document was published. Null on documents in draft stage. */
  readonly publishedAt: Maybe<Scalars['Content_DateTime']>;
  /** User that last published this document */
  readonly publishedBy: Maybe<Content_User>;
  readonly scheduledIn: ReadonlyArray<Content_ScheduledOperation>;
  readonly slug: Maybe<Scalars['String']>;
  /** System stage field */
  readonly stage: Content_Stage;
  readonly stageNumber: Maybe<Scalars['Int']>;
  readonly tips: Maybe<Content_RichText>;
  readonly title: Maybe<Scalars['String']>;
  /** The time the document was updated */
  readonly updatedAt: Scalars['Content_DateTime'];
  /** User that last updated this document */
  readonly updatedBy: Maybe<Content_User>;
};


type Content_PresentationTipsPage_createdAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_PresentationTipsPage_createdByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_PresentationTipsPage_documentInStagesArgs = {
  includeCurrent?: Scalars['Boolean'];
  inheritLocale?: Scalars['Boolean'];
  stages?: ReadonlyArray<Content_Stage>;
};


type Content_PresentationTipsPage_helpfulInfoArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_PresentationTipsPage_historyArgs = {
  limit?: Scalars['Int'];
  skip?: Scalars['Int'];
  stageOverride: InputMaybe<Content_Stage>;
};


type Content_PresentationTipsPage_localizationsArgs = {
  includeCurrent?: Scalars['Boolean'];
  locales?: ReadonlyArray<Content_Locale>;
};


type Content_PresentationTipsPage_publishedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_PresentationTipsPage_publishedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_PresentationTipsPage_scheduledInArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  skip: InputMaybe<Scalars['Int']>;
  where: InputMaybe<Content_ScheduledOperationWhereInput>;
};


type Content_PresentationTipsPage_updatedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_PresentationTipsPage_updatedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};

type Content_PresentationTipsPageConnectInput = {
  /** Allow to specify document position in list of connected documents, will default to appending at end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Document to connect */
  readonly where: Content_PresentationTipsPageWhereUniqueInput;
};

/** A connection to a list of items. */
type Content_PresentationTipsPageConnection = {
  readonly aggregate: Content_Aggregate;
  /** A list of edges. */
  readonly edges: ReadonlyArray<Content_PresentationTipsPageEdge>;
  /** Information to aid in pagination. */
  readonly pageInfo: Content_PageInfo;
};

type Content_PresentationTipsPageCreateInput = {
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoCreateOneInlineInput>;
  /** info input for default locale (en) */
  readonly info: InputMaybe<Scalars['Content_RichTextAST']>;
  /** intro input for default locale (en) */
  readonly intro: InputMaybe<Scalars['String']>;
  /** Inline mutations for managing document localizations excluding the default locale */
  readonly localizations: InputMaybe<Content_PresentationTipsPageCreateLocalizationsInput>;
  readonly slug: InputMaybe<Scalars['String']>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** tips input for default locale (en) */
  readonly tips: InputMaybe<Scalars['Content_RichTextAST']>;
  /** title input for default locale (en) */
  readonly title: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_PresentationTipsPageCreateLocalizationDataInput = {
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly info: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly intro: InputMaybe<Scalars['String']>;
  readonly tips: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly title: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_PresentationTipsPageCreateLocalizationInput = {
  /** Localization input */
  readonly data: Content_PresentationTipsPageCreateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_PresentationTipsPageCreateLocalizationsInput = {
  /** Create localizations for the newly-created document */
  readonly create: InputMaybe<ReadonlyArray<Content_PresentationTipsPageCreateLocalizationInput>>;
};

type Content_PresentationTipsPageCreateManyInlineInput = {
  /** Connect multiple existing PresentationTipsPage documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_PresentationTipsPageWhereUniqueInput>>;
  /** Create and connect multiple existing PresentationTipsPage documents */
  readonly create: InputMaybe<ReadonlyArray<Content_PresentationTipsPageCreateInput>>;
};

type Content_PresentationTipsPageCreateOneInlineInput = {
  /** Connect one existing PresentationTipsPage document */
  readonly connect: InputMaybe<Content_PresentationTipsPageWhereUniqueInput>;
  /** Create and connect one PresentationTipsPage document */
  readonly create: InputMaybe<Content_PresentationTipsPageCreateInput>;
};

/** An edge in a connection. */
type Content_PresentationTipsPageEdge = {
  /** A cursor for use in pagination. */
  readonly cursor: Scalars['String'];
  /** The item at the end of the edge. */
  readonly node: Content_PresentationTipsPage;
};

/** Identifies documents */
type Content_PresentationTipsPageManyWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_PresentationTipsPageWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_PresentationTipsPageWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_PresentationTipsPageWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_PresentationTipsPageWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_PresentationTipsPageWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_PresentationTipsPageWhereStageInput>;
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoWhereInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly slug: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly slug_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly slug_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly slug_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly slug_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly slug_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly slug_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly slug_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly slug_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly slug_starts_with: InputMaybe<Scalars['String']>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** All values greater than the given value. */
  readonly stageNumber_gt: InputMaybe<Scalars['Int']>;
  /** All values greater than or equal the given value. */
  readonly stageNumber_gte: InputMaybe<Scalars['Int']>;
  /** All values that are contained in given list. */
  readonly stageNumber_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  /** All values less than the given value. */
  readonly stageNumber_lt: InputMaybe<Scalars['Int']>;
  /** All values less than or equal the given value. */
  readonly stageNumber_lte: InputMaybe<Scalars['Int']>;
  /** All values that are not equal to given value. */
  readonly stageNumber_not: InputMaybe<Scalars['Int']>;
  /** All values that are not contained in given list. */
  readonly stageNumber_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

type Content_PresentationTipsPageOrderByInput =
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'intro_ASC'
  | 'intro_DESC'
  | 'publishedAt_ASC'
  | 'publishedAt_DESC'
  | 'slug_ASC'
  | 'slug_DESC'
  | 'stageNumber_ASC'
  | 'stageNumber_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC';

type Content_PresentationTipsPageUpdateInput = {
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoUpdateOneInlineInput>;
  /** info input for default locale (en) */
  readonly info: InputMaybe<Scalars['Content_RichTextAST']>;
  /** intro input for default locale (en) */
  readonly intro: InputMaybe<Scalars['String']>;
  /** Manage document localizations */
  readonly localizations: InputMaybe<Content_PresentationTipsPageUpdateLocalizationsInput>;
  readonly slug: InputMaybe<Scalars['String']>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** tips input for default locale (en) */
  readonly tips: InputMaybe<Scalars['Content_RichTextAST']>;
  /** title input for default locale (en) */
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_PresentationTipsPageUpdateLocalizationDataInput = {
  readonly info: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly intro: InputMaybe<Scalars['String']>;
  readonly tips: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_PresentationTipsPageUpdateLocalizationInput = {
  readonly data: Content_PresentationTipsPageUpdateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_PresentationTipsPageUpdateLocalizationsInput = {
  /** Localizations to create */
  readonly create: InputMaybe<ReadonlyArray<Content_PresentationTipsPageCreateLocalizationInput>>;
  /** Localizations to delete */
  readonly delete: InputMaybe<ReadonlyArray<Content_Locale>>;
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_PresentationTipsPageUpdateLocalizationInput>>;
  readonly upsert: InputMaybe<ReadonlyArray<Content_PresentationTipsPageUpsertLocalizationInput>>;
};

type Content_PresentationTipsPageUpdateManyInlineInput = {
  /** Connect multiple existing PresentationTipsPage documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_PresentationTipsPageConnectInput>>;
  /** Create and connect multiple PresentationTipsPage documents */
  readonly create: InputMaybe<ReadonlyArray<Content_PresentationTipsPageCreateInput>>;
  /** Delete multiple PresentationTipsPage documents */
  readonly delete: InputMaybe<ReadonlyArray<Content_PresentationTipsPageWhereUniqueInput>>;
  /** Disconnect multiple PresentationTipsPage documents */
  readonly disconnect: InputMaybe<ReadonlyArray<Content_PresentationTipsPageWhereUniqueInput>>;
  /** Override currently-connected documents with multiple existing PresentationTipsPage documents */
  readonly set: InputMaybe<ReadonlyArray<Content_PresentationTipsPageWhereUniqueInput>>;
  /** Update multiple PresentationTipsPage documents */
  readonly update: InputMaybe<ReadonlyArray<Content_PresentationTipsPageUpdateWithNestedWhereUniqueInput>>;
  /** Upsert multiple PresentationTipsPage documents */
  readonly upsert: InputMaybe<ReadonlyArray<Content_PresentationTipsPageUpsertWithNestedWhereUniqueInput>>;
};

type Content_PresentationTipsPageUpdateManyInput = {
  /** info input for default locale (en) */
  readonly info: InputMaybe<Scalars['Content_RichTextAST']>;
  /** intro input for default locale (en) */
  readonly intro: InputMaybe<Scalars['String']>;
  /** Optional updates to localizations */
  readonly localizations: InputMaybe<Content_PresentationTipsPageUpdateManyLocalizationsInput>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** tips input for default locale (en) */
  readonly tips: InputMaybe<Scalars['Content_RichTextAST']>;
  /** title input for default locale (en) */
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_PresentationTipsPageUpdateManyLocalizationDataInput = {
  readonly info: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly intro: InputMaybe<Scalars['String']>;
  readonly tips: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_PresentationTipsPageUpdateManyLocalizationInput = {
  readonly data: Content_PresentationTipsPageUpdateManyLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_PresentationTipsPageUpdateManyLocalizationsInput = {
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_PresentationTipsPageUpdateManyLocalizationInput>>;
};

type Content_PresentationTipsPageUpdateManyWithNestedWhereInput = {
  /** Update many input */
  readonly data: Content_PresentationTipsPageUpdateManyInput;
  /** Document search */
  readonly where: Content_PresentationTipsPageWhereInput;
};

type Content_PresentationTipsPageUpdateOneInlineInput = {
  /** Connect existing PresentationTipsPage document */
  readonly connect: InputMaybe<Content_PresentationTipsPageWhereUniqueInput>;
  /** Create and connect one PresentationTipsPage document */
  readonly create: InputMaybe<Content_PresentationTipsPageCreateInput>;
  /** Delete currently connected PresentationTipsPage document */
  readonly delete: InputMaybe<Scalars['Boolean']>;
  /** Disconnect currently connected PresentationTipsPage document */
  readonly disconnect: InputMaybe<Scalars['Boolean']>;
  /** Update single PresentationTipsPage document */
  readonly update: InputMaybe<Content_PresentationTipsPageUpdateWithNestedWhereUniqueInput>;
  /** Upsert single PresentationTipsPage document */
  readonly upsert: InputMaybe<Content_PresentationTipsPageUpsertWithNestedWhereUniqueInput>;
};

type Content_PresentationTipsPageUpdateWithNestedWhereUniqueInput = {
  /** Document to update */
  readonly data: Content_PresentationTipsPageUpdateInput;
  /** Unique document search */
  readonly where: Content_PresentationTipsPageWhereUniqueInput;
};

type Content_PresentationTipsPageUpsertInput = {
  /** Create document if it didn't exist */
  readonly create: Content_PresentationTipsPageCreateInput;
  /** Update document if it exists */
  readonly update: Content_PresentationTipsPageUpdateInput;
};

type Content_PresentationTipsPageUpsertLocalizationInput = {
  readonly create: Content_PresentationTipsPageCreateLocalizationDataInput;
  readonly locale: Content_Locale;
  readonly update: Content_PresentationTipsPageUpdateLocalizationDataInput;
};

type Content_PresentationTipsPageUpsertWithNestedWhereUniqueInput = {
  /** Upsert data */
  readonly data: Content_PresentationTipsPageUpsertInput;
  /** Unique document search */
  readonly where: Content_PresentationTipsPageWhereUniqueInput;
};

/** This contains a set of filters that can be used to compare values internally */
type Content_PresentationTipsPageWhereComparatorInput = {
  /** This field can be used to request to check if the entry is outdated by internal comparison */
  readonly outdated_to: InputMaybe<Scalars['Boolean']>;
};

/** Identifies documents */
type Content_PresentationTipsPageWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_PresentationTipsPageWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_PresentationTipsPageWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_PresentationTipsPageWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_PresentationTipsPageWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_PresentationTipsPageWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_PresentationTipsPageWhereStageInput>;
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoWhereInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly intro: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly intro_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly intro_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly intro_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly intro_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly intro_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly intro_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly intro_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly intro_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly intro_starts_with: InputMaybe<Scalars['String']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly slug: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly slug_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly slug_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly slug_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly slug_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly slug_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly slug_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly slug_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly slug_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly slug_starts_with: InputMaybe<Scalars['String']>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** All values greater than the given value. */
  readonly stageNumber_gt: InputMaybe<Scalars['Int']>;
  /** All values greater than or equal the given value. */
  readonly stageNumber_gte: InputMaybe<Scalars['Int']>;
  /** All values that are contained in given list. */
  readonly stageNumber_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  /** All values less than the given value. */
  readonly stageNumber_lt: InputMaybe<Scalars['Int']>;
  /** All values less than or equal the given value. */
  readonly stageNumber_lte: InputMaybe<Scalars['Int']>;
  /** All values that are not equal to given value. */
  readonly stageNumber_not: InputMaybe<Scalars['Int']>;
  /** All values that are not contained in given list. */
  readonly stageNumber_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  readonly title: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly title_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly title_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly title_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly title_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly title_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly title_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly title_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly title_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly title_starts_with: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

/** The document in stages filter allows specifying a stage entry to cross compare the same document between different stages */
type Content_PresentationTipsPageWhereStageInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_PresentationTipsPageWhereStageInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_PresentationTipsPageWhereStageInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_PresentationTipsPageWhereStageInput>>;
  /** This field contains fields which can be set as true or false to specify an internal comparison */
  readonly compareWithParent: InputMaybe<Content_PresentationTipsPageWhereComparatorInput>;
  /** Specify the stage to compare with */
  readonly stage: InputMaybe<Content_Stage>;
};

/** References PresentationTipsPage record uniquely */
type Content_PresentationTipsPageWhereUniqueInput = {
  readonly id: InputMaybe<Scalars['ID']>;
  readonly slug: InputMaybe<Scalars['String']>;
};

type Content_PublishLocaleInput = {
  /** Locales to publish */
  readonly locale: Content_Locale;
  /** Stages to publish selected locales to */
  readonly stages: ReadonlyArray<Content_Stage>;
};

/** Representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba() */
type Content_RGBA = {
  readonly a: Scalars['Content_RGBATransparency'];
  readonly b: Scalars['Content_RGBAHue'];
  readonly g: Scalars['Content_RGBAHue'];
  readonly r: Scalars['Content_RGBAHue'];
};

/** Input type representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba() */
type Content_RGBAInput = {
  readonly a: Scalars['Content_RGBATransparency'];
  readonly b: Scalars['Content_RGBAHue'];
  readonly g: Scalars['Content_RGBAHue'];
  readonly r: Scalars['Content_RGBAHue'];
};

/** Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values */
type Content_RichText = {
  /** Returns HTMl representation */
  readonly html: Scalars['String'];
  /** Returns Markdown representation */
  readonly markdown: Scalars['String'];
  /** Returns AST representation */
  readonly raw: Scalars['Content_RichTextAST'];
  /** Returns plain-text contents of RichText */
  readonly text: Scalars['String'];
};

/** Scheduled Operation system model */
type Content_ScheduledOperation = Content_Node & {
  readonly affectedDocuments: ReadonlyArray<Content_ScheduledOperationAffectedDocument>;
  /** The time the document was created */
  readonly createdAt: Scalars['Content_DateTime'];
  /** User that created this document */
  readonly createdBy: Maybe<Content_User>;
  /** Operation description */
  readonly description: Maybe<Scalars['String']>;
  /** Get the document in other stages */
  readonly documentInStages: ReadonlyArray<Content_ScheduledOperation>;
  /** Operation error message */
  readonly errorMessage: Maybe<Scalars['String']>;
  /** The unique identifier */
  readonly id: Scalars['ID'];
  /** The time the document was published. Null on documents in draft stage. */
  readonly publishedAt: Maybe<Scalars['Content_DateTime']>;
  /** User that last published this document */
  readonly publishedBy: Maybe<Content_User>;
  /** Raw operation payload including all details, this field is subject to change */
  readonly rawPayload: Scalars['Content_Json'];
  /** The release this operation is scheduled for */
  readonly release: Maybe<Content_ScheduledRelease>;
  /** System stage field */
  readonly stage: Content_Stage;
  /** operation Status */
  readonly status: Content_ScheduledOperationStatus;
  /** The time the document was updated */
  readonly updatedAt: Scalars['Content_DateTime'];
  /** User that last updated this document */
  readonly updatedBy: Maybe<Content_User>;
};


/** Scheduled Operation system model */
type Content_ScheduledOperation_affectedDocumentsArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  skip: InputMaybe<Scalars['Int']>;
};


/** Scheduled Operation system model */
type Content_ScheduledOperation_createdByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


/** Scheduled Operation system model */
type Content_ScheduledOperation_documentInStagesArgs = {
  includeCurrent?: Scalars['Boolean'];
  inheritLocale?: Scalars['Boolean'];
  stages?: ReadonlyArray<Content_Stage>;
};


/** Scheduled Operation system model */
type Content_ScheduledOperation_publishedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


/** Scheduled Operation system model */
type Content_ScheduledOperation_releaseArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


/** Scheduled Operation system model */
type Content_ScheduledOperation_updatedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};

type Content_ScheduledOperationAffectedDocument = Content_Asset | Content_DevelopmentOption | Content_HelpfulInfo | Content_Info | Content_ModelBusinessPlan | Content_ModelSwot | Content_PresentationTipsPage | Content_StageLandingPage | Content_StageTask | Content_StageTaskPage | Content_TaskToComplete;

type Content_ScheduledOperationConnectInput = {
  /** Allow to specify document position in list of connected documents, will default to appending at end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Document to connect */
  readonly where: Content_ScheduledOperationWhereUniqueInput;
};

/** A connection to a list of items. */
type Content_ScheduledOperationConnection = {
  readonly aggregate: Content_Aggregate;
  /** A list of edges. */
  readonly edges: ReadonlyArray<Content_ScheduledOperationEdge>;
  /** Information to aid in pagination. */
  readonly pageInfo: Content_PageInfo;
};

type Content_ScheduledOperationCreateManyInlineInput = {
  /** Connect multiple existing ScheduledOperation documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_ScheduledOperationWhereUniqueInput>>;
};

type Content_ScheduledOperationCreateOneInlineInput = {
  /** Connect one existing ScheduledOperation document */
  readonly connect: InputMaybe<Content_ScheduledOperationWhereUniqueInput>;
};

/** An edge in a connection. */
type Content_ScheduledOperationEdge = {
  /** A cursor for use in pagination. */
  readonly cursor: Scalars['String'];
  /** The item at the end of the edge. */
  readonly node: Content_ScheduledOperation;
};

/** Identifies documents */
type Content_ScheduledOperationManyWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_ScheduledOperationWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_ScheduledOperationWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_ScheduledOperationWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly description: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly description_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly description_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly description_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly description_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly description_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly description_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly description_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly description_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly description_starts_with: InputMaybe<Scalars['String']>;
  readonly errorMessage: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly errorMessage_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly errorMessage_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly errorMessage_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly errorMessage_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly errorMessage_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly errorMessage_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly errorMessage_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly errorMessage_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly errorMessage_starts_with: InputMaybe<Scalars['String']>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly release: InputMaybe<Content_ScheduledReleaseWhereInput>;
  readonly status: InputMaybe<Content_ScheduledOperationStatus>;
  /** All values that are contained in given list. */
  readonly status_in: InputMaybe<ReadonlyArray<InputMaybe<Content_ScheduledOperationStatus>>>;
  /** All values that are not equal to given value. */
  readonly status_not: InputMaybe<Content_ScheduledOperationStatus>;
  /** All values that are not contained in given list. */
  readonly status_not_in: InputMaybe<ReadonlyArray<InputMaybe<Content_ScheduledOperationStatus>>>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

type Content_ScheduledOperationOrderByInput =
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'errorMessage_ASC'
  | 'errorMessage_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'publishedAt_ASC'
  | 'publishedAt_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC';

/** System Scheduled Operation Status */
type Content_ScheduledOperationStatus =
  | 'CANCELED'
  | 'COMPLETED'
  | 'FAILED'
  | 'IN_PROGRESS'
  | 'PENDING';

type Content_ScheduledOperationUpdateManyInlineInput = {
  /** Connect multiple existing ScheduledOperation documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_ScheduledOperationConnectInput>>;
  /** Disconnect multiple ScheduledOperation documents */
  readonly disconnect: InputMaybe<ReadonlyArray<Content_ScheduledOperationWhereUniqueInput>>;
  /** Override currently-connected documents with multiple existing ScheduledOperation documents */
  readonly set: InputMaybe<ReadonlyArray<Content_ScheduledOperationWhereUniqueInput>>;
};

type Content_ScheduledOperationUpdateOneInlineInput = {
  /** Connect existing ScheduledOperation document */
  readonly connect: InputMaybe<Content_ScheduledOperationWhereUniqueInput>;
  /** Disconnect currently connected ScheduledOperation document */
  readonly disconnect: InputMaybe<Scalars['Boolean']>;
};

/** Identifies documents */
type Content_ScheduledOperationWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_ScheduledOperationWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_ScheduledOperationWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_ScheduledOperationWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly description: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly description_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly description_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly description_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly description_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly description_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly description_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly description_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly description_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly description_starts_with: InputMaybe<Scalars['String']>;
  readonly errorMessage: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly errorMessage_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly errorMessage_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly errorMessage_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly errorMessage_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly errorMessage_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly errorMessage_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly errorMessage_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly errorMessage_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly errorMessage_starts_with: InputMaybe<Scalars['String']>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly release: InputMaybe<Content_ScheduledReleaseWhereInput>;
  readonly status: InputMaybe<Content_ScheduledOperationStatus>;
  /** All values that are contained in given list. */
  readonly status_in: InputMaybe<ReadonlyArray<InputMaybe<Content_ScheduledOperationStatus>>>;
  /** All values that are not equal to given value. */
  readonly status_not: InputMaybe<Content_ScheduledOperationStatus>;
  /** All values that are not contained in given list. */
  readonly status_not_in: InputMaybe<ReadonlyArray<InputMaybe<Content_ScheduledOperationStatus>>>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

/** References ScheduledOperation record uniquely */
type Content_ScheduledOperationWhereUniqueInput = {
  readonly id: InputMaybe<Scalars['ID']>;
};

/** Scheduled Release system model */
type Content_ScheduledRelease = Content_Node & {
  /** The time the document was created */
  readonly createdAt: Scalars['Content_DateTime'];
  /** User that created this document */
  readonly createdBy: Maybe<Content_User>;
  /** Release description */
  readonly description: Maybe<Scalars['String']>;
  /** Get the document in other stages */
  readonly documentInStages: ReadonlyArray<Content_ScheduledRelease>;
  /** Release error message */
  readonly errorMessage: Maybe<Scalars['String']>;
  /** The unique identifier */
  readonly id: Scalars['ID'];
  /** Whether scheduled release should be run */
  readonly isActive: Scalars['Boolean'];
  /** Whether scheduled release is implicit */
  readonly isImplicit: Scalars['Boolean'];
  /** Operations to run with this release */
  readonly operations: ReadonlyArray<Content_ScheduledOperation>;
  /** The time the document was published. Null on documents in draft stage. */
  readonly publishedAt: Maybe<Scalars['Content_DateTime']>;
  /** User that last published this document */
  readonly publishedBy: Maybe<Content_User>;
  /** Release date and time */
  readonly releaseAt: Maybe<Scalars['Content_DateTime']>;
  /** System stage field */
  readonly stage: Content_Stage;
  /** Release Status */
  readonly status: Content_ScheduledReleaseStatus;
  /** Release Title */
  readonly title: Maybe<Scalars['String']>;
  /** The time the document was updated */
  readonly updatedAt: Scalars['Content_DateTime'];
  /** User that last updated this document */
  readonly updatedBy: Maybe<Content_User>;
};


/** Scheduled Release system model */
type Content_ScheduledRelease_createdByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


/** Scheduled Release system model */
type Content_ScheduledRelease_documentInStagesArgs = {
  includeCurrent?: Scalars['Boolean'];
  inheritLocale?: Scalars['Boolean'];
  stages?: ReadonlyArray<Content_Stage>;
};


/** Scheduled Release system model */
type Content_ScheduledRelease_operationsArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  orderBy: InputMaybe<Content_ScheduledOperationOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  where: InputMaybe<Content_ScheduledOperationWhereInput>;
};


/** Scheduled Release system model */
type Content_ScheduledRelease_publishedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


/** Scheduled Release system model */
type Content_ScheduledRelease_updatedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};

type Content_ScheduledReleaseConnectInput = {
  /** Allow to specify document position in list of connected documents, will default to appending at end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Document to connect */
  readonly where: Content_ScheduledReleaseWhereUniqueInput;
};

/** A connection to a list of items. */
type Content_ScheduledReleaseConnection = {
  readonly aggregate: Content_Aggregate;
  /** A list of edges. */
  readonly edges: ReadonlyArray<Content_ScheduledReleaseEdge>;
  /** Information to aid in pagination. */
  readonly pageInfo: Content_PageInfo;
};

type Content_ScheduledReleaseCreateInput = {
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly description: InputMaybe<Scalars['String']>;
  readonly errorMessage: InputMaybe<Scalars['String']>;
  readonly isActive: InputMaybe<Scalars['Boolean']>;
  readonly releaseAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly title: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_ScheduledReleaseCreateManyInlineInput = {
  /** Connect multiple existing ScheduledRelease documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_ScheduledReleaseWhereUniqueInput>>;
  /** Create and connect multiple existing ScheduledRelease documents */
  readonly create: InputMaybe<ReadonlyArray<Content_ScheduledReleaseCreateInput>>;
};

type Content_ScheduledReleaseCreateOneInlineInput = {
  /** Connect one existing ScheduledRelease document */
  readonly connect: InputMaybe<Content_ScheduledReleaseWhereUniqueInput>;
  /** Create and connect one ScheduledRelease document */
  readonly create: InputMaybe<Content_ScheduledReleaseCreateInput>;
};

/** An edge in a connection. */
type Content_ScheduledReleaseEdge = {
  /** A cursor for use in pagination. */
  readonly cursor: Scalars['String'];
  /** The item at the end of the edge. */
  readonly node: Content_ScheduledRelease;
};

/** Identifies documents */
type Content_ScheduledReleaseManyWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_ScheduledReleaseWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_ScheduledReleaseWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_ScheduledReleaseWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly description: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly description_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly description_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly description_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly description_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly description_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly description_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly description_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly description_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly description_starts_with: InputMaybe<Scalars['String']>;
  readonly errorMessage: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly errorMessage_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly errorMessage_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly errorMessage_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly errorMessage_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly errorMessage_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly errorMessage_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly errorMessage_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly errorMessage_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly errorMessage_starts_with: InputMaybe<Scalars['String']>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly isActive: InputMaybe<Scalars['Boolean']>;
  /** All values that are not equal to given value. */
  readonly isActive_not: InputMaybe<Scalars['Boolean']>;
  readonly isImplicit: InputMaybe<Scalars['Boolean']>;
  /** All values that are not equal to given value. */
  readonly isImplicit_not: InputMaybe<Scalars['Boolean']>;
  readonly operations_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly operations_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly operations_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly releaseAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly releaseAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly releaseAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly releaseAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly releaseAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly releaseAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly releaseAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly releaseAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly status: InputMaybe<Content_ScheduledReleaseStatus>;
  /** All values that are contained in given list. */
  readonly status_in: InputMaybe<ReadonlyArray<InputMaybe<Content_ScheduledReleaseStatus>>>;
  /** All values that are not equal to given value. */
  readonly status_not: InputMaybe<Content_ScheduledReleaseStatus>;
  /** All values that are not contained in given list. */
  readonly status_not_in: InputMaybe<ReadonlyArray<InputMaybe<Content_ScheduledReleaseStatus>>>;
  readonly title: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly title_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly title_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly title_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly title_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly title_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly title_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly title_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly title_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly title_starts_with: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

type Content_ScheduledReleaseOrderByInput =
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'errorMessage_ASC'
  | 'errorMessage_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'isActive_ASC'
  | 'isActive_DESC'
  | 'isImplicit_ASC'
  | 'isImplicit_DESC'
  | 'publishedAt_ASC'
  | 'publishedAt_DESC'
  | 'releaseAt_ASC'
  | 'releaseAt_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC';

/** System Scheduled Release Status */
type Content_ScheduledReleaseStatus =
  | 'COMPLETED'
  | 'FAILED'
  | 'IN_PROGRESS'
  | 'PENDING';

type Content_ScheduledReleaseUpdateInput = {
  readonly description: InputMaybe<Scalars['String']>;
  readonly errorMessage: InputMaybe<Scalars['String']>;
  readonly isActive: InputMaybe<Scalars['Boolean']>;
  readonly releaseAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_ScheduledReleaseUpdateManyInlineInput = {
  /** Connect multiple existing ScheduledRelease documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_ScheduledReleaseConnectInput>>;
  /** Create and connect multiple ScheduledRelease documents */
  readonly create: InputMaybe<ReadonlyArray<Content_ScheduledReleaseCreateInput>>;
  /** Delete multiple ScheduledRelease documents */
  readonly delete: InputMaybe<ReadonlyArray<Content_ScheduledReleaseWhereUniqueInput>>;
  /** Disconnect multiple ScheduledRelease documents */
  readonly disconnect: InputMaybe<ReadonlyArray<Content_ScheduledReleaseWhereUniqueInput>>;
  /** Override currently-connected documents with multiple existing ScheduledRelease documents */
  readonly set: InputMaybe<ReadonlyArray<Content_ScheduledReleaseWhereUniqueInput>>;
  /** Update multiple ScheduledRelease documents */
  readonly update: InputMaybe<ReadonlyArray<Content_ScheduledReleaseUpdateWithNestedWhereUniqueInput>>;
  /** Upsert multiple ScheduledRelease documents */
  readonly upsert: InputMaybe<ReadonlyArray<Content_ScheduledReleaseUpsertWithNestedWhereUniqueInput>>;
};

type Content_ScheduledReleaseUpdateManyInput = {
  readonly description: InputMaybe<Scalars['String']>;
  readonly errorMessage: InputMaybe<Scalars['String']>;
  readonly isActive: InputMaybe<Scalars['Boolean']>;
  readonly releaseAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_ScheduledReleaseUpdateManyWithNestedWhereInput = {
  /** Update many input */
  readonly data: Content_ScheduledReleaseUpdateManyInput;
  /** Document search */
  readonly where: Content_ScheduledReleaseWhereInput;
};

type Content_ScheduledReleaseUpdateOneInlineInput = {
  /** Connect existing ScheduledRelease document */
  readonly connect: InputMaybe<Content_ScheduledReleaseWhereUniqueInput>;
  /** Create and connect one ScheduledRelease document */
  readonly create: InputMaybe<Content_ScheduledReleaseCreateInput>;
  /** Delete currently connected ScheduledRelease document */
  readonly delete: InputMaybe<Scalars['Boolean']>;
  /** Disconnect currently connected ScheduledRelease document */
  readonly disconnect: InputMaybe<Scalars['Boolean']>;
  /** Update single ScheduledRelease document */
  readonly update: InputMaybe<Content_ScheduledReleaseUpdateWithNestedWhereUniqueInput>;
  /** Upsert single ScheduledRelease document */
  readonly upsert: InputMaybe<Content_ScheduledReleaseUpsertWithNestedWhereUniqueInput>;
};

type Content_ScheduledReleaseUpdateWithNestedWhereUniqueInput = {
  /** Document to update */
  readonly data: Content_ScheduledReleaseUpdateInput;
  /** Unique document search */
  readonly where: Content_ScheduledReleaseWhereUniqueInput;
};

type Content_ScheduledReleaseUpsertInput = {
  /** Create document if it didn't exist */
  readonly create: Content_ScheduledReleaseCreateInput;
  /** Update document if it exists */
  readonly update: Content_ScheduledReleaseUpdateInput;
};

type Content_ScheduledReleaseUpsertWithNestedWhereUniqueInput = {
  /** Upsert data */
  readonly data: Content_ScheduledReleaseUpsertInput;
  /** Unique document search */
  readonly where: Content_ScheduledReleaseWhereUniqueInput;
};

/** Identifies documents */
type Content_ScheduledReleaseWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_ScheduledReleaseWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_ScheduledReleaseWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_ScheduledReleaseWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly description: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly description_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly description_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly description_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly description_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly description_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly description_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly description_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly description_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly description_starts_with: InputMaybe<Scalars['String']>;
  readonly errorMessage: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly errorMessage_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly errorMessage_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly errorMessage_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly errorMessage_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly errorMessage_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly errorMessage_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly errorMessage_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly errorMessage_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly errorMessage_starts_with: InputMaybe<Scalars['String']>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly isActive: InputMaybe<Scalars['Boolean']>;
  /** All values that are not equal to given value. */
  readonly isActive_not: InputMaybe<Scalars['Boolean']>;
  readonly isImplicit: InputMaybe<Scalars['Boolean']>;
  /** All values that are not equal to given value. */
  readonly isImplicit_not: InputMaybe<Scalars['Boolean']>;
  readonly operations_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly operations_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly operations_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly releaseAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly releaseAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly releaseAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly releaseAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly releaseAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly releaseAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly releaseAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly releaseAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly status: InputMaybe<Content_ScheduledReleaseStatus>;
  /** All values that are contained in given list. */
  readonly status_in: InputMaybe<ReadonlyArray<InputMaybe<Content_ScheduledReleaseStatus>>>;
  /** All values that are not equal to given value. */
  readonly status_not: InputMaybe<Content_ScheduledReleaseStatus>;
  /** All values that are not contained in given list. */
  readonly status_not_in: InputMaybe<ReadonlyArray<InputMaybe<Content_ScheduledReleaseStatus>>>;
  readonly title: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly title_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly title_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly title_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly title_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly title_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly title_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly title_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly title_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly title_starts_with: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

/** References ScheduledRelease record uniquely */
type Content_ScheduledReleaseWhereUniqueInput = {
  readonly id: InputMaybe<Scalars['ID']>;
};

/** Stage system enumeration */
type Content_Stage =
  /** The Draft is the default stage for all your content. */
  | 'DRAFT'
  /** The Published stage is where you can publish your content to. */
  | 'PUBLISHED';

type Content_StageLandingPage = Content_Node & {
  /** The time the document was created */
  readonly createdAt: Scalars['Content_DateTime'];
  /** User that created this document */
  readonly createdBy: Maybe<Content_User>;
  /** Get the document in other stages */
  readonly documentInStages: ReadonlyArray<Content_StageLandingPage>;
  readonly helpfulInfo: Maybe<Content_HelpfulInfo>;
  /** List of StageLandingPage versions */
  readonly history: ReadonlyArray<Content_Version>;
  /** The unique identifier */
  readonly id: Scalars['ID'];
  readonly infoLink: ReadonlyArray<Content_RichText>;
  /** System Locale field */
  readonly locale: Content_Locale;
  /** Get the other localizations for this document */
  readonly localizations: ReadonlyArray<Content_StageLandingPage>;
  /** The time the document was published. Null on documents in draft stage. */
  readonly publishedAt: Maybe<Scalars['Content_DateTime']>;
  /** User that last published this document */
  readonly publishedBy: Maybe<Content_User>;
  readonly scheduledIn: ReadonlyArray<Content_ScheduledOperation>;
  readonly slug: Maybe<Scalars['String']>;
  /** System stage field */
  readonly stage: Content_Stage;
  readonly stageInfo: Maybe<Content_RichText>;
  /** Questy box at top of landing page */
  readonly stageIntro: Scalars['String'];
  readonly stageIntroRich: Maybe<Content_RichText>;
  readonly stageNumber: Scalars['Int'];
  readonly stageTitle: Scalars['String'];
  readonly tasksToComplete: ReadonlyArray<Content_TaskToComplete>;
  /** The time the document was updated */
  readonly updatedAt: Scalars['Content_DateTime'];
  /** User that last updated this document */
  readonly updatedBy: Maybe<Content_User>;
};


type Content_StageLandingPage_createdAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_StageLandingPage_createdByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_StageLandingPage_documentInStagesArgs = {
  includeCurrent?: Scalars['Boolean'];
  inheritLocale?: Scalars['Boolean'];
  stages?: ReadonlyArray<Content_Stage>;
};


type Content_StageLandingPage_helpfulInfoArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_StageLandingPage_historyArgs = {
  limit?: Scalars['Int'];
  skip?: Scalars['Int'];
  stageOverride: InputMaybe<Content_Stage>;
};


type Content_StageLandingPage_localizationsArgs = {
  includeCurrent?: Scalars['Boolean'];
  locales?: ReadonlyArray<Content_Locale>;
};


type Content_StageLandingPage_publishedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_StageLandingPage_publishedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_StageLandingPage_scheduledInArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  skip: InputMaybe<Scalars['Int']>;
  where: InputMaybe<Content_ScheduledOperationWhereInput>;
};


type Content_StageLandingPage_tasksToCompleteArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  orderBy: InputMaybe<Content_TaskToCompleteOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  where: InputMaybe<Content_TaskToCompleteWhereInput>;
};


type Content_StageLandingPage_updatedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_StageLandingPage_updatedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};

type Content_StageLandingPageConnectInput = {
  /** Allow to specify document position in list of connected documents, will default to appending at end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Document to connect */
  readonly where: Content_StageLandingPageWhereUniqueInput;
};

/** A connection to a list of items. */
type Content_StageLandingPageConnection = {
  readonly aggregate: Content_Aggregate;
  /** A list of edges. */
  readonly edges: ReadonlyArray<Content_StageLandingPageEdge>;
  /** Information to aid in pagination. */
  readonly pageInfo: Content_PageInfo;
};

type Content_StageLandingPageCreateInput = {
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoCreateOneInlineInput>;
  /** infoLink input for default locale (en) */
  readonly infoLink: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  /** Inline mutations for managing document localizations excluding the default locale */
  readonly localizations: InputMaybe<Content_StageLandingPageCreateLocalizationsInput>;
  readonly slug: InputMaybe<Scalars['String']>;
  /** stageInfo input for default locale (en) */
  readonly stageInfo: InputMaybe<Scalars['Content_RichTextAST']>;
  /** stageIntro input for default locale (en) */
  readonly stageIntro: Scalars['String'];
  /** stageIntroRich input for default locale (en) */
  readonly stageIntroRich: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly stageNumber: Scalars['Int'];
  /** stageTitle input for default locale (en) */
  readonly stageTitle: Scalars['String'];
  readonly tasksToComplete: InputMaybe<Content_TaskToCompleteCreateManyInlineInput>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_StageLandingPageCreateLocalizationDataInput = {
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly infoLink: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  readonly stageInfo: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly stageIntro: Scalars['String'];
  readonly stageIntroRich: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly stageTitle: Scalars['String'];
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_StageLandingPageCreateLocalizationInput = {
  /** Localization input */
  readonly data: Content_StageLandingPageCreateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_StageLandingPageCreateLocalizationsInput = {
  /** Create localizations for the newly-created document */
  readonly create: InputMaybe<ReadonlyArray<Content_StageLandingPageCreateLocalizationInput>>;
};

type Content_StageLandingPageCreateManyInlineInput = {
  /** Connect multiple existing StageLandingPage documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_StageLandingPageWhereUniqueInput>>;
  /** Create and connect multiple existing StageLandingPage documents */
  readonly create: InputMaybe<ReadonlyArray<Content_StageLandingPageCreateInput>>;
};

type Content_StageLandingPageCreateOneInlineInput = {
  /** Connect one existing StageLandingPage document */
  readonly connect: InputMaybe<Content_StageLandingPageWhereUniqueInput>;
  /** Create and connect one StageLandingPage document */
  readonly create: InputMaybe<Content_StageLandingPageCreateInput>;
};

/** An edge in a connection. */
type Content_StageLandingPageEdge = {
  /** A cursor for use in pagination. */
  readonly cursor: Scalars['String'];
  /** The item at the end of the edge. */
  readonly node: Content_StageLandingPage;
};

/** Identifies documents */
type Content_StageLandingPageManyWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_StageLandingPageWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_StageLandingPageWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_StageLandingPageWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_StageLandingPageWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_StageLandingPageWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_StageLandingPageWhereStageInput>;
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoWhereInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly slug: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly slug_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly slug_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly slug_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly slug_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly slug_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly slug_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly slug_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly slug_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly slug_starts_with: InputMaybe<Scalars['String']>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** All values greater than the given value. */
  readonly stageNumber_gt: InputMaybe<Scalars['Int']>;
  /** All values greater than or equal the given value. */
  readonly stageNumber_gte: InputMaybe<Scalars['Int']>;
  /** All values that are contained in given list. */
  readonly stageNumber_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  /** All values less than the given value. */
  readonly stageNumber_lt: InputMaybe<Scalars['Int']>;
  /** All values less than or equal the given value. */
  readonly stageNumber_lte: InputMaybe<Scalars['Int']>;
  /** All values that are not equal to given value. */
  readonly stageNumber_not: InputMaybe<Scalars['Int']>;
  /** All values that are not contained in given list. */
  readonly stageNumber_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  readonly tasksToComplete_every: InputMaybe<Content_TaskToCompleteWhereInput>;
  readonly tasksToComplete_none: InputMaybe<Content_TaskToCompleteWhereInput>;
  readonly tasksToComplete_some: InputMaybe<Content_TaskToCompleteWhereInput>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

type Content_StageLandingPageOrderByInput =
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'publishedAt_ASC'
  | 'publishedAt_DESC'
  | 'slug_ASC'
  | 'slug_DESC'
  | 'stageIntro_ASC'
  | 'stageIntro_DESC'
  | 'stageNumber_ASC'
  | 'stageNumber_DESC'
  | 'stageTitle_ASC'
  | 'stageTitle_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC';

type Content_StageLandingPageUpdateInput = {
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoUpdateOneInlineInput>;
  /** infoLink input for default locale (en) */
  readonly infoLink: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  /** Manage document localizations */
  readonly localizations: InputMaybe<Content_StageLandingPageUpdateLocalizationsInput>;
  readonly slug: InputMaybe<Scalars['String']>;
  /** stageInfo input for default locale (en) */
  readonly stageInfo: InputMaybe<Scalars['Content_RichTextAST']>;
  /** stageIntro input for default locale (en) */
  readonly stageIntro: InputMaybe<Scalars['String']>;
  /** stageIntroRich input for default locale (en) */
  readonly stageIntroRich: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** stageTitle input for default locale (en) */
  readonly stageTitle: InputMaybe<Scalars['String']>;
  readonly tasksToComplete: InputMaybe<Content_TaskToCompleteUpdateManyInlineInput>;
};

type Content_StageLandingPageUpdateLocalizationDataInput = {
  readonly infoLink: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  readonly stageInfo: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly stageIntro: InputMaybe<Scalars['String']>;
  readonly stageIntroRich: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly stageTitle: InputMaybe<Scalars['String']>;
};

type Content_StageLandingPageUpdateLocalizationInput = {
  readonly data: Content_StageLandingPageUpdateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_StageLandingPageUpdateLocalizationsInput = {
  /** Localizations to create */
  readonly create: InputMaybe<ReadonlyArray<Content_StageLandingPageCreateLocalizationInput>>;
  /** Localizations to delete */
  readonly delete: InputMaybe<ReadonlyArray<Content_Locale>>;
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_StageLandingPageUpdateLocalizationInput>>;
  readonly upsert: InputMaybe<ReadonlyArray<Content_StageLandingPageUpsertLocalizationInput>>;
};

type Content_StageLandingPageUpdateManyInlineInput = {
  /** Connect multiple existing StageLandingPage documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_StageLandingPageConnectInput>>;
  /** Create and connect multiple StageLandingPage documents */
  readonly create: InputMaybe<ReadonlyArray<Content_StageLandingPageCreateInput>>;
  /** Delete multiple StageLandingPage documents */
  readonly delete: InputMaybe<ReadonlyArray<Content_StageLandingPageWhereUniqueInput>>;
  /** Disconnect multiple StageLandingPage documents */
  readonly disconnect: InputMaybe<ReadonlyArray<Content_StageLandingPageWhereUniqueInput>>;
  /** Override currently-connected documents with multiple existing StageLandingPage documents */
  readonly set: InputMaybe<ReadonlyArray<Content_StageLandingPageWhereUniqueInput>>;
  /** Update multiple StageLandingPage documents */
  readonly update: InputMaybe<ReadonlyArray<Content_StageLandingPageUpdateWithNestedWhereUniqueInput>>;
  /** Upsert multiple StageLandingPage documents */
  readonly upsert: InputMaybe<ReadonlyArray<Content_StageLandingPageUpsertWithNestedWhereUniqueInput>>;
};

type Content_StageLandingPageUpdateManyInput = {
  /** infoLink input for default locale (en) */
  readonly infoLink: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  /** Optional updates to localizations */
  readonly localizations: InputMaybe<Content_StageLandingPageUpdateManyLocalizationsInput>;
  /** stageInfo input for default locale (en) */
  readonly stageInfo: InputMaybe<Scalars['Content_RichTextAST']>;
  /** stageIntro input for default locale (en) */
  readonly stageIntro: InputMaybe<Scalars['String']>;
  /** stageIntroRich input for default locale (en) */
  readonly stageIntroRich: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
};

type Content_StageLandingPageUpdateManyLocalizationDataInput = {
  readonly infoLink: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  readonly stageInfo: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly stageIntro: InputMaybe<Scalars['String']>;
  readonly stageIntroRich: InputMaybe<Scalars['Content_RichTextAST']>;
};

type Content_StageLandingPageUpdateManyLocalizationInput = {
  readonly data: Content_StageLandingPageUpdateManyLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_StageLandingPageUpdateManyLocalizationsInput = {
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_StageLandingPageUpdateManyLocalizationInput>>;
};

type Content_StageLandingPageUpdateManyWithNestedWhereInput = {
  /** Update many input */
  readonly data: Content_StageLandingPageUpdateManyInput;
  /** Document search */
  readonly where: Content_StageLandingPageWhereInput;
};

type Content_StageLandingPageUpdateOneInlineInput = {
  /** Connect existing StageLandingPage document */
  readonly connect: InputMaybe<Content_StageLandingPageWhereUniqueInput>;
  /** Create and connect one StageLandingPage document */
  readonly create: InputMaybe<Content_StageLandingPageCreateInput>;
  /** Delete currently connected StageLandingPage document */
  readonly delete: InputMaybe<Scalars['Boolean']>;
  /** Disconnect currently connected StageLandingPage document */
  readonly disconnect: InputMaybe<Scalars['Boolean']>;
  /** Update single StageLandingPage document */
  readonly update: InputMaybe<Content_StageLandingPageUpdateWithNestedWhereUniqueInput>;
  /** Upsert single StageLandingPage document */
  readonly upsert: InputMaybe<Content_StageLandingPageUpsertWithNestedWhereUniqueInput>;
};

type Content_StageLandingPageUpdateWithNestedWhereUniqueInput = {
  /** Document to update */
  readonly data: Content_StageLandingPageUpdateInput;
  /** Unique document search */
  readonly where: Content_StageLandingPageWhereUniqueInput;
};

type Content_StageLandingPageUpsertInput = {
  /** Create document if it didn't exist */
  readonly create: Content_StageLandingPageCreateInput;
  /** Update document if it exists */
  readonly update: Content_StageLandingPageUpdateInput;
};

type Content_StageLandingPageUpsertLocalizationInput = {
  readonly create: Content_StageLandingPageCreateLocalizationDataInput;
  readonly locale: Content_Locale;
  readonly update: Content_StageLandingPageUpdateLocalizationDataInput;
};

type Content_StageLandingPageUpsertWithNestedWhereUniqueInput = {
  /** Upsert data */
  readonly data: Content_StageLandingPageUpsertInput;
  /** Unique document search */
  readonly where: Content_StageLandingPageWhereUniqueInput;
};

/** This contains a set of filters that can be used to compare values internally */
type Content_StageLandingPageWhereComparatorInput = {
  /** This field can be used to request to check if the entry is outdated by internal comparison */
  readonly outdated_to: InputMaybe<Scalars['Boolean']>;
};

/** Identifies documents */
type Content_StageLandingPageWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_StageLandingPageWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_StageLandingPageWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_StageLandingPageWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_StageLandingPageWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_StageLandingPageWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_StageLandingPageWhereStageInput>;
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoWhereInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly slug: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly slug_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly slug_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly slug_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly slug_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly slug_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly slug_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly slug_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly slug_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly slug_starts_with: InputMaybe<Scalars['String']>;
  readonly stageIntro: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly stageIntro_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly stageIntro_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly stageIntro_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly stageIntro_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly stageIntro_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly stageIntro_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly stageIntro_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly stageIntro_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly stageIntro_starts_with: InputMaybe<Scalars['String']>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** All values greater than the given value. */
  readonly stageNumber_gt: InputMaybe<Scalars['Int']>;
  /** All values greater than or equal the given value. */
  readonly stageNumber_gte: InputMaybe<Scalars['Int']>;
  /** All values that are contained in given list. */
  readonly stageNumber_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  /** All values less than the given value. */
  readonly stageNumber_lt: InputMaybe<Scalars['Int']>;
  /** All values less than or equal the given value. */
  readonly stageNumber_lte: InputMaybe<Scalars['Int']>;
  /** All values that are not equal to given value. */
  readonly stageNumber_not: InputMaybe<Scalars['Int']>;
  /** All values that are not contained in given list. */
  readonly stageNumber_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  readonly stageTitle: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly stageTitle_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly stageTitle_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly stageTitle_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly stageTitle_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly stageTitle_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly stageTitle_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly stageTitle_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly stageTitle_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly stageTitle_starts_with: InputMaybe<Scalars['String']>;
  readonly tasksToComplete_every: InputMaybe<Content_TaskToCompleteWhereInput>;
  readonly tasksToComplete_none: InputMaybe<Content_TaskToCompleteWhereInput>;
  readonly tasksToComplete_some: InputMaybe<Content_TaskToCompleteWhereInput>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

/** The document in stages filter allows specifying a stage entry to cross compare the same document between different stages */
type Content_StageLandingPageWhereStageInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_StageLandingPageWhereStageInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_StageLandingPageWhereStageInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_StageLandingPageWhereStageInput>>;
  /** This field contains fields which can be set as true or false to specify an internal comparison */
  readonly compareWithParent: InputMaybe<Content_StageLandingPageWhereComparatorInput>;
  /** Specify the stage to compare with */
  readonly stage: InputMaybe<Content_Stage>;
};

/** References StageLandingPage record uniquely */
type Content_StageLandingPageWhereUniqueInput = {
  readonly id: InputMaybe<Scalars['ID']>;
  readonly slug: InputMaybe<Scalars['String']>;
};

type Content_StageTask = Content_Node & {
  /** The time the document was created */
  readonly createdAt: Scalars['Content_DateTime'];
  /** User that created this document */
  readonly createdBy: Maybe<Content_User>;
  /** Get the document in other stages */
  readonly documentInStages: ReadonlyArray<Content_StageTask>;
  readonly helpfulInfo: Maybe<Content_HelpfulInfo>;
  /** List of StageTask versions */
  readonly history: ReadonlyArray<Content_Version>;
  /** The unique identifier */
  readonly id: Scalars['ID'];
  readonly intro: Maybe<Content_RichText>;
  /** System Locale field */
  readonly locale: Content_Locale;
  /** Get the other localizations for this document */
  readonly localizations: ReadonlyArray<Content_StageTask>;
  /** The time the document was published. Null on documents in draft stage. */
  readonly publishedAt: Maybe<Scalars['Content_DateTime']>;
  /** User that last published this document */
  readonly publishedBy: Maybe<Content_User>;
  readonly questions: ReadonlyArray<Content_RichText>;
  readonly scheduledIn: ReadonlyArray<Content_ScheduledOperation>;
  /** System stage field */
  readonly stage: Content_Stage;
  readonly stageNumber: Maybe<Scalars['Int']>;
  readonly submittedText: Maybe<Content_RichText>;
  readonly title: Maybe<Scalars['String']>;
  /** The time the document was updated */
  readonly updatedAt: Scalars['Content_DateTime'];
  /** User that last updated this document */
  readonly updatedBy: Maybe<Content_User>;
};


type Content_StageTask_createdAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_StageTask_createdByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_StageTask_documentInStagesArgs = {
  includeCurrent?: Scalars['Boolean'];
  inheritLocale?: Scalars['Boolean'];
  stages?: ReadonlyArray<Content_Stage>;
};


type Content_StageTask_helpfulInfoArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_StageTask_historyArgs = {
  limit?: Scalars['Int'];
  skip?: Scalars['Int'];
  stageOverride: InputMaybe<Content_Stage>;
};


type Content_StageTask_localizationsArgs = {
  includeCurrent?: Scalars['Boolean'];
  locales?: ReadonlyArray<Content_Locale>;
};


type Content_StageTask_publishedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_StageTask_publishedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_StageTask_scheduledInArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  skip: InputMaybe<Scalars['Int']>;
  where: InputMaybe<Content_ScheduledOperationWhereInput>;
};


type Content_StageTask_updatedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_StageTask_updatedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};

type Content_StageTaskConnectInput = {
  /** Allow to specify document position in list of connected documents, will default to appending at end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Document to connect */
  readonly where: Content_StageTaskWhereUniqueInput;
};

/** A connection to a list of items. */
type Content_StageTaskConnection = {
  readonly aggregate: Content_Aggregate;
  /** A list of edges. */
  readonly edges: ReadonlyArray<Content_StageTaskEdge>;
  /** Information to aid in pagination. */
  readonly pageInfo: Content_PageInfo;
};

type Content_StageTaskCreateInput = {
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoCreateOneInlineInput>;
  /** intro input for default locale (en) */
  readonly intro: InputMaybe<Scalars['Content_RichTextAST']>;
  /** Inline mutations for managing document localizations excluding the default locale */
  readonly localizations: InputMaybe<Content_StageTaskCreateLocalizationsInput>;
  /** questions input for default locale (en) */
  readonly questions: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** submittedText input for default locale (en) */
  readonly submittedText: InputMaybe<Scalars['Content_RichTextAST']>;
  /** title input for default locale (en) */
  readonly title: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_StageTaskCreateLocalizationDataInput = {
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly intro: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly questions: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  readonly submittedText: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly title: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_StageTaskCreateLocalizationInput = {
  /** Localization input */
  readonly data: Content_StageTaskCreateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_StageTaskCreateLocalizationsInput = {
  /** Create localizations for the newly-created document */
  readonly create: InputMaybe<ReadonlyArray<Content_StageTaskCreateLocalizationInput>>;
};

type Content_StageTaskCreateManyInlineInput = {
  /** Connect multiple existing StageTask documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_StageTaskWhereUniqueInput>>;
  /** Create and connect multiple existing StageTask documents */
  readonly create: InputMaybe<ReadonlyArray<Content_StageTaskCreateInput>>;
};

type Content_StageTaskCreateOneInlineInput = {
  /** Connect one existing StageTask document */
  readonly connect: InputMaybe<Content_StageTaskWhereUniqueInput>;
  /** Create and connect one StageTask document */
  readonly create: InputMaybe<Content_StageTaskCreateInput>;
};

/** An edge in a connection. */
type Content_StageTaskEdge = {
  /** A cursor for use in pagination. */
  readonly cursor: Scalars['String'];
  /** The item at the end of the edge. */
  readonly node: Content_StageTask;
};

/** Identifies documents */
type Content_StageTaskManyWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_StageTaskWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_StageTaskWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_StageTaskWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_StageTaskWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_StageTaskWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_StageTaskWhereStageInput>;
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoWhereInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** All values greater than the given value. */
  readonly stageNumber_gt: InputMaybe<Scalars['Int']>;
  /** All values greater than or equal the given value. */
  readonly stageNumber_gte: InputMaybe<Scalars['Int']>;
  /** All values that are contained in given list. */
  readonly stageNumber_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  /** All values less than the given value. */
  readonly stageNumber_lt: InputMaybe<Scalars['Int']>;
  /** All values less than or equal the given value. */
  readonly stageNumber_lte: InputMaybe<Scalars['Int']>;
  /** All values that are not equal to given value. */
  readonly stageNumber_not: InputMaybe<Scalars['Int']>;
  /** All values that are not contained in given list. */
  readonly stageNumber_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

type Content_StageTaskOrderByInput =
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'publishedAt_ASC'
  | 'publishedAt_DESC'
  | 'stageNumber_ASC'
  | 'stageNumber_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC';

type Content_StageTaskPage = Content_Node & {
  /** The time the document was created */
  readonly createdAt: Scalars['Content_DateTime'];
  /** User that created this document */
  readonly createdBy: Maybe<Content_User>;
  /** Get the document in other stages */
  readonly documentInStages: ReadonlyArray<Content_StageTaskPage>;
  readonly helpfulInfo: Maybe<Content_HelpfulInfo>;
  /** List of StageTaskPage versions */
  readonly history: ReadonlyArray<Content_Version>;
  /** The unique identifier */
  readonly id: Scalars['ID'];
  /** System Locale field */
  readonly locale: Content_Locale;
  /** Get the other localizations for this document */
  readonly localizations: ReadonlyArray<Content_StageTaskPage>;
  /** The time the document was published. Null on documents in draft stage. */
  readonly publishedAt: Maybe<Scalars['Content_DateTime']>;
  /** User that last published this document */
  readonly publishedBy: Maybe<Content_User>;
  readonly scheduledIn: ReadonlyArray<Content_ScheduledOperation>;
  /** System stage field */
  readonly stage: Content_Stage;
  readonly stageNumber: Maybe<Scalars['Int']>;
  readonly submittedText: Maybe<Content_RichText>;
  readonly taskInfo: Maybe<Content_RichText>;
  readonly tasksToComplete: ReadonlyArray<Content_TaskToComplete>;
  readonly title: Maybe<Scalars['String']>;
  /** The time the document was updated */
  readonly updatedAt: Scalars['Content_DateTime'];
  /** User that last updated this document */
  readonly updatedBy: Maybe<Content_User>;
};


type Content_StageTaskPage_createdAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_StageTaskPage_createdByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_StageTaskPage_documentInStagesArgs = {
  includeCurrent?: Scalars['Boolean'];
  inheritLocale?: Scalars['Boolean'];
  stages?: ReadonlyArray<Content_Stage>;
};


type Content_StageTaskPage_helpfulInfoArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_StageTaskPage_historyArgs = {
  limit?: Scalars['Int'];
  skip?: Scalars['Int'];
  stageOverride: InputMaybe<Content_Stage>;
};


type Content_StageTaskPage_localizationsArgs = {
  includeCurrent?: Scalars['Boolean'];
  locales?: ReadonlyArray<Content_Locale>;
};


type Content_StageTaskPage_publishedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_StageTaskPage_publishedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_StageTaskPage_scheduledInArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  skip: InputMaybe<Scalars['Int']>;
  where: InputMaybe<Content_ScheduledOperationWhereInput>;
};


type Content_StageTaskPage_tasksToCompleteArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  orderBy: InputMaybe<Content_TaskToCompleteOrderByInput>;
  skip: InputMaybe<Scalars['Int']>;
  where: InputMaybe<Content_TaskToCompleteWhereInput>;
};


type Content_StageTaskPage_updatedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_StageTaskPage_updatedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};

type Content_StageTaskPageConnectInput = {
  /** Allow to specify document position in list of connected documents, will default to appending at end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Document to connect */
  readonly where: Content_StageTaskPageWhereUniqueInput;
};

/** A connection to a list of items. */
type Content_StageTaskPageConnection = {
  readonly aggregate: Content_Aggregate;
  /** A list of edges. */
  readonly edges: ReadonlyArray<Content_StageTaskPageEdge>;
  /** Information to aid in pagination. */
  readonly pageInfo: Content_PageInfo;
};

type Content_StageTaskPageCreateInput = {
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoCreateOneInlineInput>;
  /** Inline mutations for managing document localizations excluding the default locale */
  readonly localizations: InputMaybe<Content_StageTaskPageCreateLocalizationsInput>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** submittedText input for default locale (en) */
  readonly submittedText: InputMaybe<Scalars['Content_RichTextAST']>;
  /** taskInfo input for default locale (en) */
  readonly taskInfo: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly tasksToComplete: InputMaybe<Content_TaskToCompleteCreateManyInlineInput>;
  /** title input for default locale (en) */
  readonly title: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_StageTaskPageCreateLocalizationDataInput = {
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly submittedText: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly taskInfo: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly title: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_StageTaskPageCreateLocalizationInput = {
  /** Localization input */
  readonly data: Content_StageTaskPageCreateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_StageTaskPageCreateLocalizationsInput = {
  /** Create localizations for the newly-created document */
  readonly create: InputMaybe<ReadonlyArray<Content_StageTaskPageCreateLocalizationInput>>;
};

type Content_StageTaskPageCreateManyInlineInput = {
  /** Connect multiple existing StageTaskPage documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_StageTaskPageWhereUniqueInput>>;
  /** Create and connect multiple existing StageTaskPage documents */
  readonly create: InputMaybe<ReadonlyArray<Content_StageTaskPageCreateInput>>;
};

type Content_StageTaskPageCreateOneInlineInput = {
  /** Connect one existing StageTaskPage document */
  readonly connect: InputMaybe<Content_StageTaskPageWhereUniqueInput>;
  /** Create and connect one StageTaskPage document */
  readonly create: InputMaybe<Content_StageTaskPageCreateInput>;
};

/** An edge in a connection. */
type Content_StageTaskPageEdge = {
  /** A cursor for use in pagination. */
  readonly cursor: Scalars['String'];
  /** The item at the end of the edge. */
  readonly node: Content_StageTaskPage;
};

/** Identifies documents */
type Content_StageTaskPageManyWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_StageTaskPageWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_StageTaskPageWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_StageTaskPageWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_StageTaskPageWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_StageTaskPageWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_StageTaskPageWhereStageInput>;
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoWhereInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** All values greater than the given value. */
  readonly stageNumber_gt: InputMaybe<Scalars['Int']>;
  /** All values greater than or equal the given value. */
  readonly stageNumber_gte: InputMaybe<Scalars['Int']>;
  /** All values that are contained in given list. */
  readonly stageNumber_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  /** All values less than the given value. */
  readonly stageNumber_lt: InputMaybe<Scalars['Int']>;
  /** All values less than or equal the given value. */
  readonly stageNumber_lte: InputMaybe<Scalars['Int']>;
  /** All values that are not equal to given value. */
  readonly stageNumber_not: InputMaybe<Scalars['Int']>;
  /** All values that are not contained in given list. */
  readonly stageNumber_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  readonly tasksToComplete_every: InputMaybe<Content_TaskToCompleteWhereInput>;
  readonly tasksToComplete_none: InputMaybe<Content_TaskToCompleteWhereInput>;
  readonly tasksToComplete_some: InputMaybe<Content_TaskToCompleteWhereInput>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

type Content_StageTaskPageOrderByInput =
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'publishedAt_ASC'
  | 'publishedAt_DESC'
  | 'stageNumber_ASC'
  | 'stageNumber_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC';

type Content_StageTaskPageUpdateInput = {
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoUpdateOneInlineInput>;
  /** Manage document localizations */
  readonly localizations: InputMaybe<Content_StageTaskPageUpdateLocalizationsInput>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** submittedText input for default locale (en) */
  readonly submittedText: InputMaybe<Scalars['Content_RichTextAST']>;
  /** taskInfo input for default locale (en) */
  readonly taskInfo: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly tasksToComplete: InputMaybe<Content_TaskToCompleteUpdateManyInlineInput>;
  /** title input for default locale (en) */
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_StageTaskPageUpdateLocalizationDataInput = {
  readonly submittedText: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly taskInfo: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_StageTaskPageUpdateLocalizationInput = {
  readonly data: Content_StageTaskPageUpdateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_StageTaskPageUpdateLocalizationsInput = {
  /** Localizations to create */
  readonly create: InputMaybe<ReadonlyArray<Content_StageTaskPageCreateLocalizationInput>>;
  /** Localizations to delete */
  readonly delete: InputMaybe<ReadonlyArray<Content_Locale>>;
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_StageTaskPageUpdateLocalizationInput>>;
  readonly upsert: InputMaybe<ReadonlyArray<Content_StageTaskPageUpsertLocalizationInput>>;
};

type Content_StageTaskPageUpdateManyInlineInput = {
  /** Connect multiple existing StageTaskPage documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_StageTaskPageConnectInput>>;
  /** Create and connect multiple StageTaskPage documents */
  readonly create: InputMaybe<ReadonlyArray<Content_StageTaskPageCreateInput>>;
  /** Delete multiple StageTaskPage documents */
  readonly delete: InputMaybe<ReadonlyArray<Content_StageTaskPageWhereUniqueInput>>;
  /** Disconnect multiple StageTaskPage documents */
  readonly disconnect: InputMaybe<ReadonlyArray<Content_StageTaskPageWhereUniqueInput>>;
  /** Override currently-connected documents with multiple existing StageTaskPage documents */
  readonly set: InputMaybe<ReadonlyArray<Content_StageTaskPageWhereUniqueInput>>;
  /** Update multiple StageTaskPage documents */
  readonly update: InputMaybe<ReadonlyArray<Content_StageTaskPageUpdateWithNestedWhereUniqueInput>>;
  /** Upsert multiple StageTaskPage documents */
  readonly upsert: InputMaybe<ReadonlyArray<Content_StageTaskPageUpsertWithNestedWhereUniqueInput>>;
};

type Content_StageTaskPageUpdateManyInput = {
  /** Optional updates to localizations */
  readonly localizations: InputMaybe<Content_StageTaskPageUpdateManyLocalizationsInput>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** submittedText input for default locale (en) */
  readonly submittedText: InputMaybe<Scalars['Content_RichTextAST']>;
  /** taskInfo input for default locale (en) */
  readonly taskInfo: InputMaybe<Scalars['Content_RichTextAST']>;
  /** title input for default locale (en) */
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_StageTaskPageUpdateManyLocalizationDataInput = {
  readonly submittedText: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly taskInfo: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_StageTaskPageUpdateManyLocalizationInput = {
  readonly data: Content_StageTaskPageUpdateManyLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_StageTaskPageUpdateManyLocalizationsInput = {
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_StageTaskPageUpdateManyLocalizationInput>>;
};

type Content_StageTaskPageUpdateManyWithNestedWhereInput = {
  /** Update many input */
  readonly data: Content_StageTaskPageUpdateManyInput;
  /** Document search */
  readonly where: Content_StageTaskPageWhereInput;
};

type Content_StageTaskPageUpdateOneInlineInput = {
  /** Connect existing StageTaskPage document */
  readonly connect: InputMaybe<Content_StageTaskPageWhereUniqueInput>;
  /** Create and connect one StageTaskPage document */
  readonly create: InputMaybe<Content_StageTaskPageCreateInput>;
  /** Delete currently connected StageTaskPage document */
  readonly delete: InputMaybe<Scalars['Boolean']>;
  /** Disconnect currently connected StageTaskPage document */
  readonly disconnect: InputMaybe<Scalars['Boolean']>;
  /** Update single StageTaskPage document */
  readonly update: InputMaybe<Content_StageTaskPageUpdateWithNestedWhereUniqueInput>;
  /** Upsert single StageTaskPage document */
  readonly upsert: InputMaybe<Content_StageTaskPageUpsertWithNestedWhereUniqueInput>;
};

type Content_StageTaskPageUpdateWithNestedWhereUniqueInput = {
  /** Document to update */
  readonly data: Content_StageTaskPageUpdateInput;
  /** Unique document search */
  readonly where: Content_StageTaskPageWhereUniqueInput;
};

type Content_StageTaskPageUpsertInput = {
  /** Create document if it didn't exist */
  readonly create: Content_StageTaskPageCreateInput;
  /** Update document if it exists */
  readonly update: Content_StageTaskPageUpdateInput;
};

type Content_StageTaskPageUpsertLocalizationInput = {
  readonly create: Content_StageTaskPageCreateLocalizationDataInput;
  readonly locale: Content_Locale;
  readonly update: Content_StageTaskPageUpdateLocalizationDataInput;
};

type Content_StageTaskPageUpsertWithNestedWhereUniqueInput = {
  /** Upsert data */
  readonly data: Content_StageTaskPageUpsertInput;
  /** Unique document search */
  readonly where: Content_StageTaskPageWhereUniqueInput;
};

/** This contains a set of filters that can be used to compare values internally */
type Content_StageTaskPageWhereComparatorInput = {
  /** This field can be used to request to check if the entry is outdated by internal comparison */
  readonly outdated_to: InputMaybe<Scalars['Boolean']>;
};

/** Identifies documents */
type Content_StageTaskPageWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_StageTaskPageWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_StageTaskPageWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_StageTaskPageWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_StageTaskPageWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_StageTaskPageWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_StageTaskPageWhereStageInput>;
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoWhereInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** All values greater than the given value. */
  readonly stageNumber_gt: InputMaybe<Scalars['Int']>;
  /** All values greater than or equal the given value. */
  readonly stageNumber_gte: InputMaybe<Scalars['Int']>;
  /** All values that are contained in given list. */
  readonly stageNumber_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  /** All values less than the given value. */
  readonly stageNumber_lt: InputMaybe<Scalars['Int']>;
  /** All values less than or equal the given value. */
  readonly stageNumber_lte: InputMaybe<Scalars['Int']>;
  /** All values that are not equal to given value. */
  readonly stageNumber_not: InputMaybe<Scalars['Int']>;
  /** All values that are not contained in given list. */
  readonly stageNumber_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  readonly tasksToComplete_every: InputMaybe<Content_TaskToCompleteWhereInput>;
  readonly tasksToComplete_none: InputMaybe<Content_TaskToCompleteWhereInput>;
  readonly tasksToComplete_some: InputMaybe<Content_TaskToCompleteWhereInput>;
  readonly title: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly title_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly title_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly title_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly title_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly title_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly title_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly title_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly title_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly title_starts_with: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

/** The document in stages filter allows specifying a stage entry to cross compare the same document between different stages */
type Content_StageTaskPageWhereStageInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_StageTaskPageWhereStageInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_StageTaskPageWhereStageInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_StageTaskPageWhereStageInput>>;
  /** This field contains fields which can be set as true or false to specify an internal comparison */
  readonly compareWithParent: InputMaybe<Content_StageTaskPageWhereComparatorInput>;
  /** Specify the stage to compare with */
  readonly stage: InputMaybe<Content_Stage>;
};

/** References StageTaskPage record uniquely */
type Content_StageTaskPageWhereUniqueInput = {
  readonly id: InputMaybe<Scalars['ID']>;
};

type Content_StageTaskUpdateInput = {
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoUpdateOneInlineInput>;
  /** intro input for default locale (en) */
  readonly intro: InputMaybe<Scalars['Content_RichTextAST']>;
  /** Manage document localizations */
  readonly localizations: InputMaybe<Content_StageTaskUpdateLocalizationsInput>;
  /** questions input for default locale (en) */
  readonly questions: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** submittedText input for default locale (en) */
  readonly submittedText: InputMaybe<Scalars['Content_RichTextAST']>;
  /** title input for default locale (en) */
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_StageTaskUpdateLocalizationDataInput = {
  readonly intro: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly questions: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  readonly submittedText: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_StageTaskUpdateLocalizationInput = {
  readonly data: Content_StageTaskUpdateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_StageTaskUpdateLocalizationsInput = {
  /** Localizations to create */
  readonly create: InputMaybe<ReadonlyArray<Content_StageTaskCreateLocalizationInput>>;
  /** Localizations to delete */
  readonly delete: InputMaybe<ReadonlyArray<Content_Locale>>;
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_StageTaskUpdateLocalizationInput>>;
  readonly upsert: InputMaybe<ReadonlyArray<Content_StageTaskUpsertLocalizationInput>>;
};

type Content_StageTaskUpdateManyInlineInput = {
  /** Connect multiple existing StageTask documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_StageTaskConnectInput>>;
  /** Create and connect multiple StageTask documents */
  readonly create: InputMaybe<ReadonlyArray<Content_StageTaskCreateInput>>;
  /** Delete multiple StageTask documents */
  readonly delete: InputMaybe<ReadonlyArray<Content_StageTaskWhereUniqueInput>>;
  /** Disconnect multiple StageTask documents */
  readonly disconnect: InputMaybe<ReadonlyArray<Content_StageTaskWhereUniqueInput>>;
  /** Override currently-connected documents with multiple existing StageTask documents */
  readonly set: InputMaybe<ReadonlyArray<Content_StageTaskWhereUniqueInput>>;
  /** Update multiple StageTask documents */
  readonly update: InputMaybe<ReadonlyArray<Content_StageTaskUpdateWithNestedWhereUniqueInput>>;
  /** Upsert multiple StageTask documents */
  readonly upsert: InputMaybe<ReadonlyArray<Content_StageTaskUpsertWithNestedWhereUniqueInput>>;
};

type Content_StageTaskUpdateManyInput = {
  /** intro input for default locale (en) */
  readonly intro: InputMaybe<Scalars['Content_RichTextAST']>;
  /** Optional updates to localizations */
  readonly localizations: InputMaybe<Content_StageTaskUpdateManyLocalizationsInput>;
  /** questions input for default locale (en) */
  readonly questions: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** submittedText input for default locale (en) */
  readonly submittedText: InputMaybe<Scalars['Content_RichTextAST']>;
  /** title input for default locale (en) */
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_StageTaskUpdateManyLocalizationDataInput = {
  readonly intro: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly questions: InputMaybe<ReadonlyArray<Scalars['Content_RichTextAST']>>;
  readonly submittedText: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_StageTaskUpdateManyLocalizationInput = {
  readonly data: Content_StageTaskUpdateManyLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_StageTaskUpdateManyLocalizationsInput = {
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_StageTaskUpdateManyLocalizationInput>>;
};

type Content_StageTaskUpdateManyWithNestedWhereInput = {
  /** Update many input */
  readonly data: Content_StageTaskUpdateManyInput;
  /** Document search */
  readonly where: Content_StageTaskWhereInput;
};

type Content_StageTaskUpdateOneInlineInput = {
  /** Connect existing StageTask document */
  readonly connect: InputMaybe<Content_StageTaskWhereUniqueInput>;
  /** Create and connect one StageTask document */
  readonly create: InputMaybe<Content_StageTaskCreateInput>;
  /** Delete currently connected StageTask document */
  readonly delete: InputMaybe<Scalars['Boolean']>;
  /** Disconnect currently connected StageTask document */
  readonly disconnect: InputMaybe<Scalars['Boolean']>;
  /** Update single StageTask document */
  readonly update: InputMaybe<Content_StageTaskUpdateWithNestedWhereUniqueInput>;
  /** Upsert single StageTask document */
  readonly upsert: InputMaybe<Content_StageTaskUpsertWithNestedWhereUniqueInput>;
};

type Content_StageTaskUpdateWithNestedWhereUniqueInput = {
  /** Document to update */
  readonly data: Content_StageTaskUpdateInput;
  /** Unique document search */
  readonly where: Content_StageTaskWhereUniqueInput;
};

type Content_StageTaskUpsertInput = {
  /** Create document if it didn't exist */
  readonly create: Content_StageTaskCreateInput;
  /** Update document if it exists */
  readonly update: Content_StageTaskUpdateInput;
};

type Content_StageTaskUpsertLocalizationInput = {
  readonly create: Content_StageTaskCreateLocalizationDataInput;
  readonly locale: Content_Locale;
  readonly update: Content_StageTaskUpdateLocalizationDataInput;
};

type Content_StageTaskUpsertWithNestedWhereUniqueInput = {
  /** Upsert data */
  readonly data: Content_StageTaskUpsertInput;
  /** Unique document search */
  readonly where: Content_StageTaskWhereUniqueInput;
};

/** This contains a set of filters that can be used to compare values internally */
type Content_StageTaskWhereComparatorInput = {
  /** This field can be used to request to check if the entry is outdated by internal comparison */
  readonly outdated_to: InputMaybe<Scalars['Boolean']>;
};

/** Identifies documents */
type Content_StageTaskWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_StageTaskWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_StageTaskWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_StageTaskWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_StageTaskWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_StageTaskWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_StageTaskWhereStageInput>;
  readonly helpfulInfo: InputMaybe<Content_HelpfulInfoWhereInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly stageNumber: InputMaybe<Scalars['Int']>;
  /** All values greater than the given value. */
  readonly stageNumber_gt: InputMaybe<Scalars['Int']>;
  /** All values greater than or equal the given value. */
  readonly stageNumber_gte: InputMaybe<Scalars['Int']>;
  /** All values that are contained in given list. */
  readonly stageNumber_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  /** All values less than the given value. */
  readonly stageNumber_lt: InputMaybe<Scalars['Int']>;
  /** All values less than or equal the given value. */
  readonly stageNumber_lte: InputMaybe<Scalars['Int']>;
  /** All values that are not equal to given value. */
  readonly stageNumber_not: InputMaybe<Scalars['Int']>;
  /** All values that are not contained in given list. */
  readonly stageNumber_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  readonly title: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly title_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly title_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly title_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly title_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly title_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly title_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly title_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly title_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly title_starts_with: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

/** The document in stages filter allows specifying a stage entry to cross compare the same document between different stages */
type Content_StageTaskWhereStageInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_StageTaskWhereStageInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_StageTaskWhereStageInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_StageTaskWhereStageInput>>;
  /** This field contains fields which can be set as true or false to specify an internal comparison */
  readonly compareWithParent: InputMaybe<Content_StageTaskWhereComparatorInput>;
  /** Specify the stage to compare with */
  readonly stage: InputMaybe<Content_Stage>;
};

/** References StageTask record uniquely */
type Content_StageTaskWhereUniqueInput = {
  readonly id: InputMaybe<Scalars['ID']>;
};

type Content_SystemDateTimeFieldVariation =
  | 'BASE'
  | 'COMBINED'
  | 'LOCALIZATION';

type Content_TaskToComplete = Content_Node & {
  /** The time the document was created */
  readonly createdAt: Scalars['Content_DateTime'];
  /** User that created this document */
  readonly createdBy: Maybe<Content_User>;
  /** Get the document in other stages */
  readonly documentInStages: ReadonlyArray<Content_TaskToComplete>;
  /** List of TaskToComplete versions */
  readonly history: ReadonlyArray<Content_Version>;
  /** The unique identifier */
  readonly id: Scalars['ID'];
  /** System Locale field */
  readonly locale: Content_Locale;
  /** Get the other localizations for this document */
  readonly localizations: ReadonlyArray<Content_TaskToComplete>;
  /** The time the document was published. Null on documents in draft stage. */
  readonly publishedAt: Maybe<Scalars['Content_DateTime']>;
  /** User that last published this document */
  readonly publishedBy: Maybe<Content_User>;
  readonly scheduledIn: ReadonlyArray<Content_ScheduledOperation>;
  /** System stage field */
  readonly stage: Content_Stage;
  readonly stageNumber: Scalars['Float'];
  readonly submittedText: Maybe<Content_RichText>;
  readonly taskInfo: Content_RichText;
  readonly taskLinkText: Maybe<Scalars['String']>;
  readonly title: Maybe<Scalars['String']>;
  /** The time the document was updated */
  readonly updatedAt: Scalars['Content_DateTime'];
  /** User that last updated this document */
  readonly updatedBy: Maybe<Content_User>;
};


type Content_TaskToComplete_createdAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_TaskToComplete_createdByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_TaskToComplete_documentInStagesArgs = {
  includeCurrent?: Scalars['Boolean'];
  inheritLocale?: Scalars['Boolean'];
  stages?: ReadonlyArray<Content_Stage>;
};


type Content_TaskToComplete_historyArgs = {
  limit?: Scalars['Int'];
  skip?: Scalars['Int'];
  stageOverride: InputMaybe<Content_Stage>;
};


type Content_TaskToComplete_localizationsArgs = {
  includeCurrent?: Scalars['Boolean'];
  locales?: ReadonlyArray<Content_Locale>;
};


type Content_TaskToComplete_publishedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_TaskToComplete_publishedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};


type Content_TaskToComplete_scheduledInArgs = {
  after: InputMaybe<Scalars['String']>;
  before: InputMaybe<Scalars['String']>;
  first: InputMaybe<Scalars['Int']>;
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  last: InputMaybe<Scalars['Int']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
  skip: InputMaybe<Scalars['Int']>;
  where: InputMaybe<Content_ScheduledOperationWhereInput>;
};


type Content_TaskToComplete_updatedAtArgs = {
  variation?: Content_SystemDateTimeFieldVariation;
};


type Content_TaskToComplete_updatedByArgs = {
  forceParentLocale: InputMaybe<Scalars['Boolean']>;
  locales: InputMaybe<ReadonlyArray<Content_Locale>>;
};

type Content_TaskToCompleteConnectInput = {
  /** Allow to specify document position in list of connected documents, will default to appending at end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Document to connect */
  readonly where: Content_TaskToCompleteWhereUniqueInput;
};

/** A connection to a list of items. */
type Content_TaskToCompleteConnection = {
  readonly aggregate: Content_Aggregate;
  /** A list of edges. */
  readonly edges: ReadonlyArray<Content_TaskToCompleteEdge>;
  /** Information to aid in pagination. */
  readonly pageInfo: Content_PageInfo;
};

type Content_TaskToCompleteCreateInput = {
  readonly ckskwd4ey0f2y01yu3rhs33it: InputMaybe<Content_StageLandingPageCreateManyInlineInput>;
  readonly cksnookna1c9x01yu3wlzhvr6: InputMaybe<Content_StageTaskPageCreateManyInlineInput>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** Inline mutations for managing document localizations excluding the default locale */
  readonly localizations: InputMaybe<Content_TaskToCompleteCreateLocalizationsInput>;
  readonly stageNumber: Scalars['Float'];
  /** submittedText input for default locale (en) */
  readonly submittedText: InputMaybe<Scalars['Content_RichTextAST']>;
  /** taskInfo input for default locale (en) */
  readonly taskInfo: Scalars['Content_RichTextAST'];
  /** taskLinkText input for default locale (en) */
  readonly taskLinkText: InputMaybe<Scalars['String']>;
  /** title input for default locale (en) */
  readonly title: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_TaskToCompleteCreateLocalizationDataInput = {
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  readonly submittedText: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly taskInfo: Scalars['Content_RichTextAST'];
  readonly taskLinkText: InputMaybe<Scalars['String']>;
  readonly title: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
};

type Content_TaskToCompleteCreateLocalizationInput = {
  /** Localization input */
  readonly data: Content_TaskToCompleteCreateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_TaskToCompleteCreateLocalizationsInput = {
  /** Create localizations for the newly-created document */
  readonly create: InputMaybe<ReadonlyArray<Content_TaskToCompleteCreateLocalizationInput>>;
};

type Content_TaskToCompleteCreateManyInlineInput = {
  /** Connect multiple existing TaskToComplete documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_TaskToCompleteWhereUniqueInput>>;
  /** Create and connect multiple existing TaskToComplete documents */
  readonly create: InputMaybe<ReadonlyArray<Content_TaskToCompleteCreateInput>>;
};

type Content_TaskToCompleteCreateOneInlineInput = {
  /** Connect one existing TaskToComplete document */
  readonly connect: InputMaybe<Content_TaskToCompleteWhereUniqueInput>;
  /** Create and connect one TaskToComplete document */
  readonly create: InputMaybe<Content_TaskToCompleteCreateInput>;
};

/** An edge in a connection. */
type Content_TaskToCompleteEdge = {
  /** A cursor for use in pagination. */
  readonly cursor: Scalars['String'];
  /** The item at the end of the edge. */
  readonly node: Content_TaskToComplete;
};

/** Identifies documents */
type Content_TaskToCompleteManyWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_TaskToCompleteWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_TaskToCompleteWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_TaskToCompleteWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_TaskToCompleteWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_TaskToCompleteWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_TaskToCompleteWhereStageInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly stageNumber: InputMaybe<Scalars['Float']>;
  /** All values greater than the given value. */
  readonly stageNumber_gt: InputMaybe<Scalars['Float']>;
  /** All values greater than or equal the given value. */
  readonly stageNumber_gte: InputMaybe<Scalars['Float']>;
  /** All values that are contained in given list. */
  readonly stageNumber_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  /** All values less than the given value. */
  readonly stageNumber_lt: InputMaybe<Scalars['Float']>;
  /** All values less than or equal the given value. */
  readonly stageNumber_lte: InputMaybe<Scalars['Float']>;
  /** All values that are not equal to given value. */
  readonly stageNumber_not: InputMaybe<Scalars['Float']>;
  /** All values that are not contained in given list. */
  readonly stageNumber_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

type Content_TaskToCompleteOrderByInput =
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'publishedAt_ASC'
  | 'publishedAt_DESC'
  | 'stageNumber_ASC'
  | 'stageNumber_DESC'
  | 'taskLinkText_ASC'
  | 'taskLinkText_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC';

type Content_TaskToCompleteUpdateInput = {
  readonly ckskwd4ey0f2y01yu3rhs33it: InputMaybe<Content_StageLandingPageUpdateManyInlineInput>;
  readonly cksnookna1c9x01yu3wlzhvr6: InputMaybe<Content_StageTaskPageUpdateManyInlineInput>;
  /** Manage document localizations */
  readonly localizations: InputMaybe<Content_TaskToCompleteUpdateLocalizationsInput>;
  readonly stageNumber: InputMaybe<Scalars['Float']>;
  /** submittedText input for default locale (en) */
  readonly submittedText: InputMaybe<Scalars['Content_RichTextAST']>;
  /** taskInfo input for default locale (en) */
  readonly taskInfo: InputMaybe<Scalars['Content_RichTextAST']>;
  /** taskLinkText input for default locale (en) */
  readonly taskLinkText: InputMaybe<Scalars['String']>;
  /** title input for default locale (en) */
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_TaskToCompleteUpdateLocalizationDataInput = {
  readonly submittedText: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly taskInfo: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly taskLinkText: InputMaybe<Scalars['String']>;
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_TaskToCompleteUpdateLocalizationInput = {
  readonly data: Content_TaskToCompleteUpdateLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_TaskToCompleteUpdateLocalizationsInput = {
  /** Localizations to create */
  readonly create: InputMaybe<ReadonlyArray<Content_TaskToCompleteCreateLocalizationInput>>;
  /** Localizations to delete */
  readonly delete: InputMaybe<ReadonlyArray<Content_Locale>>;
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_TaskToCompleteUpdateLocalizationInput>>;
  readonly upsert: InputMaybe<ReadonlyArray<Content_TaskToCompleteUpsertLocalizationInput>>;
};

type Content_TaskToCompleteUpdateManyInlineInput = {
  /** Connect multiple existing TaskToComplete documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_TaskToCompleteConnectInput>>;
  /** Create and connect multiple TaskToComplete documents */
  readonly create: InputMaybe<ReadonlyArray<Content_TaskToCompleteCreateInput>>;
  /** Delete multiple TaskToComplete documents */
  readonly delete: InputMaybe<ReadonlyArray<Content_TaskToCompleteWhereUniqueInput>>;
  /** Disconnect multiple TaskToComplete documents */
  readonly disconnect: InputMaybe<ReadonlyArray<Content_TaskToCompleteWhereUniqueInput>>;
  /** Override currently-connected documents with multiple existing TaskToComplete documents */
  readonly set: InputMaybe<ReadonlyArray<Content_TaskToCompleteWhereUniqueInput>>;
  /** Update multiple TaskToComplete documents */
  readonly update: InputMaybe<ReadonlyArray<Content_TaskToCompleteUpdateWithNestedWhereUniqueInput>>;
  /** Upsert multiple TaskToComplete documents */
  readonly upsert: InputMaybe<ReadonlyArray<Content_TaskToCompleteUpsertWithNestedWhereUniqueInput>>;
};

type Content_TaskToCompleteUpdateManyInput = {
  /** Optional updates to localizations */
  readonly localizations: InputMaybe<Content_TaskToCompleteUpdateManyLocalizationsInput>;
  readonly stageNumber: InputMaybe<Scalars['Float']>;
  /** submittedText input for default locale (en) */
  readonly submittedText: InputMaybe<Scalars['Content_RichTextAST']>;
  /** taskInfo input for default locale (en) */
  readonly taskInfo: InputMaybe<Scalars['Content_RichTextAST']>;
  /** taskLinkText input for default locale (en) */
  readonly taskLinkText: InputMaybe<Scalars['String']>;
  /** title input for default locale (en) */
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_TaskToCompleteUpdateManyLocalizationDataInput = {
  readonly submittedText: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly taskInfo: InputMaybe<Scalars['Content_RichTextAST']>;
  readonly taskLinkText: InputMaybe<Scalars['String']>;
  readonly title: InputMaybe<Scalars['String']>;
};

type Content_TaskToCompleteUpdateManyLocalizationInput = {
  readonly data: Content_TaskToCompleteUpdateManyLocalizationDataInput;
  readonly locale: Content_Locale;
};

type Content_TaskToCompleteUpdateManyLocalizationsInput = {
  /** Localizations to update */
  readonly update: InputMaybe<ReadonlyArray<Content_TaskToCompleteUpdateManyLocalizationInput>>;
};

type Content_TaskToCompleteUpdateManyWithNestedWhereInput = {
  /** Update many input */
  readonly data: Content_TaskToCompleteUpdateManyInput;
  /** Document search */
  readonly where: Content_TaskToCompleteWhereInput;
};

type Content_TaskToCompleteUpdateOneInlineInput = {
  /** Connect existing TaskToComplete document */
  readonly connect: InputMaybe<Content_TaskToCompleteWhereUniqueInput>;
  /** Create and connect one TaskToComplete document */
  readonly create: InputMaybe<Content_TaskToCompleteCreateInput>;
  /** Delete currently connected TaskToComplete document */
  readonly delete: InputMaybe<Scalars['Boolean']>;
  /** Disconnect currently connected TaskToComplete document */
  readonly disconnect: InputMaybe<Scalars['Boolean']>;
  /** Update single TaskToComplete document */
  readonly update: InputMaybe<Content_TaskToCompleteUpdateWithNestedWhereUniqueInput>;
  /** Upsert single TaskToComplete document */
  readonly upsert: InputMaybe<Content_TaskToCompleteUpsertWithNestedWhereUniqueInput>;
};

type Content_TaskToCompleteUpdateWithNestedWhereUniqueInput = {
  /** Document to update */
  readonly data: Content_TaskToCompleteUpdateInput;
  /** Unique document search */
  readonly where: Content_TaskToCompleteWhereUniqueInput;
};

type Content_TaskToCompleteUpsertInput = {
  /** Create document if it didn't exist */
  readonly create: Content_TaskToCompleteCreateInput;
  /** Update document if it exists */
  readonly update: Content_TaskToCompleteUpdateInput;
};

type Content_TaskToCompleteUpsertLocalizationInput = {
  readonly create: Content_TaskToCompleteCreateLocalizationDataInput;
  readonly locale: Content_Locale;
  readonly update: Content_TaskToCompleteUpdateLocalizationDataInput;
};

type Content_TaskToCompleteUpsertWithNestedWhereUniqueInput = {
  /** Upsert data */
  readonly data: Content_TaskToCompleteUpsertInput;
  /** Unique document search */
  readonly where: Content_TaskToCompleteWhereUniqueInput;
};

/** This contains a set of filters that can be used to compare values internally */
type Content_TaskToCompleteWhereComparatorInput = {
  /** This field can be used to request to check if the entry is outdated by internal comparison */
  readonly outdated_to: InputMaybe<Scalars['Boolean']>;
};

/** Identifies documents */
type Content_TaskToCompleteWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_TaskToCompleteWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_TaskToCompleteWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_TaskToCompleteWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly createdBy: InputMaybe<Content_UserWhereInput>;
  readonly documentInStages_every: InputMaybe<Content_TaskToCompleteWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_TaskToCompleteWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_TaskToCompleteWhereStageInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly publishedBy: InputMaybe<Content_UserWhereInput>;
  readonly scheduledIn_every: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_none: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly scheduledIn_some: InputMaybe<Content_ScheduledOperationWhereInput>;
  readonly stageNumber: InputMaybe<Scalars['Float']>;
  /** All values greater than the given value. */
  readonly stageNumber_gt: InputMaybe<Scalars['Float']>;
  /** All values greater than or equal the given value. */
  readonly stageNumber_gte: InputMaybe<Scalars['Float']>;
  /** All values that are contained in given list. */
  readonly stageNumber_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  /** All values less than the given value. */
  readonly stageNumber_lt: InputMaybe<Scalars['Float']>;
  /** All values less than or equal the given value. */
  readonly stageNumber_lte: InputMaybe<Scalars['Float']>;
  /** All values that are not equal to given value. */
  readonly stageNumber_not: InputMaybe<Scalars['Float']>;
  /** All values that are not contained in given list. */
  readonly stageNumber_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  readonly taskLinkText: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly taskLinkText_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly taskLinkText_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly taskLinkText_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly taskLinkText_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly taskLinkText_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly taskLinkText_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly taskLinkText_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly taskLinkText_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly taskLinkText_starts_with: InputMaybe<Scalars['String']>;
  readonly title: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly title_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly title_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly title_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly title_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly title_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly title_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly title_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly title_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly title_starts_with: InputMaybe<Scalars['String']>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedBy: InputMaybe<Content_UserWhereInput>;
};

/** The document in stages filter allows specifying a stage entry to cross compare the same document between different stages */
type Content_TaskToCompleteWhereStageInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_TaskToCompleteWhereStageInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_TaskToCompleteWhereStageInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_TaskToCompleteWhereStageInput>>;
  /** This field contains fields which can be set as true or false to specify an internal comparison */
  readonly compareWithParent: InputMaybe<Content_TaskToCompleteWhereComparatorInput>;
  /** Specify the stage to compare with */
  readonly stage: InputMaybe<Content_Stage>;
};

/** References TaskToComplete record uniquely */
type Content_TaskToCompleteWhereUniqueInput = {
  readonly id: InputMaybe<Scalars['ID']>;
};

type Content_UnpublishLocaleInput = {
  /** Locales to unpublish */
  readonly locale: Content_Locale;
  /** Stages to unpublish selected locales from */
  readonly stages: ReadonlyArray<Content_Stage>;
};

/** User system model */
type Content_User = Content_Node & {
  /** The time the document was created */
  readonly createdAt: Scalars['Content_DateTime'];
  /** Get the document in other stages */
  readonly documentInStages: ReadonlyArray<Content_User>;
  /** The unique identifier */
  readonly id: Scalars['ID'];
  /** Flag to determine if user is active or not */
  readonly isActive: Scalars['Boolean'];
  /** User Kind. Can be either MEMBER, PAT or PUBLIC */
  readonly kind: Content_UserKind;
  /** The username */
  readonly name: Scalars['String'];
  /** Profile Picture url */
  readonly picture: Maybe<Scalars['String']>;
  /** The time the document was published. Null on documents in draft stage. */
  readonly publishedAt: Maybe<Scalars['Content_DateTime']>;
  /** System stage field */
  readonly stage: Content_Stage;
  /** The time the document was updated */
  readonly updatedAt: Scalars['Content_DateTime'];
};


/** User system model */
type Content_User_documentInStagesArgs = {
  includeCurrent?: Scalars['Boolean'];
  inheritLocale?: Scalars['Boolean'];
  stages?: ReadonlyArray<Content_Stage>;
};

type Content_UserConnectInput = {
  /** Allow to specify document position in list of connected documents, will default to appending at end of list */
  readonly position: InputMaybe<Content_ConnectPositionInput>;
  /** Document to connect */
  readonly where: Content_UserWhereUniqueInput;
};

/** A connection to a list of items. */
type Content_UserConnection = {
  readonly aggregate: Content_Aggregate;
  /** A list of edges. */
  readonly edges: ReadonlyArray<Content_UserEdge>;
  /** Information to aid in pagination. */
  readonly pageInfo: Content_PageInfo;
};

type Content_UserCreateManyInlineInput = {
  /** Connect multiple existing User documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_UserWhereUniqueInput>>;
};

type Content_UserCreateOneInlineInput = {
  /** Connect one existing User document */
  readonly connect: InputMaybe<Content_UserWhereUniqueInput>;
};

/** An edge in a connection. */
type Content_UserEdge = {
  /** A cursor for use in pagination. */
  readonly cursor: Scalars['String'];
  /** The item at the end of the edge. */
  readonly node: Content_User;
};

/** System User Kind */
type Content_UserKind =
  | 'MEMBER'
  | 'PAT'
  | 'PUBLIC'
  | 'WEBHOOK';

/** Identifies documents */
type Content_UserManyWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_UserWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_UserWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_UserWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly documentInStages_every: InputMaybe<Content_UserWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_UserWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_UserWhereStageInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly isActive: InputMaybe<Scalars['Boolean']>;
  /** All values that are not equal to given value. */
  readonly isActive_not: InputMaybe<Scalars['Boolean']>;
  readonly kind: InputMaybe<Content_UserKind>;
  /** All values that are contained in given list. */
  readonly kind_in: InputMaybe<ReadonlyArray<InputMaybe<Content_UserKind>>>;
  /** All values that are not equal to given value. */
  readonly kind_not: InputMaybe<Content_UserKind>;
  /** All values that are not contained in given list. */
  readonly kind_not_in: InputMaybe<ReadonlyArray<InputMaybe<Content_UserKind>>>;
  readonly name: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly name_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly name_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly name_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly name_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly name_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly name_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly name_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly name_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly name_starts_with: InputMaybe<Scalars['String']>;
  readonly picture: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly picture_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly picture_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly picture_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly picture_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly picture_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly picture_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly picture_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly picture_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly picture_starts_with: InputMaybe<Scalars['String']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
};

type Content_UserOrderByInput =
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'isActive_ASC'
  | 'isActive_DESC'
  | 'kind_ASC'
  | 'kind_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'picture_ASC'
  | 'picture_DESC'
  | 'publishedAt_ASC'
  | 'publishedAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC';

type Content_UserUpdateManyInlineInput = {
  /** Connect multiple existing User documents */
  readonly connect: InputMaybe<ReadonlyArray<Content_UserConnectInput>>;
  /** Disconnect multiple User documents */
  readonly disconnect: InputMaybe<ReadonlyArray<Content_UserWhereUniqueInput>>;
  /** Override currently-connected documents with multiple existing User documents */
  readonly set: InputMaybe<ReadonlyArray<Content_UserWhereUniqueInput>>;
};

type Content_UserUpdateOneInlineInput = {
  /** Connect existing User document */
  readonly connect: InputMaybe<Content_UserWhereUniqueInput>;
  /** Disconnect currently connected User document */
  readonly disconnect: InputMaybe<Scalars['Boolean']>;
};

/** This contains a set of filters that can be used to compare values internally */
type Content_UserWhereComparatorInput = {
  /** This field can be used to request to check if the entry is outdated by internal comparison */
  readonly outdated_to: InputMaybe<Scalars['Boolean']>;
};

/** Identifies documents */
type Content_UserWhereInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_UserWhereInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_UserWhereInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_UserWhereInput>>;
  /** Contains search across all appropriate fields. */
  readonly _search: InputMaybe<Scalars['String']>;
  readonly createdAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly createdAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly createdAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly createdAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly createdAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly createdAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly createdAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly createdAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly documentInStages_every: InputMaybe<Content_UserWhereStageInput>;
  readonly documentInStages_none: InputMaybe<Content_UserWhereStageInput>;
  readonly documentInStages_some: InputMaybe<Content_UserWhereStageInput>;
  readonly id: InputMaybe<Scalars['ID']>;
  /** All values containing the given string. */
  readonly id_contains: InputMaybe<Scalars['ID']>;
  /** All values ending with the given string. */
  readonly id_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are contained in given list. */
  readonly id_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values that are not equal to given value. */
  readonly id_not: InputMaybe<Scalars['ID']>;
  /** All values not containing the given string. */
  readonly id_not_contains: InputMaybe<Scalars['ID']>;
  /** All values not ending with the given string */
  readonly id_not_ends_with: InputMaybe<Scalars['ID']>;
  /** All values that are not contained in given list. */
  readonly id_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  /** All values not starting with the given string. */
  readonly id_not_starts_with: InputMaybe<Scalars['ID']>;
  /** All values starting with the given string. */
  readonly id_starts_with: InputMaybe<Scalars['ID']>;
  readonly isActive: InputMaybe<Scalars['Boolean']>;
  /** All values that are not equal to given value. */
  readonly isActive_not: InputMaybe<Scalars['Boolean']>;
  readonly kind: InputMaybe<Content_UserKind>;
  /** All values that are contained in given list. */
  readonly kind_in: InputMaybe<ReadonlyArray<InputMaybe<Content_UserKind>>>;
  /** All values that are not equal to given value. */
  readonly kind_not: InputMaybe<Content_UserKind>;
  /** All values that are not contained in given list. */
  readonly kind_not_in: InputMaybe<ReadonlyArray<InputMaybe<Content_UserKind>>>;
  readonly name: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly name_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly name_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly name_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly name_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly name_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly name_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly name_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly name_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly name_starts_with: InputMaybe<Scalars['String']>;
  readonly picture: InputMaybe<Scalars['String']>;
  /** All values containing the given string. */
  readonly picture_contains: InputMaybe<Scalars['String']>;
  /** All values ending with the given string. */
  readonly picture_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are contained in given list. */
  readonly picture_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values that are not equal to given value. */
  readonly picture_not: InputMaybe<Scalars['String']>;
  /** All values not containing the given string. */
  readonly picture_not_contains: InputMaybe<Scalars['String']>;
  /** All values not ending with the given string */
  readonly picture_not_ends_with: InputMaybe<Scalars['String']>;
  /** All values that are not contained in given list. */
  readonly picture_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  /** All values not starting with the given string. */
  readonly picture_not_starts_with: InputMaybe<Scalars['String']>;
  /** All values starting with the given string. */
  readonly picture_starts_with: InputMaybe<Scalars['String']>;
  readonly publishedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly publishedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly publishedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly publishedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly publishedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly publishedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly publishedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly publishedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  readonly updatedAt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than the given value. */
  readonly updatedAt_gt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values greater than or equal the given value. */
  readonly updatedAt_gte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are contained in given list. */
  readonly updatedAt_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
  /** All values less than the given value. */
  readonly updatedAt_lt: InputMaybe<Scalars['Content_DateTime']>;
  /** All values less than or equal the given value. */
  readonly updatedAt_lte: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not equal to given value. */
  readonly updatedAt_not: InputMaybe<Scalars['Content_DateTime']>;
  /** All values that are not contained in given list. */
  readonly updatedAt_not_in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Content_DateTime']>>>;
};

/** The document in stages filter allows specifying a stage entry to cross compare the same document between different stages */
type Content_UserWhereStageInput = {
  /** Logical AND on all given filters. */
  readonly AND: InputMaybe<ReadonlyArray<Content_UserWhereStageInput>>;
  /** Logical NOT on all given filters combined by AND. */
  readonly NOT: InputMaybe<ReadonlyArray<Content_UserWhereStageInput>>;
  /** Logical OR on all given filters. */
  readonly OR: InputMaybe<ReadonlyArray<Content_UserWhereStageInput>>;
  /** This field contains fields which can be set as true or false to specify an internal comparison */
  readonly compareWithParent: InputMaybe<Content_UserWhereComparatorInput>;
  /** Specify the stage to compare with */
  readonly stage: InputMaybe<Content_Stage>;
};

/** References User record uniquely */
type Content_UserWhereUniqueInput = {
  readonly id: InputMaybe<Scalars['ID']>;
};

type Content_Version = {
  readonly createdAt: Scalars['Content_DateTime'];
  readonly id: Scalars['ID'];
  readonly revision: Scalars['Int'];
  readonly stage: Content_Stage;
};

type Content_VersionWhereInput = {
  readonly id: Scalars['ID'];
  readonly revision: Scalars['Int'];
  readonly stage: Content_Stage;
};

type Content__FilterKind =
  | 'AND'
  | 'NOT'
  | 'OR'
  | 'contains'
  | 'contains_all'
  | 'contains_none'
  | 'contains_some'
  | 'ends_with'
  | 'eq'
  | 'eq_not'
  | 'gt'
  | 'gte'
  | 'in'
  | 'lt'
  | 'lte'
  | 'not_contains'
  | 'not_ends_with'
  | 'not_in'
  | 'not_starts_with'
  | 'relational_every'
  | 'relational_none'
  | 'relational_single'
  | 'relational_some'
  | 'search'
  | 'starts_with';

type Content__MutationInputFieldKind =
  | 'enum'
  | 'relation'
  | 'richText'
  | 'richTextWithEmbeds'
  | 'scalar'
  | 'union'
  | 'virtual';

type Content__MutationKind =
  | 'create'
  | 'delete'
  | 'deleteMany'
  | 'publish'
  | 'publishMany'
  | 'schedulePublish'
  | 'scheduleUnpublish'
  | 'unpublish'
  | 'unpublishMany'
  | 'update'
  | 'updateMany'
  | 'upsert';

type Content__OrderDirection =
  | 'asc'
  | 'desc';

type Content__RelationInputCardinality =
  | 'many'
  | 'one';

type Content__RelationInputKind =
  | 'create'
  | 'update';

type Content__RelationKind =
  | 'regular'
  | 'union';

type Content__SystemDateTimeFieldVariation =
  | 'base'
  | 'combined'
  | 'localization';

type DateQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Date']>;
  readonly gt: InputMaybe<Scalars['Date']>;
  readonly gte: InputMaybe<Scalars['Date']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Date']>>>;
  readonly lt: InputMaybe<Scalars['Date']>;
  readonly lte: InputMaybe<Scalars['Date']>;
  readonly ne: InputMaybe<Scalars['Date']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Date']>>>;
};

type Directory = Node & {
  readonly absolutePath: Scalars['String'];
  readonly accessTime: Scalars['Date'];
  readonly atime: Scalars['Date'];
  readonly atimeMs: Scalars['Float'];
  readonly base: Scalars['String'];
  readonly birthTime: Scalars['Date'];
  /** @deprecated Use `birthTime` instead */
  readonly birthtime: Maybe<Scalars['Date']>;
  /** @deprecated Use `birthTime` instead */
  readonly birthtimeMs: Maybe<Scalars['Float']>;
  readonly changeTime: Scalars['Date'];
  readonly children: ReadonlyArray<Node>;
  readonly ctime: Scalars['Date'];
  readonly ctimeMs: Scalars['Float'];
  readonly dev: Scalars['Int'];
  readonly dir: Scalars['String'];
  readonly ext: Scalars['String'];
  readonly extension: Scalars['String'];
  readonly gid: Scalars['Int'];
  readonly id: Scalars['ID'];
  readonly ino: Scalars['Float'];
  readonly internal: Internal;
  readonly mode: Scalars['Int'];
  readonly modifiedTime: Scalars['Date'];
  readonly mtime: Scalars['Date'];
  readonly mtimeMs: Scalars['Float'];
  readonly name: Scalars['String'];
  readonly nlink: Scalars['Int'];
  readonly parent: Maybe<Node>;
  readonly prettySize: Scalars['String'];
  readonly rdev: Scalars['Int'];
  readonly relativeDirectory: Scalars['String'];
  readonly relativePath: Scalars['String'];
  readonly root: Scalars['String'];
  readonly size: Scalars['Int'];
  readonly sourceInstanceName: Scalars['String'];
  readonly uid: Scalars['Int'];
};


type Directory_accessTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_atimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_birthTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_changeTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_ctimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_modifiedTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_mtimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type DirectoryConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<DirectoryEdge>;
  readonly group: ReadonlyArray<DirectoryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Directory>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type DirectoryConnection_distinctArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_groupArgs = {
  field: DirectoryFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type DirectoryConnection_maxArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_minArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_sumArgs = {
  field: DirectoryFieldsEnum;
};

type DirectoryEdge = {
  readonly next: Maybe<Directory>;
  readonly node: Directory;
  readonly previous: Maybe<Directory>;
};

type DirectoryFieldsEnum =
  | 'absolutePath'
  | 'accessTime'
  | 'atime'
  | 'atimeMs'
  | 'base'
  | 'birthTime'
  | 'birthtime'
  | 'birthtimeMs'
  | 'changeTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'ctime'
  | 'ctimeMs'
  | 'dev'
  | 'dir'
  | 'ext'
  | 'extension'
  | 'gid'
  | 'id'
  | 'ino'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'mode'
  | 'modifiedTime'
  | 'mtime'
  | 'mtimeMs'
  | 'name'
  | 'nlink'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'prettySize'
  | 'rdev'
  | 'relativeDirectory'
  | 'relativePath'
  | 'root'
  | 'size'
  | 'sourceInstanceName'
  | 'uid';

type DirectoryFilterInput = {
  readonly absolutePath: InputMaybe<StringQueryOperatorInput>;
  readonly accessTime: InputMaybe<DateQueryOperatorInput>;
  readonly atime: InputMaybe<DateQueryOperatorInput>;
  readonly atimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly base: InputMaybe<StringQueryOperatorInput>;
  readonly birthTime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly changeTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly ctime: InputMaybe<DateQueryOperatorInput>;
  readonly ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly dev: InputMaybe<IntQueryOperatorInput>;
  readonly dir: InputMaybe<StringQueryOperatorInput>;
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly extension: InputMaybe<StringQueryOperatorInput>;
  readonly gid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly ino: InputMaybe<FloatQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mode: InputMaybe<IntQueryOperatorInput>;
  readonly modifiedTime: InputMaybe<DateQueryOperatorInput>;
  readonly mtime: InputMaybe<DateQueryOperatorInput>;
  readonly mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nlink: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly prettySize: InputMaybe<StringQueryOperatorInput>;
  readonly rdev: InputMaybe<IntQueryOperatorInput>;
  readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  readonly relativePath: InputMaybe<StringQueryOperatorInput>;
  readonly root: InputMaybe<StringQueryOperatorInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
  readonly sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  readonly uid: InputMaybe<IntQueryOperatorInput>;
};

type DirectoryGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<DirectoryEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<DirectoryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Directory>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type DirectoryGroupConnection_distinctArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_groupArgs = {
  field: DirectoryFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type DirectoryGroupConnection_maxArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_minArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_sumArgs = {
  field: DirectoryFieldsEnum;
};

type DirectorySortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<DirectoryFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type DuotoneGradient = {
  readonly highlight: Scalars['String'];
  readonly opacity: InputMaybe<Scalars['Int']>;
  readonly shadow: Scalars['String'];
};

type File = Node & {
  readonly absolutePath: Scalars['String'];
  readonly accessTime: Scalars['Date'];
  readonly atime: Scalars['Date'];
  readonly atimeMs: Scalars['Float'];
  readonly base: Scalars['String'];
  readonly birthTime: Scalars['Date'];
  /** @deprecated Use `birthTime` instead */
  readonly birthtime: Maybe<Scalars['Date']>;
  /** @deprecated Use `birthTime` instead */
  readonly birthtimeMs: Maybe<Scalars['Float']>;
  readonly blksize: Maybe<Scalars['Int']>;
  readonly blocks: Maybe<Scalars['Int']>;
  readonly changeTime: Scalars['Date'];
  /** Returns the first child node of type ImageSharp or null if there are no children of given type on this node */
  readonly childImageSharp: Maybe<ImageSharp>;
  readonly children: ReadonlyArray<Node>;
  /** Returns all children nodes filtered by type ImageSharp */
  readonly childrenImageSharp: Maybe<ReadonlyArray<Maybe<ImageSharp>>>;
  readonly ctime: Scalars['Date'];
  readonly ctimeMs: Scalars['Float'];
  readonly dev: Scalars['Int'];
  readonly dir: Scalars['String'];
  readonly ext: Scalars['String'];
  readonly extension: Scalars['String'];
  readonly gid: Scalars['Int'];
  readonly id: Scalars['ID'];
  readonly ino: Scalars['Float'];
  readonly internal: Internal;
  readonly mode: Scalars['Int'];
  readonly modifiedTime: Scalars['Date'];
  readonly mtime: Scalars['Date'];
  readonly mtimeMs: Scalars['Float'];
  readonly name: Scalars['String'];
  readonly nlink: Scalars['Int'];
  readonly parent: Maybe<Node>;
  readonly prettySize: Scalars['String'];
  /** Copy file to static directory and return public url to it */
  readonly publicURL: Maybe<Scalars['String']>;
  readonly rdev: Scalars['Int'];
  readonly relativeDirectory: Scalars['String'];
  readonly relativePath: Scalars['String'];
  readonly root: Scalars['String'];
  readonly size: Scalars['Int'];
  readonly sourceInstanceName: Scalars['String'];
  readonly uid: Scalars['Int'];
};


type File_accessTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_atimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_birthTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_changeTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_ctimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_modifiedTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_mtimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type FileConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<FileEdge>;
  readonly group: ReadonlyArray<FileGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<File>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type FileConnection_distinctArgs = {
  field: FileFieldsEnum;
};


type FileConnection_groupArgs = {
  field: FileFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type FileConnection_maxArgs = {
  field: FileFieldsEnum;
};


type FileConnection_minArgs = {
  field: FileFieldsEnum;
};


type FileConnection_sumArgs = {
  field: FileFieldsEnum;
};

type FileEdge = {
  readonly next: Maybe<File>;
  readonly node: File;
  readonly previous: Maybe<File>;
};

type FileFieldsEnum =
  | 'absolutePath'
  | 'accessTime'
  | 'atime'
  | 'atimeMs'
  | 'base'
  | 'birthTime'
  | 'birthtime'
  | 'birthtimeMs'
  | 'blksize'
  | 'blocks'
  | 'changeTime'
  | 'childImageSharp.children'
  | 'childImageSharp.children.children'
  | 'childImageSharp.children.children.children'
  | 'childImageSharp.children.children.id'
  | 'childImageSharp.children.id'
  | 'childImageSharp.children.internal.content'
  | 'childImageSharp.children.internal.contentDigest'
  | 'childImageSharp.children.internal.contentFilePath'
  | 'childImageSharp.children.internal.description'
  | 'childImageSharp.children.internal.fieldOwners'
  | 'childImageSharp.children.internal.ignoreType'
  | 'childImageSharp.children.internal.mediaType'
  | 'childImageSharp.children.internal.owner'
  | 'childImageSharp.children.internal.type'
  | 'childImageSharp.children.parent.children'
  | 'childImageSharp.children.parent.id'
  | 'childImageSharp.fixed.aspectRatio'
  | 'childImageSharp.fixed.base64'
  | 'childImageSharp.fixed.height'
  | 'childImageSharp.fixed.originalName'
  | 'childImageSharp.fixed.src'
  | 'childImageSharp.fixed.srcSet'
  | 'childImageSharp.fixed.srcSetWebp'
  | 'childImageSharp.fixed.srcWebp'
  | 'childImageSharp.fixed.tracedSVG'
  | 'childImageSharp.fixed.width'
  | 'childImageSharp.fluid.aspectRatio'
  | 'childImageSharp.fluid.base64'
  | 'childImageSharp.fluid.originalImg'
  | 'childImageSharp.fluid.originalName'
  | 'childImageSharp.fluid.presentationHeight'
  | 'childImageSharp.fluid.presentationWidth'
  | 'childImageSharp.fluid.sizes'
  | 'childImageSharp.fluid.src'
  | 'childImageSharp.fluid.srcSet'
  | 'childImageSharp.fluid.srcSetWebp'
  | 'childImageSharp.fluid.srcWebp'
  | 'childImageSharp.fluid.tracedSVG'
  | 'childImageSharp.gatsbyImageData'
  | 'childImageSharp.id'
  | 'childImageSharp.internal.content'
  | 'childImageSharp.internal.contentDigest'
  | 'childImageSharp.internal.contentFilePath'
  | 'childImageSharp.internal.description'
  | 'childImageSharp.internal.fieldOwners'
  | 'childImageSharp.internal.ignoreType'
  | 'childImageSharp.internal.mediaType'
  | 'childImageSharp.internal.owner'
  | 'childImageSharp.internal.type'
  | 'childImageSharp.original.height'
  | 'childImageSharp.original.src'
  | 'childImageSharp.original.width'
  | 'childImageSharp.parent.children'
  | 'childImageSharp.parent.children.children'
  | 'childImageSharp.parent.children.id'
  | 'childImageSharp.parent.id'
  | 'childImageSharp.parent.internal.content'
  | 'childImageSharp.parent.internal.contentDigest'
  | 'childImageSharp.parent.internal.contentFilePath'
  | 'childImageSharp.parent.internal.description'
  | 'childImageSharp.parent.internal.fieldOwners'
  | 'childImageSharp.parent.internal.ignoreType'
  | 'childImageSharp.parent.internal.mediaType'
  | 'childImageSharp.parent.internal.owner'
  | 'childImageSharp.parent.internal.type'
  | 'childImageSharp.parent.parent.children'
  | 'childImageSharp.parent.parent.id'
  | 'childImageSharp.resize.aspectRatio'
  | 'childImageSharp.resize.height'
  | 'childImageSharp.resize.originalName'
  | 'childImageSharp.resize.src'
  | 'childImageSharp.resize.tracedSVG'
  | 'childImageSharp.resize.width'
  | 'children'
  | 'childrenImageSharp'
  | 'childrenImageSharp.children'
  | 'childrenImageSharp.children.children'
  | 'childrenImageSharp.children.children.children'
  | 'childrenImageSharp.children.children.id'
  | 'childrenImageSharp.children.id'
  | 'childrenImageSharp.children.internal.content'
  | 'childrenImageSharp.children.internal.contentDigest'
  | 'childrenImageSharp.children.internal.contentFilePath'
  | 'childrenImageSharp.children.internal.description'
  | 'childrenImageSharp.children.internal.fieldOwners'
  | 'childrenImageSharp.children.internal.ignoreType'
  | 'childrenImageSharp.children.internal.mediaType'
  | 'childrenImageSharp.children.internal.owner'
  | 'childrenImageSharp.children.internal.type'
  | 'childrenImageSharp.children.parent.children'
  | 'childrenImageSharp.children.parent.id'
  | 'childrenImageSharp.fixed.aspectRatio'
  | 'childrenImageSharp.fixed.base64'
  | 'childrenImageSharp.fixed.height'
  | 'childrenImageSharp.fixed.originalName'
  | 'childrenImageSharp.fixed.src'
  | 'childrenImageSharp.fixed.srcSet'
  | 'childrenImageSharp.fixed.srcSetWebp'
  | 'childrenImageSharp.fixed.srcWebp'
  | 'childrenImageSharp.fixed.tracedSVG'
  | 'childrenImageSharp.fixed.width'
  | 'childrenImageSharp.fluid.aspectRatio'
  | 'childrenImageSharp.fluid.base64'
  | 'childrenImageSharp.fluid.originalImg'
  | 'childrenImageSharp.fluid.originalName'
  | 'childrenImageSharp.fluid.presentationHeight'
  | 'childrenImageSharp.fluid.presentationWidth'
  | 'childrenImageSharp.fluid.sizes'
  | 'childrenImageSharp.fluid.src'
  | 'childrenImageSharp.fluid.srcSet'
  | 'childrenImageSharp.fluid.srcSetWebp'
  | 'childrenImageSharp.fluid.srcWebp'
  | 'childrenImageSharp.fluid.tracedSVG'
  | 'childrenImageSharp.gatsbyImageData'
  | 'childrenImageSharp.id'
  | 'childrenImageSharp.internal.content'
  | 'childrenImageSharp.internal.contentDigest'
  | 'childrenImageSharp.internal.contentFilePath'
  | 'childrenImageSharp.internal.description'
  | 'childrenImageSharp.internal.fieldOwners'
  | 'childrenImageSharp.internal.ignoreType'
  | 'childrenImageSharp.internal.mediaType'
  | 'childrenImageSharp.internal.owner'
  | 'childrenImageSharp.internal.type'
  | 'childrenImageSharp.original.height'
  | 'childrenImageSharp.original.src'
  | 'childrenImageSharp.original.width'
  | 'childrenImageSharp.parent.children'
  | 'childrenImageSharp.parent.children.children'
  | 'childrenImageSharp.parent.children.id'
  | 'childrenImageSharp.parent.id'
  | 'childrenImageSharp.parent.internal.content'
  | 'childrenImageSharp.parent.internal.contentDigest'
  | 'childrenImageSharp.parent.internal.contentFilePath'
  | 'childrenImageSharp.parent.internal.description'
  | 'childrenImageSharp.parent.internal.fieldOwners'
  | 'childrenImageSharp.parent.internal.ignoreType'
  | 'childrenImageSharp.parent.internal.mediaType'
  | 'childrenImageSharp.parent.internal.owner'
  | 'childrenImageSharp.parent.internal.type'
  | 'childrenImageSharp.parent.parent.children'
  | 'childrenImageSharp.parent.parent.id'
  | 'childrenImageSharp.resize.aspectRatio'
  | 'childrenImageSharp.resize.height'
  | 'childrenImageSharp.resize.originalName'
  | 'childrenImageSharp.resize.src'
  | 'childrenImageSharp.resize.tracedSVG'
  | 'childrenImageSharp.resize.width'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'ctime'
  | 'ctimeMs'
  | 'dev'
  | 'dir'
  | 'ext'
  | 'extension'
  | 'gid'
  | 'id'
  | 'ino'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'mode'
  | 'modifiedTime'
  | 'mtime'
  | 'mtimeMs'
  | 'name'
  | 'nlink'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'prettySize'
  | 'publicURL'
  | 'rdev'
  | 'relativeDirectory'
  | 'relativePath'
  | 'root'
  | 'size'
  | 'sourceInstanceName'
  | 'uid';

type FileFilterInput = {
  readonly absolutePath: InputMaybe<StringQueryOperatorInput>;
  readonly accessTime: InputMaybe<DateQueryOperatorInput>;
  readonly atime: InputMaybe<DateQueryOperatorInput>;
  readonly atimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly base: InputMaybe<StringQueryOperatorInput>;
  readonly birthTime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly blksize: InputMaybe<IntQueryOperatorInput>;
  readonly blocks: InputMaybe<IntQueryOperatorInput>;
  readonly changeTime: InputMaybe<DateQueryOperatorInput>;
  readonly childImageSharp: InputMaybe<ImageSharpFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly childrenImageSharp: InputMaybe<ImageSharpFilterListInput>;
  readonly ctime: InputMaybe<DateQueryOperatorInput>;
  readonly ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly dev: InputMaybe<IntQueryOperatorInput>;
  readonly dir: InputMaybe<StringQueryOperatorInput>;
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly extension: InputMaybe<StringQueryOperatorInput>;
  readonly gid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly ino: InputMaybe<FloatQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mode: InputMaybe<IntQueryOperatorInput>;
  readonly modifiedTime: InputMaybe<DateQueryOperatorInput>;
  readonly mtime: InputMaybe<DateQueryOperatorInput>;
  readonly mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nlink: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly prettySize: InputMaybe<StringQueryOperatorInput>;
  readonly publicURL: InputMaybe<StringQueryOperatorInput>;
  readonly rdev: InputMaybe<IntQueryOperatorInput>;
  readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  readonly relativePath: InputMaybe<StringQueryOperatorInput>;
  readonly root: InputMaybe<StringQueryOperatorInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
  readonly sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  readonly uid: InputMaybe<IntQueryOperatorInput>;
};

type FileGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<FileEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<FileGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<File>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type FileGroupConnection_distinctArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_groupArgs = {
  field: FileFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type FileGroupConnection_maxArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_minArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_sumArgs = {
  field: FileFieldsEnum;
};

type FileSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<FileFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type FloatQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Float']>;
  readonly gt: InputMaybe<Scalars['Float']>;
  readonly gte: InputMaybe<Scalars['Float']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  readonly lt: InputMaybe<Scalars['Float']>;
  readonly lte: InputMaybe<Scalars['Float']>;
  readonly ne: InputMaybe<Scalars['Float']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
};

type GatsbyImageDataQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['GatsbyImageData']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['GatsbyImageData']>>>;
  readonly ne: InputMaybe<Scalars['GatsbyImageData']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['GatsbyImageData']>>>;
};

type GatsbyImageFormat =
  | 'auto'
  | 'avif'
  | 'jpg'
  | ''
  | 'png'
  | 'webp';

type GatsbyImageLayout =
  | 'constrained'
  | 'fixed'
  | 'fullWidth';

type GatsbyImagePlaceholder =
  | 'blurred'
  | 'dominantColor'
  | 'none'
  | 'tracedSVG';

type GraphCMSImagePlaceholder =
  | 'BLURRED'
  | 'DOMINANT_COLOR'
  | 'NONE'
  | 'TRACED_SVG';

type GraphCMS_Asset = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly createdAt: Scalars['JSON'];
  readonly createdBy: Maybe<GraphCMS_User>;
  readonly fileName: Scalars['String'];
  readonly gatsbyImageData: Maybe<Scalars['JSON']>;
  readonly handle: Scalars['String'];
  readonly height: Maybe<Scalars['Float']>;
  readonly iconDevelopmentOption: ReadonlyArray<GraphCMS_DevelopmentOption>;
  readonly id: Scalars['ID'];
  readonly imageInfo: ReadonlyArray<GraphCMS_Info>;
  readonly informationMainImageDevelopmentOption: ReadonlyArray<GraphCMS_DevelopmentOption>;
  readonly internal: Internal;
  readonly locale: GraphCMS_Locale;
  readonly mimeType: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly publishedAt: Maybe<Scalars['JSON']>;
  readonly publishedBy: Maybe<GraphCMS_User>;
  readonly remoteId: Scalars['ID'];
  readonly remoteTypeName: Scalars['String'];
  readonly scheduledIn: ReadonlyArray<GraphCMS_ScheduledOperation>;
  readonly size: Maybe<Scalars['Float']>;
  readonly stage: GraphCMS_Stage;
  readonly updatedAt: Scalars['JSON'];
  readonly updatedBy: Maybe<GraphCMS_User>;
  readonly url: Scalars['String'];
  readonly width: Maybe<Scalars['Float']>;
};


type GraphCMS_Asset_gatsbyImageDataArgs = {
  aspectRatio: InputMaybe<Scalars['Float']>;
  backgroundColor: InputMaybe<Scalars['String']>;
  breakpoints: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  height: InputMaybe<Scalars['Int']>;
  layout: InputMaybe<GatsbyImageLayout>;
  outputPixelDensities: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  placeholder: InputMaybe<GraphCMSImagePlaceholder>;
  quality: InputMaybe<Scalars['Int']>;
  sizes: InputMaybe<Scalars['String']>;
  width: InputMaybe<Scalars['Int']>;
};

type GraphCMS_AssetConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_AssetEdge>;
  readonly group: ReadonlyArray<GraphCMS_AssetGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_Asset>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_AssetConnection_distinctArgs = {
  field: GraphCMS_AssetFieldsEnum;
};


type GraphCMS_AssetConnection_groupArgs = {
  field: GraphCMS_AssetFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_AssetConnection_maxArgs = {
  field: GraphCMS_AssetFieldsEnum;
};


type GraphCMS_AssetConnection_minArgs = {
  field: GraphCMS_AssetFieldsEnum;
};


type GraphCMS_AssetConnection_sumArgs = {
  field: GraphCMS_AssetFieldsEnum;
};

type GraphCMS_AssetEdge = {
  readonly next: Maybe<GraphCMS_Asset>;
  readonly node: GraphCMS_Asset;
  readonly previous: Maybe<GraphCMS_Asset>;
};

type GraphCMS_AssetFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'createdAt'
  | 'createdBy.children'
  | 'createdBy.children.children'
  | 'createdBy.children.children.children'
  | 'createdBy.children.children.id'
  | 'createdBy.children.id'
  | 'createdBy.children.internal.content'
  | 'createdBy.children.internal.contentDigest'
  | 'createdBy.children.internal.contentFilePath'
  | 'createdBy.children.internal.description'
  | 'createdBy.children.internal.fieldOwners'
  | 'createdBy.children.internal.ignoreType'
  | 'createdBy.children.internal.mediaType'
  | 'createdBy.children.internal.owner'
  | 'createdBy.children.internal.type'
  | 'createdBy.children.parent.children'
  | 'createdBy.children.parent.id'
  | 'createdBy.createdAt'
  | 'createdBy.id'
  | 'createdBy.internal.content'
  | 'createdBy.internal.contentDigest'
  | 'createdBy.internal.contentFilePath'
  | 'createdBy.internal.description'
  | 'createdBy.internal.fieldOwners'
  | 'createdBy.internal.ignoreType'
  | 'createdBy.internal.mediaType'
  | 'createdBy.internal.owner'
  | 'createdBy.internal.type'
  | 'createdBy.isActive'
  | 'createdBy.kind'
  | 'createdBy.name'
  | 'createdBy.parent.children'
  | 'createdBy.parent.children.children'
  | 'createdBy.parent.children.id'
  | 'createdBy.parent.id'
  | 'createdBy.parent.internal.content'
  | 'createdBy.parent.internal.contentDigest'
  | 'createdBy.parent.internal.contentFilePath'
  | 'createdBy.parent.internal.description'
  | 'createdBy.parent.internal.fieldOwners'
  | 'createdBy.parent.internal.ignoreType'
  | 'createdBy.parent.internal.mediaType'
  | 'createdBy.parent.internal.owner'
  | 'createdBy.parent.internal.type'
  | 'createdBy.parent.parent.children'
  | 'createdBy.parent.parent.id'
  | 'createdBy.picture'
  | 'createdBy.publishedAt'
  | 'createdBy.remoteId'
  | 'createdBy.remoteTypeName'
  | 'createdBy.stage'
  | 'createdBy.updatedAt'
  | 'fileName'
  | 'handle'
  | 'height'
  | 'iconDevelopmentOption'
  | 'iconDevelopmentOption.children'
  | 'iconDevelopmentOption.children.children'
  | 'iconDevelopmentOption.children.children.children'
  | 'iconDevelopmentOption.children.children.id'
  | 'iconDevelopmentOption.children.id'
  | 'iconDevelopmentOption.children.internal.content'
  | 'iconDevelopmentOption.children.internal.contentDigest'
  | 'iconDevelopmentOption.children.internal.contentFilePath'
  | 'iconDevelopmentOption.children.internal.description'
  | 'iconDevelopmentOption.children.internal.fieldOwners'
  | 'iconDevelopmentOption.children.internal.ignoreType'
  | 'iconDevelopmentOption.children.internal.mediaType'
  | 'iconDevelopmentOption.children.internal.owner'
  | 'iconDevelopmentOption.children.internal.type'
  | 'iconDevelopmentOption.children.parent.children'
  | 'iconDevelopmentOption.children.parent.id'
  | 'iconDevelopmentOption.createdAt'
  | 'iconDevelopmentOption.createdBy.children'
  | 'iconDevelopmentOption.createdBy.children.children'
  | 'iconDevelopmentOption.createdBy.children.id'
  | 'iconDevelopmentOption.createdBy.createdAt'
  | 'iconDevelopmentOption.createdBy.id'
  | 'iconDevelopmentOption.createdBy.internal.content'
  | 'iconDevelopmentOption.createdBy.internal.contentDigest'
  | 'iconDevelopmentOption.createdBy.internal.contentFilePath'
  | 'iconDevelopmentOption.createdBy.internal.description'
  | 'iconDevelopmentOption.createdBy.internal.fieldOwners'
  | 'iconDevelopmentOption.createdBy.internal.ignoreType'
  | 'iconDevelopmentOption.createdBy.internal.mediaType'
  | 'iconDevelopmentOption.createdBy.internal.owner'
  | 'iconDevelopmentOption.createdBy.internal.type'
  | 'iconDevelopmentOption.createdBy.isActive'
  | 'iconDevelopmentOption.createdBy.kind'
  | 'iconDevelopmentOption.createdBy.name'
  | 'iconDevelopmentOption.createdBy.parent.children'
  | 'iconDevelopmentOption.createdBy.parent.id'
  | 'iconDevelopmentOption.createdBy.picture'
  | 'iconDevelopmentOption.createdBy.publishedAt'
  | 'iconDevelopmentOption.createdBy.remoteId'
  | 'iconDevelopmentOption.createdBy.remoteTypeName'
  | 'iconDevelopmentOption.createdBy.stage'
  | 'iconDevelopmentOption.createdBy.updatedAt'
  | 'iconDevelopmentOption.fundingOptions.html'
  | 'iconDevelopmentOption.fundingOptions.markdown'
  | 'iconDevelopmentOption.fundingOptions.raw'
  | 'iconDevelopmentOption.fundingOptions.remoteTypeName'
  | 'iconDevelopmentOption.fundingOptions.text'
  | 'iconDevelopmentOption.gatsbyPath'
  | 'iconDevelopmentOption.icon.children'
  | 'iconDevelopmentOption.icon.children.children'
  | 'iconDevelopmentOption.icon.children.id'
  | 'iconDevelopmentOption.icon.createdAt'
  | 'iconDevelopmentOption.icon.createdBy.children'
  | 'iconDevelopmentOption.icon.createdBy.createdAt'
  | 'iconDevelopmentOption.icon.createdBy.id'
  | 'iconDevelopmentOption.icon.createdBy.isActive'
  | 'iconDevelopmentOption.icon.createdBy.kind'
  | 'iconDevelopmentOption.icon.createdBy.name'
  | 'iconDevelopmentOption.icon.createdBy.picture'
  | 'iconDevelopmentOption.icon.createdBy.publishedAt'
  | 'iconDevelopmentOption.icon.createdBy.remoteId'
  | 'iconDevelopmentOption.icon.createdBy.remoteTypeName'
  | 'iconDevelopmentOption.icon.createdBy.stage'
  | 'iconDevelopmentOption.icon.createdBy.updatedAt'
  | 'iconDevelopmentOption.icon.fileName'
  | 'iconDevelopmentOption.icon.handle'
  | 'iconDevelopmentOption.icon.height'
  | 'iconDevelopmentOption.icon.iconDevelopmentOption'
  | 'iconDevelopmentOption.icon.iconDevelopmentOption.children'
  | 'iconDevelopmentOption.icon.iconDevelopmentOption.createdAt'
  | 'iconDevelopmentOption.icon.iconDevelopmentOption.gatsbyPath'
  | 'iconDevelopmentOption.icon.iconDevelopmentOption.id'
  | 'iconDevelopmentOption.icon.iconDevelopmentOption.intro'
  | 'iconDevelopmentOption.icon.iconDevelopmentOption.locale'
  | 'iconDevelopmentOption.icon.iconDevelopmentOption.publishedAt'
  | 'iconDevelopmentOption.icon.iconDevelopmentOption.remoteId'
  | 'iconDevelopmentOption.icon.iconDevelopmentOption.remoteTypeName'
  | 'iconDevelopmentOption.icon.iconDevelopmentOption.scheduledIn'
  | 'iconDevelopmentOption.icon.iconDevelopmentOption.slug'
  | 'iconDevelopmentOption.icon.iconDevelopmentOption.stage'
  | 'iconDevelopmentOption.icon.iconDevelopmentOption.title'
  | 'iconDevelopmentOption.icon.iconDevelopmentOption.updatedAt'
  | 'iconDevelopmentOption.icon.id'
  | 'iconDevelopmentOption.icon.imageInfo'
  | 'iconDevelopmentOption.icon.imageInfo.children'
  | 'iconDevelopmentOption.icon.imageInfo.createdAt'
  | 'iconDevelopmentOption.icon.imageInfo.id'
  | 'iconDevelopmentOption.icon.imageInfo.image'
  | 'iconDevelopmentOption.icon.imageInfo.infoBlock'
  | 'iconDevelopmentOption.icon.imageInfo.locale'
  | 'iconDevelopmentOption.icon.imageInfo.publishedAt'
  | 'iconDevelopmentOption.icon.imageInfo.remoteId'
  | 'iconDevelopmentOption.icon.imageInfo.remoteTypeName'
  | 'iconDevelopmentOption.icon.imageInfo.scheduledIn'
  | 'iconDevelopmentOption.icon.imageInfo.slider'
  | 'iconDevelopmentOption.icon.imageInfo.slug'
  | 'iconDevelopmentOption.icon.imageInfo.stage'
  | 'iconDevelopmentOption.icon.imageInfo.title'
  | 'iconDevelopmentOption.icon.imageInfo.updatedAt'
  | 'iconDevelopmentOption.icon.informationMainImageDevelopmentOption'
  | 'iconDevelopmentOption.icon.informationMainImageDevelopmentOption.children'
  | 'iconDevelopmentOption.icon.informationMainImageDevelopmentOption.createdAt'
  | 'iconDevelopmentOption.icon.informationMainImageDevelopmentOption.gatsbyPath'
  | 'iconDevelopmentOption.icon.informationMainImageDevelopmentOption.id'
  | 'iconDevelopmentOption.icon.informationMainImageDevelopmentOption.intro'
  | 'iconDevelopmentOption.icon.informationMainImageDevelopmentOption.locale'
  | 'iconDevelopmentOption.icon.informationMainImageDevelopmentOption.publishedAt'
  | 'iconDevelopmentOption.icon.informationMainImageDevelopmentOption.remoteId'
  | 'iconDevelopmentOption.icon.informationMainImageDevelopmentOption.remoteTypeName'
  | 'iconDevelopmentOption.icon.informationMainImageDevelopmentOption.scheduledIn'
  | 'iconDevelopmentOption.icon.informationMainImageDevelopmentOption.slug'
  | 'iconDevelopmentOption.icon.informationMainImageDevelopmentOption.stage'
  | 'iconDevelopmentOption.icon.informationMainImageDevelopmentOption.title'
  | 'iconDevelopmentOption.icon.informationMainImageDevelopmentOption.updatedAt'
  | 'iconDevelopmentOption.icon.internal.content'
  | 'iconDevelopmentOption.icon.internal.contentDigest'
  | 'iconDevelopmentOption.icon.internal.contentFilePath'
  | 'iconDevelopmentOption.icon.internal.description'
  | 'iconDevelopmentOption.icon.internal.fieldOwners'
  | 'iconDevelopmentOption.icon.internal.ignoreType'
  | 'iconDevelopmentOption.icon.internal.mediaType'
  | 'iconDevelopmentOption.icon.internal.owner'
  | 'iconDevelopmentOption.icon.internal.type'
  | 'iconDevelopmentOption.icon.locale'
  | 'iconDevelopmentOption.icon.mimeType'
  | 'iconDevelopmentOption.icon.parent.children'
  | 'iconDevelopmentOption.icon.parent.id'
  | 'iconDevelopmentOption.icon.publishedAt'
  | 'iconDevelopmentOption.icon.publishedBy.children'
  | 'iconDevelopmentOption.icon.publishedBy.createdAt'
  | 'iconDevelopmentOption.icon.publishedBy.id'
  | 'iconDevelopmentOption.icon.publishedBy.isActive'
  | 'iconDevelopmentOption.icon.publishedBy.kind'
  | 'iconDevelopmentOption.icon.publishedBy.name'
  | 'iconDevelopmentOption.icon.publishedBy.picture'
  | 'iconDevelopmentOption.icon.publishedBy.publishedAt'
  | 'iconDevelopmentOption.icon.publishedBy.remoteId'
  | 'iconDevelopmentOption.icon.publishedBy.remoteTypeName'
  | 'iconDevelopmentOption.icon.publishedBy.stage'
  | 'iconDevelopmentOption.icon.publishedBy.updatedAt'
  | 'iconDevelopmentOption.icon.remoteId'
  | 'iconDevelopmentOption.icon.remoteTypeName'
  | 'iconDevelopmentOption.icon.scheduledIn'
  | 'iconDevelopmentOption.icon.scheduledIn.children'
  | 'iconDevelopmentOption.icon.scheduledIn.createdAt'
  | 'iconDevelopmentOption.icon.scheduledIn.description'
  | 'iconDevelopmentOption.icon.scheduledIn.errorMessage'
  | 'iconDevelopmentOption.icon.scheduledIn.id'
  | 'iconDevelopmentOption.icon.scheduledIn.publishedAt'
  | 'iconDevelopmentOption.icon.scheduledIn.rawPayload'
  | 'iconDevelopmentOption.icon.scheduledIn.remoteId'
  | 'iconDevelopmentOption.icon.scheduledIn.remoteTypeName'
  | 'iconDevelopmentOption.icon.scheduledIn.stage'
  | 'iconDevelopmentOption.icon.scheduledIn.status'
  | 'iconDevelopmentOption.icon.scheduledIn.updatedAt'
  | 'iconDevelopmentOption.icon.size'
  | 'iconDevelopmentOption.icon.stage'
  | 'iconDevelopmentOption.icon.updatedAt'
  | 'iconDevelopmentOption.icon.updatedBy.children'
  | 'iconDevelopmentOption.icon.updatedBy.createdAt'
  | 'iconDevelopmentOption.icon.updatedBy.id'
  | 'iconDevelopmentOption.icon.updatedBy.isActive'
  | 'iconDevelopmentOption.icon.updatedBy.kind'
  | 'iconDevelopmentOption.icon.updatedBy.name'
  | 'iconDevelopmentOption.icon.updatedBy.picture'
  | 'iconDevelopmentOption.icon.updatedBy.publishedAt'
  | 'iconDevelopmentOption.icon.updatedBy.remoteId'
  | 'iconDevelopmentOption.icon.updatedBy.remoteTypeName'
  | 'iconDevelopmentOption.icon.updatedBy.stage'
  | 'iconDevelopmentOption.icon.updatedBy.updatedAt'
  | 'iconDevelopmentOption.icon.url'
  | 'iconDevelopmentOption.icon.width'
  | 'iconDevelopmentOption.id'
  | 'iconDevelopmentOption.informationMainImage.children'
  | 'iconDevelopmentOption.informationMainImage.children.children'
  | 'iconDevelopmentOption.informationMainImage.children.id'
  | 'iconDevelopmentOption.informationMainImage.createdAt'
  | 'iconDevelopmentOption.informationMainImage.createdBy.children'
  | 'iconDevelopmentOption.informationMainImage.createdBy.createdAt'
  | 'iconDevelopmentOption.informationMainImage.createdBy.id'
  | 'iconDevelopmentOption.informationMainImage.createdBy.isActive'
  | 'iconDevelopmentOption.informationMainImage.createdBy.kind'
  | 'iconDevelopmentOption.informationMainImage.createdBy.name'
  | 'iconDevelopmentOption.informationMainImage.createdBy.picture'
  | 'iconDevelopmentOption.informationMainImage.createdBy.publishedAt'
  | 'iconDevelopmentOption.informationMainImage.createdBy.remoteId'
  | 'iconDevelopmentOption.informationMainImage.createdBy.remoteTypeName'
  | 'iconDevelopmentOption.informationMainImage.createdBy.stage'
  | 'iconDevelopmentOption.informationMainImage.createdBy.updatedAt'
  | 'iconDevelopmentOption.informationMainImage.fileName'
  | 'iconDevelopmentOption.informationMainImage.handle'
  | 'iconDevelopmentOption.informationMainImage.height'
  | 'iconDevelopmentOption.informationMainImage.iconDevelopmentOption'
  | 'iconDevelopmentOption.informationMainImage.iconDevelopmentOption.children'
  | 'iconDevelopmentOption.informationMainImage.iconDevelopmentOption.createdAt'
  | 'iconDevelopmentOption.informationMainImage.iconDevelopmentOption.gatsbyPath'
  | 'iconDevelopmentOption.informationMainImage.iconDevelopmentOption.id'
  | 'iconDevelopmentOption.informationMainImage.iconDevelopmentOption.intro'
  | 'iconDevelopmentOption.informationMainImage.iconDevelopmentOption.locale'
  | 'iconDevelopmentOption.informationMainImage.iconDevelopmentOption.publishedAt'
  | 'iconDevelopmentOption.informationMainImage.iconDevelopmentOption.remoteId'
  | 'iconDevelopmentOption.informationMainImage.iconDevelopmentOption.remoteTypeName'
  | 'iconDevelopmentOption.informationMainImage.iconDevelopmentOption.scheduledIn'
  | 'iconDevelopmentOption.informationMainImage.iconDevelopmentOption.slug'
  | 'iconDevelopmentOption.informationMainImage.iconDevelopmentOption.stage'
  | 'iconDevelopmentOption.informationMainImage.iconDevelopmentOption.title'
  | 'iconDevelopmentOption.informationMainImage.iconDevelopmentOption.updatedAt'
  | 'iconDevelopmentOption.informationMainImage.id'
  | 'iconDevelopmentOption.informationMainImage.imageInfo'
  | 'iconDevelopmentOption.informationMainImage.imageInfo.children'
  | 'iconDevelopmentOption.informationMainImage.imageInfo.createdAt'
  | 'iconDevelopmentOption.informationMainImage.imageInfo.id'
  | 'iconDevelopmentOption.informationMainImage.imageInfo.image'
  | 'iconDevelopmentOption.informationMainImage.imageInfo.infoBlock'
  | 'iconDevelopmentOption.informationMainImage.imageInfo.locale'
  | 'iconDevelopmentOption.informationMainImage.imageInfo.publishedAt'
  | 'iconDevelopmentOption.informationMainImage.imageInfo.remoteId'
  | 'iconDevelopmentOption.informationMainImage.imageInfo.remoteTypeName'
  | 'iconDevelopmentOption.informationMainImage.imageInfo.scheduledIn'
  | 'iconDevelopmentOption.informationMainImage.imageInfo.slider'
  | 'iconDevelopmentOption.informationMainImage.imageInfo.slug'
  | 'iconDevelopmentOption.informationMainImage.imageInfo.stage'
  | 'iconDevelopmentOption.informationMainImage.imageInfo.title'
  | 'iconDevelopmentOption.informationMainImage.imageInfo.updatedAt'
  | 'iconDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption'
  | 'iconDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.children'
  | 'iconDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.createdAt'
  | 'iconDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.gatsbyPath'
  | 'iconDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.id'
  | 'iconDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.intro'
  | 'iconDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.locale'
  | 'iconDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.publishedAt'
  | 'iconDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.remoteId'
  | 'iconDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.remoteTypeName'
  | 'iconDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.scheduledIn'
  | 'iconDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.slug'
  | 'iconDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.stage'
  | 'iconDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.title'
  | 'iconDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.updatedAt'
  | 'iconDevelopmentOption.informationMainImage.internal.content'
  | 'iconDevelopmentOption.informationMainImage.internal.contentDigest'
  | 'iconDevelopmentOption.informationMainImage.internal.contentFilePath'
  | 'iconDevelopmentOption.informationMainImage.internal.description'
  | 'iconDevelopmentOption.informationMainImage.internal.fieldOwners'
  | 'iconDevelopmentOption.informationMainImage.internal.ignoreType'
  | 'iconDevelopmentOption.informationMainImage.internal.mediaType'
  | 'iconDevelopmentOption.informationMainImage.internal.owner'
  | 'iconDevelopmentOption.informationMainImage.internal.type'
  | 'iconDevelopmentOption.informationMainImage.locale'
  | 'iconDevelopmentOption.informationMainImage.mimeType'
  | 'iconDevelopmentOption.informationMainImage.parent.children'
  | 'iconDevelopmentOption.informationMainImage.parent.id'
  | 'iconDevelopmentOption.informationMainImage.publishedAt'
  | 'iconDevelopmentOption.informationMainImage.publishedBy.children'
  | 'iconDevelopmentOption.informationMainImage.publishedBy.createdAt'
  | 'iconDevelopmentOption.informationMainImage.publishedBy.id'
  | 'iconDevelopmentOption.informationMainImage.publishedBy.isActive'
  | 'iconDevelopmentOption.informationMainImage.publishedBy.kind'
  | 'iconDevelopmentOption.informationMainImage.publishedBy.name'
  | 'iconDevelopmentOption.informationMainImage.publishedBy.picture'
  | 'iconDevelopmentOption.informationMainImage.publishedBy.publishedAt'
  | 'iconDevelopmentOption.informationMainImage.publishedBy.remoteId'
  | 'iconDevelopmentOption.informationMainImage.publishedBy.remoteTypeName'
  | 'iconDevelopmentOption.informationMainImage.publishedBy.stage'
  | 'iconDevelopmentOption.informationMainImage.publishedBy.updatedAt'
  | 'iconDevelopmentOption.informationMainImage.remoteId'
  | 'iconDevelopmentOption.informationMainImage.remoteTypeName'
  | 'iconDevelopmentOption.informationMainImage.scheduledIn'
  | 'iconDevelopmentOption.informationMainImage.scheduledIn.children'
  | 'iconDevelopmentOption.informationMainImage.scheduledIn.createdAt'
  | 'iconDevelopmentOption.informationMainImage.scheduledIn.description'
  | 'iconDevelopmentOption.informationMainImage.scheduledIn.errorMessage'
  | 'iconDevelopmentOption.informationMainImage.scheduledIn.id'
  | 'iconDevelopmentOption.informationMainImage.scheduledIn.publishedAt'
  | 'iconDevelopmentOption.informationMainImage.scheduledIn.rawPayload'
  | 'iconDevelopmentOption.informationMainImage.scheduledIn.remoteId'
  | 'iconDevelopmentOption.informationMainImage.scheduledIn.remoteTypeName'
  | 'iconDevelopmentOption.informationMainImage.scheduledIn.stage'
  | 'iconDevelopmentOption.informationMainImage.scheduledIn.status'
  | 'iconDevelopmentOption.informationMainImage.scheduledIn.updatedAt'
  | 'iconDevelopmentOption.informationMainImage.size'
  | 'iconDevelopmentOption.informationMainImage.stage'
  | 'iconDevelopmentOption.informationMainImage.updatedAt'
  | 'iconDevelopmentOption.informationMainImage.updatedBy.children'
  | 'iconDevelopmentOption.informationMainImage.updatedBy.createdAt'
  | 'iconDevelopmentOption.informationMainImage.updatedBy.id'
  | 'iconDevelopmentOption.informationMainImage.updatedBy.isActive'
  | 'iconDevelopmentOption.informationMainImage.updatedBy.kind'
  | 'iconDevelopmentOption.informationMainImage.updatedBy.name'
  | 'iconDevelopmentOption.informationMainImage.updatedBy.picture'
  | 'iconDevelopmentOption.informationMainImage.updatedBy.publishedAt'
  | 'iconDevelopmentOption.informationMainImage.updatedBy.remoteId'
  | 'iconDevelopmentOption.informationMainImage.updatedBy.remoteTypeName'
  | 'iconDevelopmentOption.informationMainImage.updatedBy.stage'
  | 'iconDevelopmentOption.informationMainImage.updatedBy.updatedAt'
  | 'iconDevelopmentOption.informationMainImage.url'
  | 'iconDevelopmentOption.informationMainImage.width'
  | 'iconDevelopmentOption.internal.content'
  | 'iconDevelopmentOption.internal.contentDigest'
  | 'iconDevelopmentOption.internal.contentFilePath'
  | 'iconDevelopmentOption.internal.description'
  | 'iconDevelopmentOption.internal.fieldOwners'
  | 'iconDevelopmentOption.internal.ignoreType'
  | 'iconDevelopmentOption.internal.mediaType'
  | 'iconDevelopmentOption.internal.owner'
  | 'iconDevelopmentOption.internal.type'
  | 'iconDevelopmentOption.intro'
  | 'iconDevelopmentOption.locale'
  | 'iconDevelopmentOption.mainText.html'
  | 'iconDevelopmentOption.mainText.markdown'
  | 'iconDevelopmentOption.mainText.raw'
  | 'iconDevelopmentOption.mainText.remoteTypeName'
  | 'iconDevelopmentOption.mainText.text'
  | 'iconDevelopmentOption.modelSwot.children'
  | 'iconDevelopmentOption.modelSwot.children.children'
  | 'iconDevelopmentOption.modelSwot.children.id'
  | 'iconDevelopmentOption.modelSwot.createdAt'
  | 'iconDevelopmentOption.modelSwot.createdBy.children'
  | 'iconDevelopmentOption.modelSwot.createdBy.createdAt'
  | 'iconDevelopmentOption.modelSwot.createdBy.id'
  | 'iconDevelopmentOption.modelSwot.createdBy.isActive'
  | 'iconDevelopmentOption.modelSwot.createdBy.kind'
  | 'iconDevelopmentOption.modelSwot.createdBy.name'
  | 'iconDevelopmentOption.modelSwot.createdBy.picture'
  | 'iconDevelopmentOption.modelSwot.createdBy.publishedAt'
  | 'iconDevelopmentOption.modelSwot.createdBy.remoteId'
  | 'iconDevelopmentOption.modelSwot.createdBy.remoteTypeName'
  | 'iconDevelopmentOption.modelSwot.createdBy.stage'
  | 'iconDevelopmentOption.modelSwot.createdBy.updatedAt'
  | 'iconDevelopmentOption.modelSwot.developmentOption'
  | 'iconDevelopmentOption.modelSwot.id'
  | 'iconDevelopmentOption.modelSwot.internal.content'
  | 'iconDevelopmentOption.modelSwot.internal.contentDigest'
  | 'iconDevelopmentOption.modelSwot.internal.contentFilePath'
  | 'iconDevelopmentOption.modelSwot.internal.description'
  | 'iconDevelopmentOption.modelSwot.internal.fieldOwners'
  | 'iconDevelopmentOption.modelSwot.internal.ignoreType'
  | 'iconDevelopmentOption.modelSwot.internal.mediaType'
  | 'iconDevelopmentOption.modelSwot.internal.owner'
  | 'iconDevelopmentOption.modelSwot.internal.type'
  | 'iconDevelopmentOption.modelSwot.locale'
  | 'iconDevelopmentOption.modelSwot.opportunities.html'
  | 'iconDevelopmentOption.modelSwot.opportunities.markdown'
  | 'iconDevelopmentOption.modelSwot.opportunities.raw'
  | 'iconDevelopmentOption.modelSwot.opportunities.remoteTypeName'
  | 'iconDevelopmentOption.modelSwot.opportunities.text'
  | 'iconDevelopmentOption.modelSwot.parent.children'
  | 'iconDevelopmentOption.modelSwot.parent.id'
  | 'iconDevelopmentOption.modelSwot.publishedAt'
  | 'iconDevelopmentOption.modelSwot.publishedBy.children'
  | 'iconDevelopmentOption.modelSwot.publishedBy.createdAt'
  | 'iconDevelopmentOption.modelSwot.publishedBy.id'
  | 'iconDevelopmentOption.modelSwot.publishedBy.isActive'
  | 'iconDevelopmentOption.modelSwot.publishedBy.kind'
  | 'iconDevelopmentOption.modelSwot.publishedBy.name'
  | 'iconDevelopmentOption.modelSwot.publishedBy.picture'
  | 'iconDevelopmentOption.modelSwot.publishedBy.publishedAt'
  | 'iconDevelopmentOption.modelSwot.publishedBy.remoteId'
  | 'iconDevelopmentOption.modelSwot.publishedBy.remoteTypeName'
  | 'iconDevelopmentOption.modelSwot.publishedBy.stage'
  | 'iconDevelopmentOption.modelSwot.publishedBy.updatedAt'
  | 'iconDevelopmentOption.modelSwot.remoteId'
  | 'iconDevelopmentOption.modelSwot.remoteTypeName'
  | 'iconDevelopmentOption.modelSwot.scheduledIn'
  | 'iconDevelopmentOption.modelSwot.scheduledIn.children'
  | 'iconDevelopmentOption.modelSwot.scheduledIn.createdAt'
  | 'iconDevelopmentOption.modelSwot.scheduledIn.description'
  | 'iconDevelopmentOption.modelSwot.scheduledIn.errorMessage'
  | 'iconDevelopmentOption.modelSwot.scheduledIn.id'
  | 'iconDevelopmentOption.modelSwot.scheduledIn.publishedAt'
  | 'iconDevelopmentOption.modelSwot.scheduledIn.rawPayload'
  | 'iconDevelopmentOption.modelSwot.scheduledIn.remoteId'
  | 'iconDevelopmentOption.modelSwot.scheduledIn.remoteTypeName'
  | 'iconDevelopmentOption.modelSwot.scheduledIn.stage'
  | 'iconDevelopmentOption.modelSwot.scheduledIn.status'
  | 'iconDevelopmentOption.modelSwot.scheduledIn.updatedAt'
  | 'iconDevelopmentOption.modelSwot.stage'
  | 'iconDevelopmentOption.modelSwot.strengths.html'
  | 'iconDevelopmentOption.modelSwot.strengths.markdown'
  | 'iconDevelopmentOption.modelSwot.strengths.raw'
  | 'iconDevelopmentOption.modelSwot.strengths.remoteTypeName'
  | 'iconDevelopmentOption.modelSwot.strengths.text'
  | 'iconDevelopmentOption.modelSwot.threats.html'
  | 'iconDevelopmentOption.modelSwot.threats.markdown'
  | 'iconDevelopmentOption.modelSwot.threats.raw'
  | 'iconDevelopmentOption.modelSwot.threats.remoteTypeName'
  | 'iconDevelopmentOption.modelSwot.threats.text'
  | 'iconDevelopmentOption.modelSwot.updatedAt'
  | 'iconDevelopmentOption.modelSwot.updatedBy.children'
  | 'iconDevelopmentOption.modelSwot.updatedBy.createdAt'
  | 'iconDevelopmentOption.modelSwot.updatedBy.id'
  | 'iconDevelopmentOption.modelSwot.updatedBy.isActive'
  | 'iconDevelopmentOption.modelSwot.updatedBy.kind'
  | 'iconDevelopmentOption.modelSwot.updatedBy.name'
  | 'iconDevelopmentOption.modelSwot.updatedBy.picture'
  | 'iconDevelopmentOption.modelSwot.updatedBy.publishedAt'
  | 'iconDevelopmentOption.modelSwot.updatedBy.remoteId'
  | 'iconDevelopmentOption.modelSwot.updatedBy.remoteTypeName'
  | 'iconDevelopmentOption.modelSwot.updatedBy.stage'
  | 'iconDevelopmentOption.modelSwot.updatedBy.updatedAt'
  | 'iconDevelopmentOption.modelSwot.weaknesses.html'
  | 'iconDevelopmentOption.modelSwot.weaknesses.markdown'
  | 'iconDevelopmentOption.modelSwot.weaknesses.raw'
  | 'iconDevelopmentOption.modelSwot.weaknesses.remoteTypeName'
  | 'iconDevelopmentOption.modelSwot.weaknesses.text'
  | 'iconDevelopmentOption.parent.children'
  | 'iconDevelopmentOption.parent.children.children'
  | 'iconDevelopmentOption.parent.children.id'
  | 'iconDevelopmentOption.parent.id'
  | 'iconDevelopmentOption.parent.internal.content'
  | 'iconDevelopmentOption.parent.internal.contentDigest'
  | 'iconDevelopmentOption.parent.internal.contentFilePath'
  | 'iconDevelopmentOption.parent.internal.description'
  | 'iconDevelopmentOption.parent.internal.fieldOwners'
  | 'iconDevelopmentOption.parent.internal.ignoreType'
  | 'iconDevelopmentOption.parent.internal.mediaType'
  | 'iconDevelopmentOption.parent.internal.owner'
  | 'iconDevelopmentOption.parent.internal.type'
  | 'iconDevelopmentOption.parent.parent.children'
  | 'iconDevelopmentOption.parent.parent.id'
  | 'iconDevelopmentOption.publishedAt'
  | 'iconDevelopmentOption.publishedBy.children'
  | 'iconDevelopmentOption.publishedBy.children.children'
  | 'iconDevelopmentOption.publishedBy.children.id'
  | 'iconDevelopmentOption.publishedBy.createdAt'
  | 'iconDevelopmentOption.publishedBy.id'
  | 'iconDevelopmentOption.publishedBy.internal.content'
  | 'iconDevelopmentOption.publishedBy.internal.contentDigest'
  | 'iconDevelopmentOption.publishedBy.internal.contentFilePath'
  | 'iconDevelopmentOption.publishedBy.internal.description'
  | 'iconDevelopmentOption.publishedBy.internal.fieldOwners'
  | 'iconDevelopmentOption.publishedBy.internal.ignoreType'
  | 'iconDevelopmentOption.publishedBy.internal.mediaType'
  | 'iconDevelopmentOption.publishedBy.internal.owner'
  | 'iconDevelopmentOption.publishedBy.internal.type'
  | 'iconDevelopmentOption.publishedBy.isActive'
  | 'iconDevelopmentOption.publishedBy.kind'
  | 'iconDevelopmentOption.publishedBy.name'
  | 'iconDevelopmentOption.publishedBy.parent.children'
  | 'iconDevelopmentOption.publishedBy.parent.id'
  | 'iconDevelopmentOption.publishedBy.picture'
  | 'iconDevelopmentOption.publishedBy.publishedAt'
  | 'iconDevelopmentOption.publishedBy.remoteId'
  | 'iconDevelopmentOption.publishedBy.remoteTypeName'
  | 'iconDevelopmentOption.publishedBy.stage'
  | 'iconDevelopmentOption.publishedBy.updatedAt'
  | 'iconDevelopmentOption.remoteId'
  | 'iconDevelopmentOption.remoteTypeName'
  | 'iconDevelopmentOption.scheduledIn'
  | 'iconDevelopmentOption.scheduledIn.children'
  | 'iconDevelopmentOption.scheduledIn.children.children'
  | 'iconDevelopmentOption.scheduledIn.children.id'
  | 'iconDevelopmentOption.scheduledIn.createdAt'
  | 'iconDevelopmentOption.scheduledIn.createdBy.children'
  | 'iconDevelopmentOption.scheduledIn.createdBy.createdAt'
  | 'iconDevelopmentOption.scheduledIn.createdBy.id'
  | 'iconDevelopmentOption.scheduledIn.createdBy.isActive'
  | 'iconDevelopmentOption.scheduledIn.createdBy.kind'
  | 'iconDevelopmentOption.scheduledIn.createdBy.name'
  | 'iconDevelopmentOption.scheduledIn.createdBy.picture'
  | 'iconDevelopmentOption.scheduledIn.createdBy.publishedAt'
  | 'iconDevelopmentOption.scheduledIn.createdBy.remoteId'
  | 'iconDevelopmentOption.scheduledIn.createdBy.remoteTypeName'
  | 'iconDevelopmentOption.scheduledIn.createdBy.stage'
  | 'iconDevelopmentOption.scheduledIn.createdBy.updatedAt'
  | 'iconDevelopmentOption.scheduledIn.description'
  | 'iconDevelopmentOption.scheduledIn.errorMessage'
  | 'iconDevelopmentOption.scheduledIn.id'
  | 'iconDevelopmentOption.scheduledIn.internal.content'
  | 'iconDevelopmentOption.scheduledIn.internal.contentDigest'
  | 'iconDevelopmentOption.scheduledIn.internal.contentFilePath'
  | 'iconDevelopmentOption.scheduledIn.internal.description'
  | 'iconDevelopmentOption.scheduledIn.internal.fieldOwners'
  | 'iconDevelopmentOption.scheduledIn.internal.ignoreType'
  | 'iconDevelopmentOption.scheduledIn.internal.mediaType'
  | 'iconDevelopmentOption.scheduledIn.internal.owner'
  | 'iconDevelopmentOption.scheduledIn.internal.type'
  | 'iconDevelopmentOption.scheduledIn.parent.children'
  | 'iconDevelopmentOption.scheduledIn.parent.id'
  | 'iconDevelopmentOption.scheduledIn.publishedAt'
  | 'iconDevelopmentOption.scheduledIn.publishedBy.children'
  | 'iconDevelopmentOption.scheduledIn.publishedBy.createdAt'
  | 'iconDevelopmentOption.scheduledIn.publishedBy.id'
  | 'iconDevelopmentOption.scheduledIn.publishedBy.isActive'
  | 'iconDevelopmentOption.scheduledIn.publishedBy.kind'
  | 'iconDevelopmentOption.scheduledIn.publishedBy.name'
  | 'iconDevelopmentOption.scheduledIn.publishedBy.picture'
  | 'iconDevelopmentOption.scheduledIn.publishedBy.publishedAt'
  | 'iconDevelopmentOption.scheduledIn.publishedBy.remoteId'
  | 'iconDevelopmentOption.scheduledIn.publishedBy.remoteTypeName'
  | 'iconDevelopmentOption.scheduledIn.publishedBy.stage'
  | 'iconDevelopmentOption.scheduledIn.publishedBy.updatedAt'
  | 'iconDevelopmentOption.scheduledIn.rawPayload'
  | 'iconDevelopmentOption.scheduledIn.release.children'
  | 'iconDevelopmentOption.scheduledIn.release.createdAt'
  | 'iconDevelopmentOption.scheduledIn.release.description'
  | 'iconDevelopmentOption.scheduledIn.release.errorMessage'
  | 'iconDevelopmentOption.scheduledIn.release.id'
  | 'iconDevelopmentOption.scheduledIn.release.isActive'
  | 'iconDevelopmentOption.scheduledIn.release.isImplicit'
  | 'iconDevelopmentOption.scheduledIn.release.operations'
  | 'iconDevelopmentOption.scheduledIn.release.publishedAt'
  | 'iconDevelopmentOption.scheduledIn.release.releaseAt'
  | 'iconDevelopmentOption.scheduledIn.release.remoteId'
  | 'iconDevelopmentOption.scheduledIn.release.remoteTypeName'
  | 'iconDevelopmentOption.scheduledIn.release.stage'
  | 'iconDevelopmentOption.scheduledIn.release.status'
  | 'iconDevelopmentOption.scheduledIn.release.title'
  | 'iconDevelopmentOption.scheduledIn.release.updatedAt'
  | 'iconDevelopmentOption.scheduledIn.remoteId'
  | 'iconDevelopmentOption.scheduledIn.remoteTypeName'
  | 'iconDevelopmentOption.scheduledIn.stage'
  | 'iconDevelopmentOption.scheduledIn.status'
  | 'iconDevelopmentOption.scheduledIn.updatedAt'
  | 'iconDevelopmentOption.scheduledIn.updatedBy.children'
  | 'iconDevelopmentOption.scheduledIn.updatedBy.createdAt'
  | 'iconDevelopmentOption.scheduledIn.updatedBy.id'
  | 'iconDevelopmentOption.scheduledIn.updatedBy.isActive'
  | 'iconDevelopmentOption.scheduledIn.updatedBy.kind'
  | 'iconDevelopmentOption.scheduledIn.updatedBy.name'
  | 'iconDevelopmentOption.scheduledIn.updatedBy.picture'
  | 'iconDevelopmentOption.scheduledIn.updatedBy.publishedAt'
  | 'iconDevelopmentOption.scheduledIn.updatedBy.remoteId'
  | 'iconDevelopmentOption.scheduledIn.updatedBy.remoteTypeName'
  | 'iconDevelopmentOption.scheduledIn.updatedBy.stage'
  | 'iconDevelopmentOption.scheduledIn.updatedBy.updatedAt'
  | 'iconDevelopmentOption.slug'
  | 'iconDevelopmentOption.stage'
  | 'iconDevelopmentOption.title'
  | 'iconDevelopmentOption.updatedAt'
  | 'iconDevelopmentOption.updatedBy.children'
  | 'iconDevelopmentOption.updatedBy.children.children'
  | 'iconDevelopmentOption.updatedBy.children.id'
  | 'iconDevelopmentOption.updatedBy.createdAt'
  | 'iconDevelopmentOption.updatedBy.id'
  | 'iconDevelopmentOption.updatedBy.internal.content'
  | 'iconDevelopmentOption.updatedBy.internal.contentDigest'
  | 'iconDevelopmentOption.updatedBy.internal.contentFilePath'
  | 'iconDevelopmentOption.updatedBy.internal.description'
  | 'iconDevelopmentOption.updatedBy.internal.fieldOwners'
  | 'iconDevelopmentOption.updatedBy.internal.ignoreType'
  | 'iconDevelopmentOption.updatedBy.internal.mediaType'
  | 'iconDevelopmentOption.updatedBy.internal.owner'
  | 'iconDevelopmentOption.updatedBy.internal.type'
  | 'iconDevelopmentOption.updatedBy.isActive'
  | 'iconDevelopmentOption.updatedBy.kind'
  | 'iconDevelopmentOption.updatedBy.name'
  | 'iconDevelopmentOption.updatedBy.parent.children'
  | 'iconDevelopmentOption.updatedBy.parent.id'
  | 'iconDevelopmentOption.updatedBy.picture'
  | 'iconDevelopmentOption.updatedBy.publishedAt'
  | 'iconDevelopmentOption.updatedBy.remoteId'
  | 'iconDevelopmentOption.updatedBy.remoteTypeName'
  | 'iconDevelopmentOption.updatedBy.stage'
  | 'iconDevelopmentOption.updatedBy.updatedAt'
  | 'id'
  | 'imageInfo'
  | 'imageInfo.children'
  | 'imageInfo.children.children'
  | 'imageInfo.children.children.children'
  | 'imageInfo.children.children.id'
  | 'imageInfo.children.id'
  | 'imageInfo.children.internal.content'
  | 'imageInfo.children.internal.contentDigest'
  | 'imageInfo.children.internal.contentFilePath'
  | 'imageInfo.children.internal.description'
  | 'imageInfo.children.internal.fieldOwners'
  | 'imageInfo.children.internal.ignoreType'
  | 'imageInfo.children.internal.mediaType'
  | 'imageInfo.children.internal.owner'
  | 'imageInfo.children.internal.type'
  | 'imageInfo.children.parent.children'
  | 'imageInfo.children.parent.id'
  | 'imageInfo.createdAt'
  | 'imageInfo.createdBy.children'
  | 'imageInfo.createdBy.children.children'
  | 'imageInfo.createdBy.children.id'
  | 'imageInfo.createdBy.createdAt'
  | 'imageInfo.createdBy.id'
  | 'imageInfo.createdBy.internal.content'
  | 'imageInfo.createdBy.internal.contentDigest'
  | 'imageInfo.createdBy.internal.contentFilePath'
  | 'imageInfo.createdBy.internal.description'
  | 'imageInfo.createdBy.internal.fieldOwners'
  | 'imageInfo.createdBy.internal.ignoreType'
  | 'imageInfo.createdBy.internal.mediaType'
  | 'imageInfo.createdBy.internal.owner'
  | 'imageInfo.createdBy.internal.type'
  | 'imageInfo.createdBy.isActive'
  | 'imageInfo.createdBy.kind'
  | 'imageInfo.createdBy.name'
  | 'imageInfo.createdBy.parent.children'
  | 'imageInfo.createdBy.parent.id'
  | 'imageInfo.createdBy.picture'
  | 'imageInfo.createdBy.publishedAt'
  | 'imageInfo.createdBy.remoteId'
  | 'imageInfo.createdBy.remoteTypeName'
  | 'imageInfo.createdBy.stage'
  | 'imageInfo.createdBy.updatedAt'
  | 'imageInfo.helpfulInfo.children'
  | 'imageInfo.helpfulInfo.children.children'
  | 'imageInfo.helpfulInfo.children.id'
  | 'imageInfo.helpfulInfo.createdAt'
  | 'imageInfo.helpfulInfo.createdBy.children'
  | 'imageInfo.helpfulInfo.createdBy.createdAt'
  | 'imageInfo.helpfulInfo.createdBy.id'
  | 'imageInfo.helpfulInfo.createdBy.isActive'
  | 'imageInfo.helpfulInfo.createdBy.kind'
  | 'imageInfo.helpfulInfo.createdBy.name'
  | 'imageInfo.helpfulInfo.createdBy.picture'
  | 'imageInfo.helpfulInfo.createdBy.publishedAt'
  | 'imageInfo.helpfulInfo.createdBy.remoteId'
  | 'imageInfo.helpfulInfo.createdBy.remoteTypeName'
  | 'imageInfo.helpfulInfo.createdBy.stage'
  | 'imageInfo.helpfulInfo.createdBy.updatedAt'
  | 'imageInfo.helpfulInfo.id'
  | 'imageInfo.helpfulInfo.info.html'
  | 'imageInfo.helpfulInfo.info.markdown'
  | 'imageInfo.helpfulInfo.info.raw'
  | 'imageInfo.helpfulInfo.info.remoteTypeName'
  | 'imageInfo.helpfulInfo.info.text'
  | 'imageInfo.helpfulInfo.internal.content'
  | 'imageInfo.helpfulInfo.internal.contentDigest'
  | 'imageInfo.helpfulInfo.internal.contentFilePath'
  | 'imageInfo.helpfulInfo.internal.description'
  | 'imageInfo.helpfulInfo.internal.fieldOwners'
  | 'imageInfo.helpfulInfo.internal.ignoreType'
  | 'imageInfo.helpfulInfo.internal.mediaType'
  | 'imageInfo.helpfulInfo.internal.owner'
  | 'imageInfo.helpfulInfo.internal.type'
  | 'imageInfo.helpfulInfo.locale'
  | 'imageInfo.helpfulInfo.parent.children'
  | 'imageInfo.helpfulInfo.parent.id'
  | 'imageInfo.helpfulInfo.publishedAt'
  | 'imageInfo.helpfulInfo.publishedBy.children'
  | 'imageInfo.helpfulInfo.publishedBy.createdAt'
  | 'imageInfo.helpfulInfo.publishedBy.id'
  | 'imageInfo.helpfulInfo.publishedBy.isActive'
  | 'imageInfo.helpfulInfo.publishedBy.kind'
  | 'imageInfo.helpfulInfo.publishedBy.name'
  | 'imageInfo.helpfulInfo.publishedBy.picture'
  | 'imageInfo.helpfulInfo.publishedBy.publishedAt'
  | 'imageInfo.helpfulInfo.publishedBy.remoteId'
  | 'imageInfo.helpfulInfo.publishedBy.remoteTypeName'
  | 'imageInfo.helpfulInfo.publishedBy.stage'
  | 'imageInfo.helpfulInfo.publishedBy.updatedAt'
  | 'imageInfo.helpfulInfo.remoteId'
  | 'imageInfo.helpfulInfo.remoteTypeName'
  | 'imageInfo.helpfulInfo.scheduledIn'
  | 'imageInfo.helpfulInfo.scheduledIn.children'
  | 'imageInfo.helpfulInfo.scheduledIn.createdAt'
  | 'imageInfo.helpfulInfo.scheduledIn.description'
  | 'imageInfo.helpfulInfo.scheduledIn.errorMessage'
  | 'imageInfo.helpfulInfo.scheduledIn.id'
  | 'imageInfo.helpfulInfo.scheduledIn.publishedAt'
  | 'imageInfo.helpfulInfo.scheduledIn.rawPayload'
  | 'imageInfo.helpfulInfo.scheduledIn.remoteId'
  | 'imageInfo.helpfulInfo.scheduledIn.remoteTypeName'
  | 'imageInfo.helpfulInfo.scheduledIn.stage'
  | 'imageInfo.helpfulInfo.scheduledIn.status'
  | 'imageInfo.helpfulInfo.scheduledIn.updatedAt'
  | 'imageInfo.helpfulInfo.stage'
  | 'imageInfo.helpfulInfo.stageNumber'
  | 'imageInfo.helpfulInfo.updatedAt'
  | 'imageInfo.helpfulInfo.updatedBy.children'
  | 'imageInfo.helpfulInfo.updatedBy.createdAt'
  | 'imageInfo.helpfulInfo.updatedBy.id'
  | 'imageInfo.helpfulInfo.updatedBy.isActive'
  | 'imageInfo.helpfulInfo.updatedBy.kind'
  | 'imageInfo.helpfulInfo.updatedBy.name'
  | 'imageInfo.helpfulInfo.updatedBy.picture'
  | 'imageInfo.helpfulInfo.updatedBy.publishedAt'
  | 'imageInfo.helpfulInfo.updatedBy.remoteId'
  | 'imageInfo.helpfulInfo.updatedBy.remoteTypeName'
  | 'imageInfo.helpfulInfo.updatedBy.stage'
  | 'imageInfo.helpfulInfo.updatedBy.updatedAt'
  | 'imageInfo.id'
  | 'imageInfo.image'
  | 'imageInfo.image.children'
  | 'imageInfo.image.children.children'
  | 'imageInfo.image.children.id'
  | 'imageInfo.image.createdAt'
  | 'imageInfo.image.createdBy.children'
  | 'imageInfo.image.createdBy.createdAt'
  | 'imageInfo.image.createdBy.id'
  | 'imageInfo.image.createdBy.isActive'
  | 'imageInfo.image.createdBy.kind'
  | 'imageInfo.image.createdBy.name'
  | 'imageInfo.image.createdBy.picture'
  | 'imageInfo.image.createdBy.publishedAt'
  | 'imageInfo.image.createdBy.remoteId'
  | 'imageInfo.image.createdBy.remoteTypeName'
  | 'imageInfo.image.createdBy.stage'
  | 'imageInfo.image.createdBy.updatedAt'
  | 'imageInfo.image.fileName'
  | 'imageInfo.image.handle'
  | 'imageInfo.image.height'
  | 'imageInfo.image.iconDevelopmentOption'
  | 'imageInfo.image.iconDevelopmentOption.children'
  | 'imageInfo.image.iconDevelopmentOption.createdAt'
  | 'imageInfo.image.iconDevelopmentOption.gatsbyPath'
  | 'imageInfo.image.iconDevelopmentOption.id'
  | 'imageInfo.image.iconDevelopmentOption.intro'
  | 'imageInfo.image.iconDevelopmentOption.locale'
  | 'imageInfo.image.iconDevelopmentOption.publishedAt'
  | 'imageInfo.image.iconDevelopmentOption.remoteId'
  | 'imageInfo.image.iconDevelopmentOption.remoteTypeName'
  | 'imageInfo.image.iconDevelopmentOption.scheduledIn'
  | 'imageInfo.image.iconDevelopmentOption.slug'
  | 'imageInfo.image.iconDevelopmentOption.stage'
  | 'imageInfo.image.iconDevelopmentOption.title'
  | 'imageInfo.image.iconDevelopmentOption.updatedAt'
  | 'imageInfo.image.id'
  | 'imageInfo.image.imageInfo'
  | 'imageInfo.image.imageInfo.children'
  | 'imageInfo.image.imageInfo.createdAt'
  | 'imageInfo.image.imageInfo.id'
  | 'imageInfo.image.imageInfo.image'
  | 'imageInfo.image.imageInfo.infoBlock'
  | 'imageInfo.image.imageInfo.locale'
  | 'imageInfo.image.imageInfo.publishedAt'
  | 'imageInfo.image.imageInfo.remoteId'
  | 'imageInfo.image.imageInfo.remoteTypeName'
  | 'imageInfo.image.imageInfo.scheduledIn'
  | 'imageInfo.image.imageInfo.slider'
  | 'imageInfo.image.imageInfo.slug'
  | 'imageInfo.image.imageInfo.stage'
  | 'imageInfo.image.imageInfo.title'
  | 'imageInfo.image.imageInfo.updatedAt'
  | 'imageInfo.image.informationMainImageDevelopmentOption'
  | 'imageInfo.image.informationMainImageDevelopmentOption.children'
  | 'imageInfo.image.informationMainImageDevelopmentOption.createdAt'
  | 'imageInfo.image.informationMainImageDevelopmentOption.gatsbyPath'
  | 'imageInfo.image.informationMainImageDevelopmentOption.id'
  | 'imageInfo.image.informationMainImageDevelopmentOption.intro'
  | 'imageInfo.image.informationMainImageDevelopmentOption.locale'
  | 'imageInfo.image.informationMainImageDevelopmentOption.publishedAt'
  | 'imageInfo.image.informationMainImageDevelopmentOption.remoteId'
  | 'imageInfo.image.informationMainImageDevelopmentOption.remoteTypeName'
  | 'imageInfo.image.informationMainImageDevelopmentOption.scheduledIn'
  | 'imageInfo.image.informationMainImageDevelopmentOption.slug'
  | 'imageInfo.image.informationMainImageDevelopmentOption.stage'
  | 'imageInfo.image.informationMainImageDevelopmentOption.title'
  | 'imageInfo.image.informationMainImageDevelopmentOption.updatedAt'
  | 'imageInfo.image.internal.content'
  | 'imageInfo.image.internal.contentDigest'
  | 'imageInfo.image.internal.contentFilePath'
  | 'imageInfo.image.internal.description'
  | 'imageInfo.image.internal.fieldOwners'
  | 'imageInfo.image.internal.ignoreType'
  | 'imageInfo.image.internal.mediaType'
  | 'imageInfo.image.internal.owner'
  | 'imageInfo.image.internal.type'
  | 'imageInfo.image.locale'
  | 'imageInfo.image.mimeType'
  | 'imageInfo.image.parent.children'
  | 'imageInfo.image.parent.id'
  | 'imageInfo.image.publishedAt'
  | 'imageInfo.image.publishedBy.children'
  | 'imageInfo.image.publishedBy.createdAt'
  | 'imageInfo.image.publishedBy.id'
  | 'imageInfo.image.publishedBy.isActive'
  | 'imageInfo.image.publishedBy.kind'
  | 'imageInfo.image.publishedBy.name'
  | 'imageInfo.image.publishedBy.picture'
  | 'imageInfo.image.publishedBy.publishedAt'
  | 'imageInfo.image.publishedBy.remoteId'
  | 'imageInfo.image.publishedBy.remoteTypeName'
  | 'imageInfo.image.publishedBy.stage'
  | 'imageInfo.image.publishedBy.updatedAt'
  | 'imageInfo.image.remoteId'
  | 'imageInfo.image.remoteTypeName'
  | 'imageInfo.image.scheduledIn'
  | 'imageInfo.image.scheduledIn.children'
  | 'imageInfo.image.scheduledIn.createdAt'
  | 'imageInfo.image.scheduledIn.description'
  | 'imageInfo.image.scheduledIn.errorMessage'
  | 'imageInfo.image.scheduledIn.id'
  | 'imageInfo.image.scheduledIn.publishedAt'
  | 'imageInfo.image.scheduledIn.rawPayload'
  | 'imageInfo.image.scheduledIn.remoteId'
  | 'imageInfo.image.scheduledIn.remoteTypeName'
  | 'imageInfo.image.scheduledIn.stage'
  | 'imageInfo.image.scheduledIn.status'
  | 'imageInfo.image.scheduledIn.updatedAt'
  | 'imageInfo.image.size'
  | 'imageInfo.image.stage'
  | 'imageInfo.image.updatedAt'
  | 'imageInfo.image.updatedBy.children'
  | 'imageInfo.image.updatedBy.createdAt'
  | 'imageInfo.image.updatedBy.id'
  | 'imageInfo.image.updatedBy.isActive'
  | 'imageInfo.image.updatedBy.kind'
  | 'imageInfo.image.updatedBy.name'
  | 'imageInfo.image.updatedBy.picture'
  | 'imageInfo.image.updatedBy.publishedAt'
  | 'imageInfo.image.updatedBy.remoteId'
  | 'imageInfo.image.updatedBy.remoteTypeName'
  | 'imageInfo.image.updatedBy.stage'
  | 'imageInfo.image.updatedBy.updatedAt'
  | 'imageInfo.image.url'
  | 'imageInfo.image.width'
  | 'imageInfo.infoBlock'
  | 'imageInfo.infoBlock.html'
  | 'imageInfo.infoBlock.markdown'
  | 'imageInfo.infoBlock.raw'
  | 'imageInfo.infoBlock.remoteTypeName'
  | 'imageInfo.infoBlock.text'
  | 'imageInfo.internal.content'
  | 'imageInfo.internal.contentDigest'
  | 'imageInfo.internal.contentFilePath'
  | 'imageInfo.internal.description'
  | 'imageInfo.internal.fieldOwners'
  | 'imageInfo.internal.ignoreType'
  | 'imageInfo.internal.mediaType'
  | 'imageInfo.internal.owner'
  | 'imageInfo.internal.type'
  | 'imageInfo.intro.html'
  | 'imageInfo.intro.markdown'
  | 'imageInfo.intro.raw'
  | 'imageInfo.intro.remoteTypeName'
  | 'imageInfo.intro.text'
  | 'imageInfo.locale'
  | 'imageInfo.parent.children'
  | 'imageInfo.parent.children.children'
  | 'imageInfo.parent.children.id'
  | 'imageInfo.parent.id'
  | 'imageInfo.parent.internal.content'
  | 'imageInfo.parent.internal.contentDigest'
  | 'imageInfo.parent.internal.contentFilePath'
  | 'imageInfo.parent.internal.description'
  | 'imageInfo.parent.internal.fieldOwners'
  | 'imageInfo.parent.internal.ignoreType'
  | 'imageInfo.parent.internal.mediaType'
  | 'imageInfo.parent.internal.owner'
  | 'imageInfo.parent.internal.type'
  | 'imageInfo.parent.parent.children'
  | 'imageInfo.parent.parent.id'
  | 'imageInfo.publishedAt'
  | 'imageInfo.publishedBy.children'
  | 'imageInfo.publishedBy.children.children'
  | 'imageInfo.publishedBy.children.id'
  | 'imageInfo.publishedBy.createdAt'
  | 'imageInfo.publishedBy.id'
  | 'imageInfo.publishedBy.internal.content'
  | 'imageInfo.publishedBy.internal.contentDigest'
  | 'imageInfo.publishedBy.internal.contentFilePath'
  | 'imageInfo.publishedBy.internal.description'
  | 'imageInfo.publishedBy.internal.fieldOwners'
  | 'imageInfo.publishedBy.internal.ignoreType'
  | 'imageInfo.publishedBy.internal.mediaType'
  | 'imageInfo.publishedBy.internal.owner'
  | 'imageInfo.publishedBy.internal.type'
  | 'imageInfo.publishedBy.isActive'
  | 'imageInfo.publishedBy.kind'
  | 'imageInfo.publishedBy.name'
  | 'imageInfo.publishedBy.parent.children'
  | 'imageInfo.publishedBy.parent.id'
  | 'imageInfo.publishedBy.picture'
  | 'imageInfo.publishedBy.publishedAt'
  | 'imageInfo.publishedBy.remoteId'
  | 'imageInfo.publishedBy.remoteTypeName'
  | 'imageInfo.publishedBy.stage'
  | 'imageInfo.publishedBy.updatedAt'
  | 'imageInfo.remoteId'
  | 'imageInfo.remoteTypeName'
  | 'imageInfo.scheduledIn'
  | 'imageInfo.scheduledIn.children'
  | 'imageInfo.scheduledIn.children.children'
  | 'imageInfo.scheduledIn.children.id'
  | 'imageInfo.scheduledIn.createdAt'
  | 'imageInfo.scheduledIn.createdBy.children'
  | 'imageInfo.scheduledIn.createdBy.createdAt'
  | 'imageInfo.scheduledIn.createdBy.id'
  | 'imageInfo.scheduledIn.createdBy.isActive'
  | 'imageInfo.scheduledIn.createdBy.kind'
  | 'imageInfo.scheduledIn.createdBy.name'
  | 'imageInfo.scheduledIn.createdBy.picture'
  | 'imageInfo.scheduledIn.createdBy.publishedAt'
  | 'imageInfo.scheduledIn.createdBy.remoteId'
  | 'imageInfo.scheduledIn.createdBy.remoteTypeName'
  | 'imageInfo.scheduledIn.createdBy.stage'
  | 'imageInfo.scheduledIn.createdBy.updatedAt'
  | 'imageInfo.scheduledIn.description'
  | 'imageInfo.scheduledIn.errorMessage'
  | 'imageInfo.scheduledIn.id'
  | 'imageInfo.scheduledIn.internal.content'
  | 'imageInfo.scheduledIn.internal.contentDigest'
  | 'imageInfo.scheduledIn.internal.contentFilePath'
  | 'imageInfo.scheduledIn.internal.description'
  | 'imageInfo.scheduledIn.internal.fieldOwners'
  | 'imageInfo.scheduledIn.internal.ignoreType'
  | 'imageInfo.scheduledIn.internal.mediaType'
  | 'imageInfo.scheduledIn.internal.owner'
  | 'imageInfo.scheduledIn.internal.type'
  | 'imageInfo.scheduledIn.parent.children'
  | 'imageInfo.scheduledIn.parent.id'
  | 'imageInfo.scheduledIn.publishedAt'
  | 'imageInfo.scheduledIn.publishedBy.children'
  | 'imageInfo.scheduledIn.publishedBy.createdAt'
  | 'imageInfo.scheduledIn.publishedBy.id'
  | 'imageInfo.scheduledIn.publishedBy.isActive'
  | 'imageInfo.scheduledIn.publishedBy.kind'
  | 'imageInfo.scheduledIn.publishedBy.name'
  | 'imageInfo.scheduledIn.publishedBy.picture'
  | 'imageInfo.scheduledIn.publishedBy.publishedAt'
  | 'imageInfo.scheduledIn.publishedBy.remoteId'
  | 'imageInfo.scheduledIn.publishedBy.remoteTypeName'
  | 'imageInfo.scheduledIn.publishedBy.stage'
  | 'imageInfo.scheduledIn.publishedBy.updatedAt'
  | 'imageInfo.scheduledIn.rawPayload'
  | 'imageInfo.scheduledIn.release.children'
  | 'imageInfo.scheduledIn.release.createdAt'
  | 'imageInfo.scheduledIn.release.description'
  | 'imageInfo.scheduledIn.release.errorMessage'
  | 'imageInfo.scheduledIn.release.id'
  | 'imageInfo.scheduledIn.release.isActive'
  | 'imageInfo.scheduledIn.release.isImplicit'
  | 'imageInfo.scheduledIn.release.operations'
  | 'imageInfo.scheduledIn.release.publishedAt'
  | 'imageInfo.scheduledIn.release.releaseAt'
  | 'imageInfo.scheduledIn.release.remoteId'
  | 'imageInfo.scheduledIn.release.remoteTypeName'
  | 'imageInfo.scheduledIn.release.stage'
  | 'imageInfo.scheduledIn.release.status'
  | 'imageInfo.scheduledIn.release.title'
  | 'imageInfo.scheduledIn.release.updatedAt'
  | 'imageInfo.scheduledIn.remoteId'
  | 'imageInfo.scheduledIn.remoteTypeName'
  | 'imageInfo.scheduledIn.stage'
  | 'imageInfo.scheduledIn.status'
  | 'imageInfo.scheduledIn.updatedAt'
  | 'imageInfo.scheduledIn.updatedBy.children'
  | 'imageInfo.scheduledIn.updatedBy.createdAt'
  | 'imageInfo.scheduledIn.updatedBy.id'
  | 'imageInfo.scheduledIn.updatedBy.isActive'
  | 'imageInfo.scheduledIn.updatedBy.kind'
  | 'imageInfo.scheduledIn.updatedBy.name'
  | 'imageInfo.scheduledIn.updatedBy.picture'
  | 'imageInfo.scheduledIn.updatedBy.publishedAt'
  | 'imageInfo.scheduledIn.updatedBy.remoteId'
  | 'imageInfo.scheduledIn.updatedBy.remoteTypeName'
  | 'imageInfo.scheduledIn.updatedBy.stage'
  | 'imageInfo.scheduledIn.updatedBy.updatedAt'
  | 'imageInfo.slider'
  | 'imageInfo.slider.html'
  | 'imageInfo.slider.markdown'
  | 'imageInfo.slider.raw'
  | 'imageInfo.slider.remoteTypeName'
  | 'imageInfo.slider.text'
  | 'imageInfo.slug'
  | 'imageInfo.stage'
  | 'imageInfo.title'
  | 'imageInfo.updatedAt'
  | 'imageInfo.updatedBy.children'
  | 'imageInfo.updatedBy.children.children'
  | 'imageInfo.updatedBy.children.id'
  | 'imageInfo.updatedBy.createdAt'
  | 'imageInfo.updatedBy.id'
  | 'imageInfo.updatedBy.internal.content'
  | 'imageInfo.updatedBy.internal.contentDigest'
  | 'imageInfo.updatedBy.internal.contentFilePath'
  | 'imageInfo.updatedBy.internal.description'
  | 'imageInfo.updatedBy.internal.fieldOwners'
  | 'imageInfo.updatedBy.internal.ignoreType'
  | 'imageInfo.updatedBy.internal.mediaType'
  | 'imageInfo.updatedBy.internal.owner'
  | 'imageInfo.updatedBy.internal.type'
  | 'imageInfo.updatedBy.isActive'
  | 'imageInfo.updatedBy.kind'
  | 'imageInfo.updatedBy.name'
  | 'imageInfo.updatedBy.parent.children'
  | 'imageInfo.updatedBy.parent.id'
  | 'imageInfo.updatedBy.picture'
  | 'imageInfo.updatedBy.publishedAt'
  | 'imageInfo.updatedBy.remoteId'
  | 'imageInfo.updatedBy.remoteTypeName'
  | 'imageInfo.updatedBy.stage'
  | 'imageInfo.updatedBy.updatedAt'
  | 'informationMainImageDevelopmentOption'
  | 'informationMainImageDevelopmentOption.children'
  | 'informationMainImageDevelopmentOption.children.children'
  | 'informationMainImageDevelopmentOption.children.children.children'
  | 'informationMainImageDevelopmentOption.children.children.id'
  | 'informationMainImageDevelopmentOption.children.id'
  | 'informationMainImageDevelopmentOption.children.internal.content'
  | 'informationMainImageDevelopmentOption.children.internal.contentDigest'
  | 'informationMainImageDevelopmentOption.children.internal.contentFilePath'
  | 'informationMainImageDevelopmentOption.children.internal.description'
  | 'informationMainImageDevelopmentOption.children.internal.fieldOwners'
  | 'informationMainImageDevelopmentOption.children.internal.ignoreType'
  | 'informationMainImageDevelopmentOption.children.internal.mediaType'
  | 'informationMainImageDevelopmentOption.children.internal.owner'
  | 'informationMainImageDevelopmentOption.children.internal.type'
  | 'informationMainImageDevelopmentOption.children.parent.children'
  | 'informationMainImageDevelopmentOption.children.parent.id'
  | 'informationMainImageDevelopmentOption.createdAt'
  | 'informationMainImageDevelopmentOption.createdBy.children'
  | 'informationMainImageDevelopmentOption.createdBy.children.children'
  | 'informationMainImageDevelopmentOption.createdBy.children.id'
  | 'informationMainImageDevelopmentOption.createdBy.createdAt'
  | 'informationMainImageDevelopmentOption.createdBy.id'
  | 'informationMainImageDevelopmentOption.createdBy.internal.content'
  | 'informationMainImageDevelopmentOption.createdBy.internal.contentDigest'
  | 'informationMainImageDevelopmentOption.createdBy.internal.contentFilePath'
  | 'informationMainImageDevelopmentOption.createdBy.internal.description'
  | 'informationMainImageDevelopmentOption.createdBy.internal.fieldOwners'
  | 'informationMainImageDevelopmentOption.createdBy.internal.ignoreType'
  | 'informationMainImageDevelopmentOption.createdBy.internal.mediaType'
  | 'informationMainImageDevelopmentOption.createdBy.internal.owner'
  | 'informationMainImageDevelopmentOption.createdBy.internal.type'
  | 'informationMainImageDevelopmentOption.createdBy.isActive'
  | 'informationMainImageDevelopmentOption.createdBy.kind'
  | 'informationMainImageDevelopmentOption.createdBy.name'
  | 'informationMainImageDevelopmentOption.createdBy.parent.children'
  | 'informationMainImageDevelopmentOption.createdBy.parent.id'
  | 'informationMainImageDevelopmentOption.createdBy.picture'
  | 'informationMainImageDevelopmentOption.createdBy.publishedAt'
  | 'informationMainImageDevelopmentOption.createdBy.remoteId'
  | 'informationMainImageDevelopmentOption.createdBy.remoteTypeName'
  | 'informationMainImageDevelopmentOption.createdBy.stage'
  | 'informationMainImageDevelopmentOption.createdBy.updatedAt'
  | 'informationMainImageDevelopmentOption.fundingOptions.html'
  | 'informationMainImageDevelopmentOption.fundingOptions.markdown'
  | 'informationMainImageDevelopmentOption.fundingOptions.raw'
  | 'informationMainImageDevelopmentOption.fundingOptions.remoteTypeName'
  | 'informationMainImageDevelopmentOption.fundingOptions.text'
  | 'informationMainImageDevelopmentOption.gatsbyPath'
  | 'informationMainImageDevelopmentOption.icon.children'
  | 'informationMainImageDevelopmentOption.icon.children.children'
  | 'informationMainImageDevelopmentOption.icon.children.id'
  | 'informationMainImageDevelopmentOption.icon.createdAt'
  | 'informationMainImageDevelopmentOption.icon.createdBy.children'
  | 'informationMainImageDevelopmentOption.icon.createdBy.createdAt'
  | 'informationMainImageDevelopmentOption.icon.createdBy.id'
  | 'informationMainImageDevelopmentOption.icon.createdBy.isActive'
  | 'informationMainImageDevelopmentOption.icon.createdBy.kind'
  | 'informationMainImageDevelopmentOption.icon.createdBy.name'
  | 'informationMainImageDevelopmentOption.icon.createdBy.picture'
  | 'informationMainImageDevelopmentOption.icon.createdBy.publishedAt'
  | 'informationMainImageDevelopmentOption.icon.createdBy.remoteId'
  | 'informationMainImageDevelopmentOption.icon.createdBy.remoteTypeName'
  | 'informationMainImageDevelopmentOption.icon.createdBy.stage'
  | 'informationMainImageDevelopmentOption.icon.createdBy.updatedAt'
  | 'informationMainImageDevelopmentOption.icon.fileName'
  | 'informationMainImageDevelopmentOption.icon.handle'
  | 'informationMainImageDevelopmentOption.icon.height'
  | 'informationMainImageDevelopmentOption.icon.iconDevelopmentOption'
  | 'informationMainImageDevelopmentOption.icon.iconDevelopmentOption.children'
  | 'informationMainImageDevelopmentOption.icon.iconDevelopmentOption.createdAt'
  | 'informationMainImageDevelopmentOption.icon.iconDevelopmentOption.gatsbyPath'
  | 'informationMainImageDevelopmentOption.icon.iconDevelopmentOption.id'
  | 'informationMainImageDevelopmentOption.icon.iconDevelopmentOption.intro'
  | 'informationMainImageDevelopmentOption.icon.iconDevelopmentOption.locale'
  | 'informationMainImageDevelopmentOption.icon.iconDevelopmentOption.publishedAt'
  | 'informationMainImageDevelopmentOption.icon.iconDevelopmentOption.remoteId'
  | 'informationMainImageDevelopmentOption.icon.iconDevelopmentOption.remoteTypeName'
  | 'informationMainImageDevelopmentOption.icon.iconDevelopmentOption.scheduledIn'
  | 'informationMainImageDevelopmentOption.icon.iconDevelopmentOption.slug'
  | 'informationMainImageDevelopmentOption.icon.iconDevelopmentOption.stage'
  | 'informationMainImageDevelopmentOption.icon.iconDevelopmentOption.title'
  | 'informationMainImageDevelopmentOption.icon.iconDevelopmentOption.updatedAt'
  | 'informationMainImageDevelopmentOption.icon.id'
  | 'informationMainImageDevelopmentOption.icon.imageInfo'
  | 'informationMainImageDevelopmentOption.icon.imageInfo.children'
  | 'informationMainImageDevelopmentOption.icon.imageInfo.createdAt'
  | 'informationMainImageDevelopmentOption.icon.imageInfo.id'
  | 'informationMainImageDevelopmentOption.icon.imageInfo.image'
  | 'informationMainImageDevelopmentOption.icon.imageInfo.infoBlock'
  | 'informationMainImageDevelopmentOption.icon.imageInfo.locale'
  | 'informationMainImageDevelopmentOption.icon.imageInfo.publishedAt'
  | 'informationMainImageDevelopmentOption.icon.imageInfo.remoteId'
  | 'informationMainImageDevelopmentOption.icon.imageInfo.remoteTypeName'
  | 'informationMainImageDevelopmentOption.icon.imageInfo.scheduledIn'
  | 'informationMainImageDevelopmentOption.icon.imageInfo.slider'
  | 'informationMainImageDevelopmentOption.icon.imageInfo.slug'
  | 'informationMainImageDevelopmentOption.icon.imageInfo.stage'
  | 'informationMainImageDevelopmentOption.icon.imageInfo.title'
  | 'informationMainImageDevelopmentOption.icon.imageInfo.updatedAt'
  | 'informationMainImageDevelopmentOption.icon.informationMainImageDevelopmentOption'
  | 'informationMainImageDevelopmentOption.icon.informationMainImageDevelopmentOption.children'
  | 'informationMainImageDevelopmentOption.icon.informationMainImageDevelopmentOption.createdAt'
  | 'informationMainImageDevelopmentOption.icon.informationMainImageDevelopmentOption.gatsbyPath'
  | 'informationMainImageDevelopmentOption.icon.informationMainImageDevelopmentOption.id'
  | 'informationMainImageDevelopmentOption.icon.informationMainImageDevelopmentOption.intro'
  | 'informationMainImageDevelopmentOption.icon.informationMainImageDevelopmentOption.locale'
  | 'informationMainImageDevelopmentOption.icon.informationMainImageDevelopmentOption.publishedAt'
  | 'informationMainImageDevelopmentOption.icon.informationMainImageDevelopmentOption.remoteId'
  | 'informationMainImageDevelopmentOption.icon.informationMainImageDevelopmentOption.remoteTypeName'
  | 'informationMainImageDevelopmentOption.icon.informationMainImageDevelopmentOption.scheduledIn'
  | 'informationMainImageDevelopmentOption.icon.informationMainImageDevelopmentOption.slug'
  | 'informationMainImageDevelopmentOption.icon.informationMainImageDevelopmentOption.stage'
  | 'informationMainImageDevelopmentOption.icon.informationMainImageDevelopmentOption.title'
  | 'informationMainImageDevelopmentOption.icon.informationMainImageDevelopmentOption.updatedAt'
  | 'informationMainImageDevelopmentOption.icon.internal.content'
  | 'informationMainImageDevelopmentOption.icon.internal.contentDigest'
  | 'informationMainImageDevelopmentOption.icon.internal.contentFilePath'
  | 'informationMainImageDevelopmentOption.icon.internal.description'
  | 'informationMainImageDevelopmentOption.icon.internal.fieldOwners'
  | 'informationMainImageDevelopmentOption.icon.internal.ignoreType'
  | 'informationMainImageDevelopmentOption.icon.internal.mediaType'
  | 'informationMainImageDevelopmentOption.icon.internal.owner'
  | 'informationMainImageDevelopmentOption.icon.internal.type'
  | 'informationMainImageDevelopmentOption.icon.locale'
  | 'informationMainImageDevelopmentOption.icon.mimeType'
  | 'informationMainImageDevelopmentOption.icon.parent.children'
  | 'informationMainImageDevelopmentOption.icon.parent.id'
  | 'informationMainImageDevelopmentOption.icon.publishedAt'
  | 'informationMainImageDevelopmentOption.icon.publishedBy.children'
  | 'informationMainImageDevelopmentOption.icon.publishedBy.createdAt'
  | 'informationMainImageDevelopmentOption.icon.publishedBy.id'
  | 'informationMainImageDevelopmentOption.icon.publishedBy.isActive'
  | 'informationMainImageDevelopmentOption.icon.publishedBy.kind'
  | 'informationMainImageDevelopmentOption.icon.publishedBy.name'
  | 'informationMainImageDevelopmentOption.icon.publishedBy.picture'
  | 'informationMainImageDevelopmentOption.icon.publishedBy.publishedAt'
  | 'informationMainImageDevelopmentOption.icon.publishedBy.remoteId'
  | 'informationMainImageDevelopmentOption.icon.publishedBy.remoteTypeName'
  | 'informationMainImageDevelopmentOption.icon.publishedBy.stage'
  | 'informationMainImageDevelopmentOption.icon.publishedBy.updatedAt'
  | 'informationMainImageDevelopmentOption.icon.remoteId'
  | 'informationMainImageDevelopmentOption.icon.remoteTypeName'
  | 'informationMainImageDevelopmentOption.icon.scheduledIn'
  | 'informationMainImageDevelopmentOption.icon.scheduledIn.children'
  | 'informationMainImageDevelopmentOption.icon.scheduledIn.createdAt'
  | 'informationMainImageDevelopmentOption.icon.scheduledIn.description'
  | 'informationMainImageDevelopmentOption.icon.scheduledIn.errorMessage'
  | 'informationMainImageDevelopmentOption.icon.scheduledIn.id'
  | 'informationMainImageDevelopmentOption.icon.scheduledIn.publishedAt'
  | 'informationMainImageDevelopmentOption.icon.scheduledIn.rawPayload'
  | 'informationMainImageDevelopmentOption.icon.scheduledIn.remoteId'
  | 'informationMainImageDevelopmentOption.icon.scheduledIn.remoteTypeName'
  | 'informationMainImageDevelopmentOption.icon.scheduledIn.stage'
  | 'informationMainImageDevelopmentOption.icon.scheduledIn.status'
  | 'informationMainImageDevelopmentOption.icon.scheduledIn.updatedAt'
  | 'informationMainImageDevelopmentOption.icon.size'
  | 'informationMainImageDevelopmentOption.icon.stage'
  | 'informationMainImageDevelopmentOption.icon.updatedAt'
  | 'informationMainImageDevelopmentOption.icon.updatedBy.children'
  | 'informationMainImageDevelopmentOption.icon.updatedBy.createdAt'
  | 'informationMainImageDevelopmentOption.icon.updatedBy.id'
  | 'informationMainImageDevelopmentOption.icon.updatedBy.isActive'
  | 'informationMainImageDevelopmentOption.icon.updatedBy.kind'
  | 'informationMainImageDevelopmentOption.icon.updatedBy.name'
  | 'informationMainImageDevelopmentOption.icon.updatedBy.picture'
  | 'informationMainImageDevelopmentOption.icon.updatedBy.publishedAt'
  | 'informationMainImageDevelopmentOption.icon.updatedBy.remoteId'
  | 'informationMainImageDevelopmentOption.icon.updatedBy.remoteTypeName'
  | 'informationMainImageDevelopmentOption.icon.updatedBy.stage'
  | 'informationMainImageDevelopmentOption.icon.updatedBy.updatedAt'
  | 'informationMainImageDevelopmentOption.icon.url'
  | 'informationMainImageDevelopmentOption.icon.width'
  | 'informationMainImageDevelopmentOption.id'
  | 'informationMainImageDevelopmentOption.informationMainImage.children'
  | 'informationMainImageDevelopmentOption.informationMainImage.children.children'
  | 'informationMainImageDevelopmentOption.informationMainImage.children.id'
  | 'informationMainImageDevelopmentOption.informationMainImage.createdAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.createdBy.children'
  | 'informationMainImageDevelopmentOption.informationMainImage.createdBy.createdAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.createdBy.id'
  | 'informationMainImageDevelopmentOption.informationMainImage.createdBy.isActive'
  | 'informationMainImageDevelopmentOption.informationMainImage.createdBy.kind'
  | 'informationMainImageDevelopmentOption.informationMainImage.createdBy.name'
  | 'informationMainImageDevelopmentOption.informationMainImage.createdBy.picture'
  | 'informationMainImageDevelopmentOption.informationMainImage.createdBy.publishedAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.createdBy.remoteId'
  | 'informationMainImageDevelopmentOption.informationMainImage.createdBy.remoteTypeName'
  | 'informationMainImageDevelopmentOption.informationMainImage.createdBy.stage'
  | 'informationMainImageDevelopmentOption.informationMainImage.createdBy.updatedAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.fileName'
  | 'informationMainImageDevelopmentOption.informationMainImage.handle'
  | 'informationMainImageDevelopmentOption.informationMainImage.height'
  | 'informationMainImageDevelopmentOption.informationMainImage.iconDevelopmentOption'
  | 'informationMainImageDevelopmentOption.informationMainImage.iconDevelopmentOption.children'
  | 'informationMainImageDevelopmentOption.informationMainImage.iconDevelopmentOption.createdAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.iconDevelopmentOption.gatsbyPath'
  | 'informationMainImageDevelopmentOption.informationMainImage.iconDevelopmentOption.id'
  | 'informationMainImageDevelopmentOption.informationMainImage.iconDevelopmentOption.intro'
  | 'informationMainImageDevelopmentOption.informationMainImage.iconDevelopmentOption.locale'
  | 'informationMainImageDevelopmentOption.informationMainImage.iconDevelopmentOption.publishedAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.iconDevelopmentOption.remoteId'
  | 'informationMainImageDevelopmentOption.informationMainImage.iconDevelopmentOption.remoteTypeName'
  | 'informationMainImageDevelopmentOption.informationMainImage.iconDevelopmentOption.scheduledIn'
  | 'informationMainImageDevelopmentOption.informationMainImage.iconDevelopmentOption.slug'
  | 'informationMainImageDevelopmentOption.informationMainImage.iconDevelopmentOption.stage'
  | 'informationMainImageDevelopmentOption.informationMainImage.iconDevelopmentOption.title'
  | 'informationMainImageDevelopmentOption.informationMainImage.iconDevelopmentOption.updatedAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.id'
  | 'informationMainImageDevelopmentOption.informationMainImage.imageInfo'
  | 'informationMainImageDevelopmentOption.informationMainImage.imageInfo.children'
  | 'informationMainImageDevelopmentOption.informationMainImage.imageInfo.createdAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.imageInfo.id'
  | 'informationMainImageDevelopmentOption.informationMainImage.imageInfo.image'
  | 'informationMainImageDevelopmentOption.informationMainImage.imageInfo.infoBlock'
  | 'informationMainImageDevelopmentOption.informationMainImage.imageInfo.locale'
  | 'informationMainImageDevelopmentOption.informationMainImage.imageInfo.publishedAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.imageInfo.remoteId'
  | 'informationMainImageDevelopmentOption.informationMainImage.imageInfo.remoteTypeName'
  | 'informationMainImageDevelopmentOption.informationMainImage.imageInfo.scheduledIn'
  | 'informationMainImageDevelopmentOption.informationMainImage.imageInfo.slider'
  | 'informationMainImageDevelopmentOption.informationMainImage.imageInfo.slug'
  | 'informationMainImageDevelopmentOption.informationMainImage.imageInfo.stage'
  | 'informationMainImageDevelopmentOption.informationMainImage.imageInfo.title'
  | 'informationMainImageDevelopmentOption.informationMainImage.imageInfo.updatedAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption'
  | 'informationMainImageDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.children'
  | 'informationMainImageDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.createdAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.gatsbyPath'
  | 'informationMainImageDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.id'
  | 'informationMainImageDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.intro'
  | 'informationMainImageDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.locale'
  | 'informationMainImageDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.publishedAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.remoteId'
  | 'informationMainImageDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.remoteTypeName'
  | 'informationMainImageDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.scheduledIn'
  | 'informationMainImageDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.slug'
  | 'informationMainImageDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.stage'
  | 'informationMainImageDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.title'
  | 'informationMainImageDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption.updatedAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.internal.content'
  | 'informationMainImageDevelopmentOption.informationMainImage.internal.contentDigest'
  | 'informationMainImageDevelopmentOption.informationMainImage.internal.contentFilePath'
  | 'informationMainImageDevelopmentOption.informationMainImage.internal.description'
  | 'informationMainImageDevelopmentOption.informationMainImage.internal.fieldOwners'
  | 'informationMainImageDevelopmentOption.informationMainImage.internal.ignoreType'
  | 'informationMainImageDevelopmentOption.informationMainImage.internal.mediaType'
  | 'informationMainImageDevelopmentOption.informationMainImage.internal.owner'
  | 'informationMainImageDevelopmentOption.informationMainImage.internal.type'
  | 'informationMainImageDevelopmentOption.informationMainImage.locale'
  | 'informationMainImageDevelopmentOption.informationMainImage.mimeType'
  | 'informationMainImageDevelopmentOption.informationMainImage.parent.children'
  | 'informationMainImageDevelopmentOption.informationMainImage.parent.id'
  | 'informationMainImageDevelopmentOption.informationMainImage.publishedAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.publishedBy.children'
  | 'informationMainImageDevelopmentOption.informationMainImage.publishedBy.createdAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.publishedBy.id'
  | 'informationMainImageDevelopmentOption.informationMainImage.publishedBy.isActive'
  | 'informationMainImageDevelopmentOption.informationMainImage.publishedBy.kind'
  | 'informationMainImageDevelopmentOption.informationMainImage.publishedBy.name'
  | 'informationMainImageDevelopmentOption.informationMainImage.publishedBy.picture'
  | 'informationMainImageDevelopmentOption.informationMainImage.publishedBy.publishedAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.publishedBy.remoteId'
  | 'informationMainImageDevelopmentOption.informationMainImage.publishedBy.remoteTypeName'
  | 'informationMainImageDevelopmentOption.informationMainImage.publishedBy.stage'
  | 'informationMainImageDevelopmentOption.informationMainImage.publishedBy.updatedAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.remoteId'
  | 'informationMainImageDevelopmentOption.informationMainImage.remoteTypeName'
  | 'informationMainImageDevelopmentOption.informationMainImage.scheduledIn'
  | 'informationMainImageDevelopmentOption.informationMainImage.scheduledIn.children'
  | 'informationMainImageDevelopmentOption.informationMainImage.scheduledIn.createdAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.scheduledIn.description'
  | 'informationMainImageDevelopmentOption.informationMainImage.scheduledIn.errorMessage'
  | 'informationMainImageDevelopmentOption.informationMainImage.scheduledIn.id'
  | 'informationMainImageDevelopmentOption.informationMainImage.scheduledIn.publishedAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.scheduledIn.rawPayload'
  | 'informationMainImageDevelopmentOption.informationMainImage.scheduledIn.remoteId'
  | 'informationMainImageDevelopmentOption.informationMainImage.scheduledIn.remoteTypeName'
  | 'informationMainImageDevelopmentOption.informationMainImage.scheduledIn.stage'
  | 'informationMainImageDevelopmentOption.informationMainImage.scheduledIn.status'
  | 'informationMainImageDevelopmentOption.informationMainImage.scheduledIn.updatedAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.size'
  | 'informationMainImageDevelopmentOption.informationMainImage.stage'
  | 'informationMainImageDevelopmentOption.informationMainImage.updatedAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.updatedBy.children'
  | 'informationMainImageDevelopmentOption.informationMainImage.updatedBy.createdAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.updatedBy.id'
  | 'informationMainImageDevelopmentOption.informationMainImage.updatedBy.isActive'
  | 'informationMainImageDevelopmentOption.informationMainImage.updatedBy.kind'
  | 'informationMainImageDevelopmentOption.informationMainImage.updatedBy.name'
  | 'informationMainImageDevelopmentOption.informationMainImage.updatedBy.picture'
  | 'informationMainImageDevelopmentOption.informationMainImage.updatedBy.publishedAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.updatedBy.remoteId'
  | 'informationMainImageDevelopmentOption.informationMainImage.updatedBy.remoteTypeName'
  | 'informationMainImageDevelopmentOption.informationMainImage.updatedBy.stage'
  | 'informationMainImageDevelopmentOption.informationMainImage.updatedBy.updatedAt'
  | 'informationMainImageDevelopmentOption.informationMainImage.url'
  | 'informationMainImageDevelopmentOption.informationMainImage.width'
  | 'informationMainImageDevelopmentOption.internal.content'
  | 'informationMainImageDevelopmentOption.internal.contentDigest'
  | 'informationMainImageDevelopmentOption.internal.contentFilePath'
  | 'informationMainImageDevelopmentOption.internal.description'
  | 'informationMainImageDevelopmentOption.internal.fieldOwners'
  | 'informationMainImageDevelopmentOption.internal.ignoreType'
  | 'informationMainImageDevelopmentOption.internal.mediaType'
  | 'informationMainImageDevelopmentOption.internal.owner'
  | 'informationMainImageDevelopmentOption.internal.type'
  | 'informationMainImageDevelopmentOption.intro'
  | 'informationMainImageDevelopmentOption.locale'
  | 'informationMainImageDevelopmentOption.mainText.html'
  | 'informationMainImageDevelopmentOption.mainText.markdown'
  | 'informationMainImageDevelopmentOption.mainText.raw'
  | 'informationMainImageDevelopmentOption.mainText.remoteTypeName'
  | 'informationMainImageDevelopmentOption.mainText.text'
  | 'informationMainImageDevelopmentOption.modelSwot.children'
  | 'informationMainImageDevelopmentOption.modelSwot.children.children'
  | 'informationMainImageDevelopmentOption.modelSwot.children.id'
  | 'informationMainImageDevelopmentOption.modelSwot.createdAt'
  | 'informationMainImageDevelopmentOption.modelSwot.createdBy.children'
  | 'informationMainImageDevelopmentOption.modelSwot.createdBy.createdAt'
  | 'informationMainImageDevelopmentOption.modelSwot.createdBy.id'
  | 'informationMainImageDevelopmentOption.modelSwot.createdBy.isActive'
  | 'informationMainImageDevelopmentOption.modelSwot.createdBy.kind'
  | 'informationMainImageDevelopmentOption.modelSwot.createdBy.name'
  | 'informationMainImageDevelopmentOption.modelSwot.createdBy.picture'
  | 'informationMainImageDevelopmentOption.modelSwot.createdBy.publishedAt'
  | 'informationMainImageDevelopmentOption.modelSwot.createdBy.remoteId'
  | 'informationMainImageDevelopmentOption.modelSwot.createdBy.remoteTypeName'
  | 'informationMainImageDevelopmentOption.modelSwot.createdBy.stage'
  | 'informationMainImageDevelopmentOption.modelSwot.createdBy.updatedAt'
  | 'informationMainImageDevelopmentOption.modelSwot.developmentOption'
  | 'informationMainImageDevelopmentOption.modelSwot.id'
  | 'informationMainImageDevelopmentOption.modelSwot.internal.content'
  | 'informationMainImageDevelopmentOption.modelSwot.internal.contentDigest'
  | 'informationMainImageDevelopmentOption.modelSwot.internal.contentFilePath'
  | 'informationMainImageDevelopmentOption.modelSwot.internal.description'
  | 'informationMainImageDevelopmentOption.modelSwot.internal.fieldOwners'
  | 'informationMainImageDevelopmentOption.modelSwot.internal.ignoreType'
  | 'informationMainImageDevelopmentOption.modelSwot.internal.mediaType'
  | 'informationMainImageDevelopmentOption.modelSwot.internal.owner'
  | 'informationMainImageDevelopmentOption.modelSwot.internal.type'
  | 'informationMainImageDevelopmentOption.modelSwot.locale'
  | 'informationMainImageDevelopmentOption.modelSwot.opportunities.html'
  | 'informationMainImageDevelopmentOption.modelSwot.opportunities.markdown'
  | 'informationMainImageDevelopmentOption.modelSwot.opportunities.raw'
  | 'informationMainImageDevelopmentOption.modelSwot.opportunities.remoteTypeName'
  | 'informationMainImageDevelopmentOption.modelSwot.opportunities.text'
  | 'informationMainImageDevelopmentOption.modelSwot.parent.children'
  | 'informationMainImageDevelopmentOption.modelSwot.parent.id'
  | 'informationMainImageDevelopmentOption.modelSwot.publishedAt'
  | 'informationMainImageDevelopmentOption.modelSwot.publishedBy.children'
  | 'informationMainImageDevelopmentOption.modelSwot.publishedBy.createdAt'
  | 'informationMainImageDevelopmentOption.modelSwot.publishedBy.id'
  | 'informationMainImageDevelopmentOption.modelSwot.publishedBy.isActive'
  | 'informationMainImageDevelopmentOption.modelSwot.publishedBy.kind'
  | 'informationMainImageDevelopmentOption.modelSwot.publishedBy.name'
  | 'informationMainImageDevelopmentOption.modelSwot.publishedBy.picture'
  | 'informationMainImageDevelopmentOption.modelSwot.publishedBy.publishedAt'
  | 'informationMainImageDevelopmentOption.modelSwot.publishedBy.remoteId'
  | 'informationMainImageDevelopmentOption.modelSwot.publishedBy.remoteTypeName'
  | 'informationMainImageDevelopmentOption.modelSwot.publishedBy.stage'
  | 'informationMainImageDevelopmentOption.modelSwot.publishedBy.updatedAt'
  | 'informationMainImageDevelopmentOption.modelSwot.remoteId'
  | 'informationMainImageDevelopmentOption.modelSwot.remoteTypeName'
  | 'informationMainImageDevelopmentOption.modelSwot.scheduledIn'
  | 'informationMainImageDevelopmentOption.modelSwot.scheduledIn.children'
  | 'informationMainImageDevelopmentOption.modelSwot.scheduledIn.createdAt'
  | 'informationMainImageDevelopmentOption.modelSwot.scheduledIn.description'
  | 'informationMainImageDevelopmentOption.modelSwot.scheduledIn.errorMessage'
  | 'informationMainImageDevelopmentOption.modelSwot.scheduledIn.id'
  | 'informationMainImageDevelopmentOption.modelSwot.scheduledIn.publishedAt'
  | 'informationMainImageDevelopmentOption.modelSwot.scheduledIn.rawPayload'
  | 'informationMainImageDevelopmentOption.modelSwot.scheduledIn.remoteId'
  | 'informationMainImageDevelopmentOption.modelSwot.scheduledIn.remoteTypeName'
  | 'informationMainImageDevelopmentOption.modelSwot.scheduledIn.stage'
  | 'informationMainImageDevelopmentOption.modelSwot.scheduledIn.status'
  | 'informationMainImageDevelopmentOption.modelSwot.scheduledIn.updatedAt'
  | 'informationMainImageDevelopmentOption.modelSwot.stage'
  | 'informationMainImageDevelopmentOption.modelSwot.strengths.html'
  | 'informationMainImageDevelopmentOption.modelSwot.strengths.markdown'
  | 'informationMainImageDevelopmentOption.modelSwot.strengths.raw'
  | 'informationMainImageDevelopmentOption.modelSwot.strengths.remoteTypeName'
  | 'informationMainImageDevelopmentOption.modelSwot.strengths.text'
  | 'informationMainImageDevelopmentOption.modelSwot.threats.html'
  | 'informationMainImageDevelopmentOption.modelSwot.threats.markdown'
  | 'informationMainImageDevelopmentOption.modelSwot.threats.raw'
  | 'informationMainImageDevelopmentOption.modelSwot.threats.remoteTypeName'
  | 'informationMainImageDevelopmentOption.modelSwot.threats.text'
  | 'informationMainImageDevelopmentOption.modelSwot.updatedAt'
  | 'informationMainImageDevelopmentOption.modelSwot.updatedBy.children'
  | 'informationMainImageDevelopmentOption.modelSwot.updatedBy.createdAt'
  | 'informationMainImageDevelopmentOption.modelSwot.updatedBy.id'
  | 'informationMainImageDevelopmentOption.modelSwot.updatedBy.isActive'
  | 'informationMainImageDevelopmentOption.modelSwot.updatedBy.kind'
  | 'informationMainImageDevelopmentOption.modelSwot.updatedBy.name'
  | 'informationMainImageDevelopmentOption.modelSwot.updatedBy.picture'
  | 'informationMainImageDevelopmentOption.modelSwot.updatedBy.publishedAt'
  | 'informationMainImageDevelopmentOption.modelSwot.updatedBy.remoteId'
  | 'informationMainImageDevelopmentOption.modelSwot.updatedBy.remoteTypeName'
  | 'informationMainImageDevelopmentOption.modelSwot.updatedBy.stage'
  | 'informationMainImageDevelopmentOption.modelSwot.updatedBy.updatedAt'
  | 'informationMainImageDevelopmentOption.modelSwot.weaknesses.html'
  | 'informationMainImageDevelopmentOption.modelSwot.weaknesses.markdown'
  | 'informationMainImageDevelopmentOption.modelSwot.weaknesses.raw'
  | 'informationMainImageDevelopmentOption.modelSwot.weaknesses.remoteTypeName'
  | 'informationMainImageDevelopmentOption.modelSwot.weaknesses.text'
  | 'informationMainImageDevelopmentOption.parent.children'
  | 'informationMainImageDevelopmentOption.parent.children.children'
  | 'informationMainImageDevelopmentOption.parent.children.id'
  | 'informationMainImageDevelopmentOption.parent.id'
  | 'informationMainImageDevelopmentOption.parent.internal.content'
  | 'informationMainImageDevelopmentOption.parent.internal.contentDigest'
  | 'informationMainImageDevelopmentOption.parent.internal.contentFilePath'
  | 'informationMainImageDevelopmentOption.parent.internal.description'
  | 'informationMainImageDevelopmentOption.parent.internal.fieldOwners'
  | 'informationMainImageDevelopmentOption.parent.internal.ignoreType'
  | 'informationMainImageDevelopmentOption.parent.internal.mediaType'
  | 'informationMainImageDevelopmentOption.parent.internal.owner'
  | 'informationMainImageDevelopmentOption.parent.internal.type'
  | 'informationMainImageDevelopmentOption.parent.parent.children'
  | 'informationMainImageDevelopmentOption.parent.parent.id'
  | 'informationMainImageDevelopmentOption.publishedAt'
  | 'informationMainImageDevelopmentOption.publishedBy.children'
  | 'informationMainImageDevelopmentOption.publishedBy.children.children'
  | 'informationMainImageDevelopmentOption.publishedBy.children.id'
  | 'informationMainImageDevelopmentOption.publishedBy.createdAt'
  | 'informationMainImageDevelopmentOption.publishedBy.id'
  | 'informationMainImageDevelopmentOption.publishedBy.internal.content'
  | 'informationMainImageDevelopmentOption.publishedBy.internal.contentDigest'
  | 'informationMainImageDevelopmentOption.publishedBy.internal.contentFilePath'
  | 'informationMainImageDevelopmentOption.publishedBy.internal.description'
  | 'informationMainImageDevelopmentOption.publishedBy.internal.fieldOwners'
  | 'informationMainImageDevelopmentOption.publishedBy.internal.ignoreType'
  | 'informationMainImageDevelopmentOption.publishedBy.internal.mediaType'
  | 'informationMainImageDevelopmentOption.publishedBy.internal.owner'
  | 'informationMainImageDevelopmentOption.publishedBy.internal.type'
  | 'informationMainImageDevelopmentOption.publishedBy.isActive'
  | 'informationMainImageDevelopmentOption.publishedBy.kind'
  | 'informationMainImageDevelopmentOption.publishedBy.name'
  | 'informationMainImageDevelopmentOption.publishedBy.parent.children'
  | 'informationMainImageDevelopmentOption.publishedBy.parent.id'
  | 'informationMainImageDevelopmentOption.publishedBy.picture'
  | 'informationMainImageDevelopmentOption.publishedBy.publishedAt'
  | 'informationMainImageDevelopmentOption.publishedBy.remoteId'
  | 'informationMainImageDevelopmentOption.publishedBy.remoteTypeName'
  | 'informationMainImageDevelopmentOption.publishedBy.stage'
  | 'informationMainImageDevelopmentOption.publishedBy.updatedAt'
  | 'informationMainImageDevelopmentOption.remoteId'
  | 'informationMainImageDevelopmentOption.remoteTypeName'
  | 'informationMainImageDevelopmentOption.scheduledIn'
  | 'informationMainImageDevelopmentOption.scheduledIn.children'
  | 'informationMainImageDevelopmentOption.scheduledIn.children.children'
  | 'informationMainImageDevelopmentOption.scheduledIn.children.id'
  | 'informationMainImageDevelopmentOption.scheduledIn.createdAt'
  | 'informationMainImageDevelopmentOption.scheduledIn.createdBy.children'
  | 'informationMainImageDevelopmentOption.scheduledIn.createdBy.createdAt'
  | 'informationMainImageDevelopmentOption.scheduledIn.createdBy.id'
  | 'informationMainImageDevelopmentOption.scheduledIn.createdBy.isActive'
  | 'informationMainImageDevelopmentOption.scheduledIn.createdBy.kind'
  | 'informationMainImageDevelopmentOption.scheduledIn.createdBy.name'
  | 'informationMainImageDevelopmentOption.scheduledIn.createdBy.picture'
  | 'informationMainImageDevelopmentOption.scheduledIn.createdBy.publishedAt'
  | 'informationMainImageDevelopmentOption.scheduledIn.createdBy.remoteId'
  | 'informationMainImageDevelopmentOption.scheduledIn.createdBy.remoteTypeName'
  | 'informationMainImageDevelopmentOption.scheduledIn.createdBy.stage'
  | 'informationMainImageDevelopmentOption.scheduledIn.createdBy.updatedAt'
  | 'informationMainImageDevelopmentOption.scheduledIn.description'
  | 'informationMainImageDevelopmentOption.scheduledIn.errorMessage'
  | 'informationMainImageDevelopmentOption.scheduledIn.id'
  | 'informationMainImageDevelopmentOption.scheduledIn.internal.content'
  | 'informationMainImageDevelopmentOption.scheduledIn.internal.contentDigest'
  | 'informationMainImageDevelopmentOption.scheduledIn.internal.contentFilePath'
  | 'informationMainImageDevelopmentOption.scheduledIn.internal.description'
  | 'informationMainImageDevelopmentOption.scheduledIn.internal.fieldOwners'
  | 'informationMainImageDevelopmentOption.scheduledIn.internal.ignoreType'
  | 'informationMainImageDevelopmentOption.scheduledIn.internal.mediaType'
  | 'informationMainImageDevelopmentOption.scheduledIn.internal.owner'
  | 'informationMainImageDevelopmentOption.scheduledIn.internal.type'
  | 'informationMainImageDevelopmentOption.scheduledIn.parent.children'
  | 'informationMainImageDevelopmentOption.scheduledIn.parent.id'
  | 'informationMainImageDevelopmentOption.scheduledIn.publishedAt'
  | 'informationMainImageDevelopmentOption.scheduledIn.publishedBy.children'
  | 'informationMainImageDevelopmentOption.scheduledIn.publishedBy.createdAt'
  | 'informationMainImageDevelopmentOption.scheduledIn.publishedBy.id'
  | 'informationMainImageDevelopmentOption.scheduledIn.publishedBy.isActive'
  | 'informationMainImageDevelopmentOption.scheduledIn.publishedBy.kind'
  | 'informationMainImageDevelopmentOption.scheduledIn.publishedBy.name'
  | 'informationMainImageDevelopmentOption.scheduledIn.publishedBy.picture'
  | 'informationMainImageDevelopmentOption.scheduledIn.publishedBy.publishedAt'
  | 'informationMainImageDevelopmentOption.scheduledIn.publishedBy.remoteId'
  | 'informationMainImageDevelopmentOption.scheduledIn.publishedBy.remoteTypeName'
  | 'informationMainImageDevelopmentOption.scheduledIn.publishedBy.stage'
  | 'informationMainImageDevelopmentOption.scheduledIn.publishedBy.updatedAt'
  | 'informationMainImageDevelopmentOption.scheduledIn.rawPayload'
  | 'informationMainImageDevelopmentOption.scheduledIn.release.children'
  | 'informationMainImageDevelopmentOption.scheduledIn.release.createdAt'
  | 'informationMainImageDevelopmentOption.scheduledIn.release.description'
  | 'informationMainImageDevelopmentOption.scheduledIn.release.errorMessage'
  | 'informationMainImageDevelopmentOption.scheduledIn.release.id'
  | 'informationMainImageDevelopmentOption.scheduledIn.release.isActive'
  | 'informationMainImageDevelopmentOption.scheduledIn.release.isImplicit'
  | 'informationMainImageDevelopmentOption.scheduledIn.release.operations'
  | 'informationMainImageDevelopmentOption.scheduledIn.release.publishedAt'
  | 'informationMainImageDevelopmentOption.scheduledIn.release.releaseAt'
  | 'informationMainImageDevelopmentOption.scheduledIn.release.remoteId'
  | 'informationMainImageDevelopmentOption.scheduledIn.release.remoteTypeName'
  | 'informationMainImageDevelopmentOption.scheduledIn.release.stage'
  | 'informationMainImageDevelopmentOption.scheduledIn.release.status'
  | 'informationMainImageDevelopmentOption.scheduledIn.release.title'
  | 'informationMainImageDevelopmentOption.scheduledIn.release.updatedAt'
  | 'informationMainImageDevelopmentOption.scheduledIn.remoteId'
  | 'informationMainImageDevelopmentOption.scheduledIn.remoteTypeName'
  | 'informationMainImageDevelopmentOption.scheduledIn.stage'
  | 'informationMainImageDevelopmentOption.scheduledIn.status'
  | 'informationMainImageDevelopmentOption.scheduledIn.updatedAt'
  | 'informationMainImageDevelopmentOption.scheduledIn.updatedBy.children'
  | 'informationMainImageDevelopmentOption.scheduledIn.updatedBy.createdAt'
  | 'informationMainImageDevelopmentOption.scheduledIn.updatedBy.id'
  | 'informationMainImageDevelopmentOption.scheduledIn.updatedBy.isActive'
  | 'informationMainImageDevelopmentOption.scheduledIn.updatedBy.kind'
  | 'informationMainImageDevelopmentOption.scheduledIn.updatedBy.name'
  | 'informationMainImageDevelopmentOption.scheduledIn.updatedBy.picture'
  | 'informationMainImageDevelopmentOption.scheduledIn.updatedBy.publishedAt'
  | 'informationMainImageDevelopmentOption.scheduledIn.updatedBy.remoteId'
  | 'informationMainImageDevelopmentOption.scheduledIn.updatedBy.remoteTypeName'
  | 'informationMainImageDevelopmentOption.scheduledIn.updatedBy.stage'
  | 'informationMainImageDevelopmentOption.scheduledIn.updatedBy.updatedAt'
  | 'informationMainImageDevelopmentOption.slug'
  | 'informationMainImageDevelopmentOption.stage'
  | 'informationMainImageDevelopmentOption.title'
  | 'informationMainImageDevelopmentOption.updatedAt'
  | 'informationMainImageDevelopmentOption.updatedBy.children'
  | 'informationMainImageDevelopmentOption.updatedBy.children.children'
  | 'informationMainImageDevelopmentOption.updatedBy.children.id'
  | 'informationMainImageDevelopmentOption.updatedBy.createdAt'
  | 'informationMainImageDevelopmentOption.updatedBy.id'
  | 'informationMainImageDevelopmentOption.updatedBy.internal.content'
  | 'informationMainImageDevelopmentOption.updatedBy.internal.contentDigest'
  | 'informationMainImageDevelopmentOption.updatedBy.internal.contentFilePath'
  | 'informationMainImageDevelopmentOption.updatedBy.internal.description'
  | 'informationMainImageDevelopmentOption.updatedBy.internal.fieldOwners'
  | 'informationMainImageDevelopmentOption.updatedBy.internal.ignoreType'
  | 'informationMainImageDevelopmentOption.updatedBy.internal.mediaType'
  | 'informationMainImageDevelopmentOption.updatedBy.internal.owner'
  | 'informationMainImageDevelopmentOption.updatedBy.internal.type'
  | 'informationMainImageDevelopmentOption.updatedBy.isActive'
  | 'informationMainImageDevelopmentOption.updatedBy.kind'
  | 'informationMainImageDevelopmentOption.updatedBy.name'
  | 'informationMainImageDevelopmentOption.updatedBy.parent.children'
  | 'informationMainImageDevelopmentOption.updatedBy.parent.id'
  | 'informationMainImageDevelopmentOption.updatedBy.picture'
  | 'informationMainImageDevelopmentOption.updatedBy.publishedAt'
  | 'informationMainImageDevelopmentOption.updatedBy.remoteId'
  | 'informationMainImageDevelopmentOption.updatedBy.remoteTypeName'
  | 'informationMainImageDevelopmentOption.updatedBy.stage'
  | 'informationMainImageDevelopmentOption.updatedBy.updatedAt'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'locale'
  | 'mimeType'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'publishedAt'
  | 'publishedBy.children'
  | 'publishedBy.children.children'
  | 'publishedBy.children.children.children'
  | 'publishedBy.children.children.id'
  | 'publishedBy.children.id'
  | 'publishedBy.children.internal.content'
  | 'publishedBy.children.internal.contentDigest'
  | 'publishedBy.children.internal.contentFilePath'
  | 'publishedBy.children.internal.description'
  | 'publishedBy.children.internal.fieldOwners'
  | 'publishedBy.children.internal.ignoreType'
  | 'publishedBy.children.internal.mediaType'
  | 'publishedBy.children.internal.owner'
  | 'publishedBy.children.internal.type'
  | 'publishedBy.children.parent.children'
  | 'publishedBy.children.parent.id'
  | 'publishedBy.createdAt'
  | 'publishedBy.id'
  | 'publishedBy.internal.content'
  | 'publishedBy.internal.contentDigest'
  | 'publishedBy.internal.contentFilePath'
  | 'publishedBy.internal.description'
  | 'publishedBy.internal.fieldOwners'
  | 'publishedBy.internal.ignoreType'
  | 'publishedBy.internal.mediaType'
  | 'publishedBy.internal.owner'
  | 'publishedBy.internal.type'
  | 'publishedBy.isActive'
  | 'publishedBy.kind'
  | 'publishedBy.name'
  | 'publishedBy.parent.children'
  | 'publishedBy.parent.children.children'
  | 'publishedBy.parent.children.id'
  | 'publishedBy.parent.id'
  | 'publishedBy.parent.internal.content'
  | 'publishedBy.parent.internal.contentDigest'
  | 'publishedBy.parent.internal.contentFilePath'
  | 'publishedBy.parent.internal.description'
  | 'publishedBy.parent.internal.fieldOwners'
  | 'publishedBy.parent.internal.ignoreType'
  | 'publishedBy.parent.internal.mediaType'
  | 'publishedBy.parent.internal.owner'
  | 'publishedBy.parent.internal.type'
  | 'publishedBy.parent.parent.children'
  | 'publishedBy.parent.parent.id'
  | 'publishedBy.picture'
  | 'publishedBy.publishedAt'
  | 'publishedBy.remoteId'
  | 'publishedBy.remoteTypeName'
  | 'publishedBy.stage'
  | 'publishedBy.updatedAt'
  | 'remoteId'
  | 'remoteTypeName'
  | 'scheduledIn'
  | 'scheduledIn.children'
  | 'scheduledIn.children.children'
  | 'scheduledIn.children.children.children'
  | 'scheduledIn.children.children.id'
  | 'scheduledIn.children.id'
  | 'scheduledIn.children.internal.content'
  | 'scheduledIn.children.internal.contentDigest'
  | 'scheduledIn.children.internal.contentFilePath'
  | 'scheduledIn.children.internal.description'
  | 'scheduledIn.children.internal.fieldOwners'
  | 'scheduledIn.children.internal.ignoreType'
  | 'scheduledIn.children.internal.mediaType'
  | 'scheduledIn.children.internal.owner'
  | 'scheduledIn.children.internal.type'
  | 'scheduledIn.children.parent.children'
  | 'scheduledIn.children.parent.id'
  | 'scheduledIn.createdAt'
  | 'scheduledIn.createdBy.children'
  | 'scheduledIn.createdBy.children.children'
  | 'scheduledIn.createdBy.children.id'
  | 'scheduledIn.createdBy.createdAt'
  | 'scheduledIn.createdBy.id'
  | 'scheduledIn.createdBy.internal.content'
  | 'scheduledIn.createdBy.internal.contentDigest'
  | 'scheduledIn.createdBy.internal.contentFilePath'
  | 'scheduledIn.createdBy.internal.description'
  | 'scheduledIn.createdBy.internal.fieldOwners'
  | 'scheduledIn.createdBy.internal.ignoreType'
  | 'scheduledIn.createdBy.internal.mediaType'
  | 'scheduledIn.createdBy.internal.owner'
  | 'scheduledIn.createdBy.internal.type'
  | 'scheduledIn.createdBy.isActive'
  | 'scheduledIn.createdBy.kind'
  | 'scheduledIn.createdBy.name'
  | 'scheduledIn.createdBy.parent.children'
  | 'scheduledIn.createdBy.parent.id'
  | 'scheduledIn.createdBy.picture'
  | 'scheduledIn.createdBy.publishedAt'
  | 'scheduledIn.createdBy.remoteId'
  | 'scheduledIn.createdBy.remoteTypeName'
  | 'scheduledIn.createdBy.stage'
  | 'scheduledIn.createdBy.updatedAt'
  | 'scheduledIn.description'
  | 'scheduledIn.errorMessage'
  | 'scheduledIn.id'
  | 'scheduledIn.internal.content'
  | 'scheduledIn.internal.contentDigest'
  | 'scheduledIn.internal.contentFilePath'
  | 'scheduledIn.internal.description'
  | 'scheduledIn.internal.fieldOwners'
  | 'scheduledIn.internal.ignoreType'
  | 'scheduledIn.internal.mediaType'
  | 'scheduledIn.internal.owner'
  | 'scheduledIn.internal.type'
  | 'scheduledIn.parent.children'
  | 'scheduledIn.parent.children.children'
  | 'scheduledIn.parent.children.id'
  | 'scheduledIn.parent.id'
  | 'scheduledIn.parent.internal.content'
  | 'scheduledIn.parent.internal.contentDigest'
  | 'scheduledIn.parent.internal.contentFilePath'
  | 'scheduledIn.parent.internal.description'
  | 'scheduledIn.parent.internal.fieldOwners'
  | 'scheduledIn.parent.internal.ignoreType'
  | 'scheduledIn.parent.internal.mediaType'
  | 'scheduledIn.parent.internal.owner'
  | 'scheduledIn.parent.internal.type'
  | 'scheduledIn.parent.parent.children'
  | 'scheduledIn.parent.parent.id'
  | 'scheduledIn.publishedAt'
  | 'scheduledIn.publishedBy.children'
  | 'scheduledIn.publishedBy.children.children'
  | 'scheduledIn.publishedBy.children.id'
  | 'scheduledIn.publishedBy.createdAt'
  | 'scheduledIn.publishedBy.id'
  | 'scheduledIn.publishedBy.internal.content'
  | 'scheduledIn.publishedBy.internal.contentDigest'
  | 'scheduledIn.publishedBy.internal.contentFilePath'
  | 'scheduledIn.publishedBy.internal.description'
  | 'scheduledIn.publishedBy.internal.fieldOwners'
  | 'scheduledIn.publishedBy.internal.ignoreType'
  | 'scheduledIn.publishedBy.internal.mediaType'
  | 'scheduledIn.publishedBy.internal.owner'
  | 'scheduledIn.publishedBy.internal.type'
  | 'scheduledIn.publishedBy.isActive'
  | 'scheduledIn.publishedBy.kind'
  | 'scheduledIn.publishedBy.name'
  | 'scheduledIn.publishedBy.parent.children'
  | 'scheduledIn.publishedBy.parent.id'
  | 'scheduledIn.publishedBy.picture'
  | 'scheduledIn.publishedBy.publishedAt'
  | 'scheduledIn.publishedBy.remoteId'
  | 'scheduledIn.publishedBy.remoteTypeName'
  | 'scheduledIn.publishedBy.stage'
  | 'scheduledIn.publishedBy.updatedAt'
  | 'scheduledIn.rawPayload'
  | 'scheduledIn.release.children'
  | 'scheduledIn.release.children.children'
  | 'scheduledIn.release.children.id'
  | 'scheduledIn.release.createdAt'
  | 'scheduledIn.release.createdBy.children'
  | 'scheduledIn.release.createdBy.createdAt'
  | 'scheduledIn.release.createdBy.id'
  | 'scheduledIn.release.createdBy.isActive'
  | 'scheduledIn.release.createdBy.kind'
  | 'scheduledIn.release.createdBy.name'
  | 'scheduledIn.release.createdBy.picture'
  | 'scheduledIn.release.createdBy.publishedAt'
  | 'scheduledIn.release.createdBy.remoteId'
  | 'scheduledIn.release.createdBy.remoteTypeName'
  | 'scheduledIn.release.createdBy.stage'
  | 'scheduledIn.release.createdBy.updatedAt'
  | 'scheduledIn.release.description'
  | 'scheduledIn.release.errorMessage'
  | 'scheduledIn.release.id'
  | 'scheduledIn.release.internal.content'
  | 'scheduledIn.release.internal.contentDigest'
  | 'scheduledIn.release.internal.contentFilePath'
  | 'scheduledIn.release.internal.description'
  | 'scheduledIn.release.internal.fieldOwners'
  | 'scheduledIn.release.internal.ignoreType'
  | 'scheduledIn.release.internal.mediaType'
  | 'scheduledIn.release.internal.owner'
  | 'scheduledIn.release.internal.type'
  | 'scheduledIn.release.isActive'
  | 'scheduledIn.release.isImplicit'
  | 'scheduledIn.release.operations'
  | 'scheduledIn.release.operations.children'
  | 'scheduledIn.release.operations.createdAt'
  | 'scheduledIn.release.operations.description'
  | 'scheduledIn.release.operations.errorMessage'
  | 'scheduledIn.release.operations.id'
  | 'scheduledIn.release.operations.publishedAt'
  | 'scheduledIn.release.operations.rawPayload'
  | 'scheduledIn.release.operations.remoteId'
  | 'scheduledIn.release.operations.remoteTypeName'
  | 'scheduledIn.release.operations.stage'
  | 'scheduledIn.release.operations.status'
  | 'scheduledIn.release.operations.updatedAt'
  | 'scheduledIn.release.parent.children'
  | 'scheduledIn.release.parent.id'
  | 'scheduledIn.release.publishedAt'
  | 'scheduledIn.release.publishedBy.children'
  | 'scheduledIn.release.publishedBy.createdAt'
  | 'scheduledIn.release.publishedBy.id'
  | 'scheduledIn.release.publishedBy.isActive'
  | 'scheduledIn.release.publishedBy.kind'
  | 'scheduledIn.release.publishedBy.name'
  | 'scheduledIn.release.publishedBy.picture'
  | 'scheduledIn.release.publishedBy.publishedAt'
  | 'scheduledIn.release.publishedBy.remoteId'
  | 'scheduledIn.release.publishedBy.remoteTypeName'
  | 'scheduledIn.release.publishedBy.stage'
  | 'scheduledIn.release.publishedBy.updatedAt'
  | 'scheduledIn.release.releaseAt'
  | 'scheduledIn.release.remoteId'
  | 'scheduledIn.release.remoteTypeName'
  | 'scheduledIn.release.stage'
  | 'scheduledIn.release.status'
  | 'scheduledIn.release.title'
  | 'scheduledIn.release.updatedAt'
  | 'scheduledIn.release.updatedBy.children'
  | 'scheduledIn.release.updatedBy.createdAt'
  | 'scheduledIn.release.updatedBy.id'
  | 'scheduledIn.release.updatedBy.isActive'
  | 'scheduledIn.release.updatedBy.kind'
  | 'scheduledIn.release.updatedBy.name'
  | 'scheduledIn.release.updatedBy.picture'
  | 'scheduledIn.release.updatedBy.publishedAt'
  | 'scheduledIn.release.updatedBy.remoteId'
  | 'scheduledIn.release.updatedBy.remoteTypeName'
  | 'scheduledIn.release.updatedBy.stage'
  | 'scheduledIn.release.updatedBy.updatedAt'
  | 'scheduledIn.remoteId'
  | 'scheduledIn.remoteTypeName'
  | 'scheduledIn.stage'
  | 'scheduledIn.status'
  | 'scheduledIn.updatedAt'
  | 'scheduledIn.updatedBy.children'
  | 'scheduledIn.updatedBy.children.children'
  | 'scheduledIn.updatedBy.children.id'
  | 'scheduledIn.updatedBy.createdAt'
  | 'scheduledIn.updatedBy.id'
  | 'scheduledIn.updatedBy.internal.content'
  | 'scheduledIn.updatedBy.internal.contentDigest'
  | 'scheduledIn.updatedBy.internal.contentFilePath'
  | 'scheduledIn.updatedBy.internal.description'
  | 'scheduledIn.updatedBy.internal.fieldOwners'
  | 'scheduledIn.updatedBy.internal.ignoreType'
  | 'scheduledIn.updatedBy.internal.mediaType'
  | 'scheduledIn.updatedBy.internal.owner'
  | 'scheduledIn.updatedBy.internal.type'
  | 'scheduledIn.updatedBy.isActive'
  | 'scheduledIn.updatedBy.kind'
  | 'scheduledIn.updatedBy.name'
  | 'scheduledIn.updatedBy.parent.children'
  | 'scheduledIn.updatedBy.parent.id'
  | 'scheduledIn.updatedBy.picture'
  | 'scheduledIn.updatedBy.publishedAt'
  | 'scheduledIn.updatedBy.remoteId'
  | 'scheduledIn.updatedBy.remoteTypeName'
  | 'scheduledIn.updatedBy.stage'
  | 'scheduledIn.updatedBy.updatedAt'
  | 'size'
  | 'stage'
  | 'updatedAt'
  | 'updatedBy.children'
  | 'updatedBy.children.children'
  | 'updatedBy.children.children.children'
  | 'updatedBy.children.children.id'
  | 'updatedBy.children.id'
  | 'updatedBy.children.internal.content'
  | 'updatedBy.children.internal.contentDigest'
  | 'updatedBy.children.internal.contentFilePath'
  | 'updatedBy.children.internal.description'
  | 'updatedBy.children.internal.fieldOwners'
  | 'updatedBy.children.internal.ignoreType'
  | 'updatedBy.children.internal.mediaType'
  | 'updatedBy.children.internal.owner'
  | 'updatedBy.children.internal.type'
  | 'updatedBy.children.parent.children'
  | 'updatedBy.children.parent.id'
  | 'updatedBy.createdAt'
  | 'updatedBy.id'
  | 'updatedBy.internal.content'
  | 'updatedBy.internal.contentDigest'
  | 'updatedBy.internal.contentFilePath'
  | 'updatedBy.internal.description'
  | 'updatedBy.internal.fieldOwners'
  | 'updatedBy.internal.ignoreType'
  | 'updatedBy.internal.mediaType'
  | 'updatedBy.internal.owner'
  | 'updatedBy.internal.type'
  | 'updatedBy.isActive'
  | 'updatedBy.kind'
  | 'updatedBy.name'
  | 'updatedBy.parent.children'
  | 'updatedBy.parent.children.children'
  | 'updatedBy.parent.children.id'
  | 'updatedBy.parent.id'
  | 'updatedBy.parent.internal.content'
  | 'updatedBy.parent.internal.contentDigest'
  | 'updatedBy.parent.internal.contentFilePath'
  | 'updatedBy.parent.internal.description'
  | 'updatedBy.parent.internal.fieldOwners'
  | 'updatedBy.parent.internal.ignoreType'
  | 'updatedBy.parent.internal.mediaType'
  | 'updatedBy.parent.internal.owner'
  | 'updatedBy.parent.internal.type'
  | 'updatedBy.parent.parent.children'
  | 'updatedBy.parent.parent.id'
  | 'updatedBy.picture'
  | 'updatedBy.publishedAt'
  | 'updatedBy.remoteId'
  | 'updatedBy.remoteTypeName'
  | 'updatedBy.stage'
  | 'updatedBy.updatedAt'
  | 'url'
  | 'width';

type GraphCMS_AssetFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly createdAt: InputMaybe<JSONQueryOperatorInput>;
  readonly createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly fileName: InputMaybe<StringQueryOperatorInput>;
  readonly handle: InputMaybe<StringQueryOperatorInput>;
  readonly height: InputMaybe<FloatQueryOperatorInput>;
  readonly iconDevelopmentOption: InputMaybe<GraphCMS_DevelopmentOptionFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly imageInfo: InputMaybe<GraphCMS_InfoFilterListInput>;
  readonly informationMainImageDevelopmentOption: InputMaybe<GraphCMS_DevelopmentOptionFilterListInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  readonly mimeType: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly publishedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly remoteId: InputMaybe<IDQueryOperatorInput>;
  readonly remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  readonly scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  readonly size: InputMaybe<FloatQueryOperatorInput>;
  readonly stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  readonly updatedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly url: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<FloatQueryOperatorInput>;
};

type GraphCMS_AssetFilterListInput = {
  readonly elemMatch: InputMaybe<GraphCMS_AssetFilterInput>;
};

type GraphCMS_AssetGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_AssetEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<GraphCMS_AssetGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_Asset>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_AssetGroupConnection_distinctArgs = {
  field: GraphCMS_AssetFieldsEnum;
};


type GraphCMS_AssetGroupConnection_groupArgs = {
  field: GraphCMS_AssetFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_AssetGroupConnection_maxArgs = {
  field: GraphCMS_AssetFieldsEnum;
};


type GraphCMS_AssetGroupConnection_minArgs = {
  field: GraphCMS_AssetFieldsEnum;
};


type GraphCMS_AssetGroupConnection_sumArgs = {
  field: GraphCMS_AssetFieldsEnum;
};

type GraphCMS_AssetSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_AssetFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type GraphCMS_CapitalCosts = {
  readonly details: GraphCMS_RichText;
  readonly funding: GraphCMS_RichText;
  readonly id: Scalars['ID'];
  readonly remoteTypeName: Scalars['String'];
  readonly stage: GraphCMS_Stage;
};

type GraphCMS_CapitalCostsFilterInput = {
  readonly details: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly funding: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly id: InputMaybe<IDQueryOperatorInput>;
  readonly remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  readonly stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
};

type GraphCMS_Checklist = {
  readonly id: Scalars['ID'];
  readonly item: ReadonlyArray<Scalars['String']>;
  readonly locale: GraphCMS_Locale;
  readonly stage: GraphCMS_Stage;
};

type GraphCMS_DevelopmentOption = Node & {
  readonly checklist: Maybe<GraphCMS_DevelopmentOptionchecklistUnion>;
  readonly children: ReadonlyArray<Node>;
  readonly createdAt: Scalars['JSON'];
  readonly createdBy: Maybe<GraphCMS_User>;
  readonly fundingOptions: Maybe<GraphCMS_RichText>;
  readonly gatsbyPath: Maybe<Scalars['String']>;
  readonly icon: GraphCMS_Asset;
  readonly id: Scalars['ID'];
  readonly informationMainImage: Maybe<GraphCMS_Asset>;
  readonly internal: Internal;
  readonly intro: Maybe<Scalars['String']>;
  readonly locale: GraphCMS_Locale;
  readonly mainText: Maybe<GraphCMS_RichText>;
  readonly modelSwot: Maybe<GraphCMS_ModelSwot>;
  readonly parent: Maybe<Node>;
  readonly publishedAt: Maybe<Scalars['JSON']>;
  readonly publishedBy: Maybe<GraphCMS_User>;
  readonly remoteId: Scalars['ID'];
  readonly remoteTypeName: Scalars['String'];
  readonly scheduledIn: ReadonlyArray<GraphCMS_ScheduledOperation>;
  readonly slug: Maybe<Scalars['String']>;
  readonly stage: GraphCMS_Stage;
  readonly title: Scalars['String'];
  readonly updatedAt: Scalars['JSON'];
  readonly updatedBy: Maybe<GraphCMS_User>;
};


type GraphCMS_DevelopmentOption_gatsbyPathArgs = {
  filePath: InputMaybe<Scalars['String']>;
};

type GraphCMS_DevelopmentOptionConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_DevelopmentOptionEdge>;
  readonly group: ReadonlyArray<GraphCMS_DevelopmentOptionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_DevelopmentOption>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_DevelopmentOptionConnection_distinctArgs = {
  field: GraphCMS_DevelopmentOptionFieldsEnum;
};


type GraphCMS_DevelopmentOptionConnection_groupArgs = {
  field: GraphCMS_DevelopmentOptionFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_DevelopmentOptionConnection_maxArgs = {
  field: GraphCMS_DevelopmentOptionFieldsEnum;
};


type GraphCMS_DevelopmentOptionConnection_minArgs = {
  field: GraphCMS_DevelopmentOptionFieldsEnum;
};


type GraphCMS_DevelopmentOptionConnection_sumArgs = {
  field: GraphCMS_DevelopmentOptionFieldsEnum;
};

type GraphCMS_DevelopmentOptionEdge = {
  readonly next: Maybe<GraphCMS_DevelopmentOption>;
  readonly node: GraphCMS_DevelopmentOption;
  readonly previous: Maybe<GraphCMS_DevelopmentOption>;
};

type GraphCMS_DevelopmentOptionFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'createdAt'
  | 'createdBy.children'
  | 'createdBy.children.children'
  | 'createdBy.children.children.children'
  | 'createdBy.children.children.id'
  | 'createdBy.children.id'
  | 'createdBy.children.internal.content'
  | 'createdBy.children.internal.contentDigest'
  | 'createdBy.children.internal.contentFilePath'
  | 'createdBy.children.internal.description'
  | 'createdBy.children.internal.fieldOwners'
  | 'createdBy.children.internal.ignoreType'
  | 'createdBy.children.internal.mediaType'
  | 'createdBy.children.internal.owner'
  | 'createdBy.children.internal.type'
  | 'createdBy.children.parent.children'
  | 'createdBy.children.parent.id'
  | 'createdBy.createdAt'
  | 'createdBy.id'
  | 'createdBy.internal.content'
  | 'createdBy.internal.contentDigest'
  | 'createdBy.internal.contentFilePath'
  | 'createdBy.internal.description'
  | 'createdBy.internal.fieldOwners'
  | 'createdBy.internal.ignoreType'
  | 'createdBy.internal.mediaType'
  | 'createdBy.internal.owner'
  | 'createdBy.internal.type'
  | 'createdBy.isActive'
  | 'createdBy.kind'
  | 'createdBy.name'
  | 'createdBy.parent.children'
  | 'createdBy.parent.children.children'
  | 'createdBy.parent.children.id'
  | 'createdBy.parent.id'
  | 'createdBy.parent.internal.content'
  | 'createdBy.parent.internal.contentDigest'
  | 'createdBy.parent.internal.contentFilePath'
  | 'createdBy.parent.internal.description'
  | 'createdBy.parent.internal.fieldOwners'
  | 'createdBy.parent.internal.ignoreType'
  | 'createdBy.parent.internal.mediaType'
  | 'createdBy.parent.internal.owner'
  | 'createdBy.parent.internal.type'
  | 'createdBy.parent.parent.children'
  | 'createdBy.parent.parent.id'
  | 'createdBy.picture'
  | 'createdBy.publishedAt'
  | 'createdBy.remoteId'
  | 'createdBy.remoteTypeName'
  | 'createdBy.stage'
  | 'createdBy.updatedAt'
  | 'fundingOptions.html'
  | 'fundingOptions.markdown'
  | 'fundingOptions.raw'
  | 'fundingOptions.remoteTypeName'
  | 'fundingOptions.text'
  | 'gatsbyPath'
  | 'icon.children'
  | 'icon.children.children'
  | 'icon.children.children.children'
  | 'icon.children.children.id'
  | 'icon.children.id'
  | 'icon.children.internal.content'
  | 'icon.children.internal.contentDigest'
  | 'icon.children.internal.contentFilePath'
  | 'icon.children.internal.description'
  | 'icon.children.internal.fieldOwners'
  | 'icon.children.internal.ignoreType'
  | 'icon.children.internal.mediaType'
  | 'icon.children.internal.owner'
  | 'icon.children.internal.type'
  | 'icon.children.parent.children'
  | 'icon.children.parent.id'
  | 'icon.createdAt'
  | 'icon.createdBy.children'
  | 'icon.createdBy.children.children'
  | 'icon.createdBy.children.id'
  | 'icon.createdBy.createdAt'
  | 'icon.createdBy.id'
  | 'icon.createdBy.internal.content'
  | 'icon.createdBy.internal.contentDigest'
  | 'icon.createdBy.internal.contentFilePath'
  | 'icon.createdBy.internal.description'
  | 'icon.createdBy.internal.fieldOwners'
  | 'icon.createdBy.internal.ignoreType'
  | 'icon.createdBy.internal.mediaType'
  | 'icon.createdBy.internal.owner'
  | 'icon.createdBy.internal.type'
  | 'icon.createdBy.isActive'
  | 'icon.createdBy.kind'
  | 'icon.createdBy.name'
  | 'icon.createdBy.parent.children'
  | 'icon.createdBy.parent.id'
  | 'icon.createdBy.picture'
  | 'icon.createdBy.publishedAt'
  | 'icon.createdBy.remoteId'
  | 'icon.createdBy.remoteTypeName'
  | 'icon.createdBy.stage'
  | 'icon.createdBy.updatedAt'
  | 'icon.fileName'
  | 'icon.handle'
  | 'icon.height'
  | 'icon.iconDevelopmentOption'
  | 'icon.iconDevelopmentOption.children'
  | 'icon.iconDevelopmentOption.children.children'
  | 'icon.iconDevelopmentOption.children.id'
  | 'icon.iconDevelopmentOption.createdAt'
  | 'icon.iconDevelopmentOption.createdBy.children'
  | 'icon.iconDevelopmentOption.createdBy.createdAt'
  | 'icon.iconDevelopmentOption.createdBy.id'
  | 'icon.iconDevelopmentOption.createdBy.isActive'
  | 'icon.iconDevelopmentOption.createdBy.kind'
  | 'icon.iconDevelopmentOption.createdBy.name'
  | 'icon.iconDevelopmentOption.createdBy.picture'
  | 'icon.iconDevelopmentOption.createdBy.publishedAt'
  | 'icon.iconDevelopmentOption.createdBy.remoteId'
  | 'icon.iconDevelopmentOption.createdBy.remoteTypeName'
  | 'icon.iconDevelopmentOption.createdBy.stage'
  | 'icon.iconDevelopmentOption.createdBy.updatedAt'
  | 'icon.iconDevelopmentOption.fundingOptions.html'
  | 'icon.iconDevelopmentOption.fundingOptions.markdown'
  | 'icon.iconDevelopmentOption.fundingOptions.raw'
  | 'icon.iconDevelopmentOption.fundingOptions.remoteTypeName'
  | 'icon.iconDevelopmentOption.fundingOptions.text'
  | 'icon.iconDevelopmentOption.gatsbyPath'
  | 'icon.iconDevelopmentOption.icon.children'
  | 'icon.iconDevelopmentOption.icon.createdAt'
  | 'icon.iconDevelopmentOption.icon.fileName'
  | 'icon.iconDevelopmentOption.icon.handle'
  | 'icon.iconDevelopmentOption.icon.height'
  | 'icon.iconDevelopmentOption.icon.iconDevelopmentOption'
  | 'icon.iconDevelopmentOption.icon.id'
  | 'icon.iconDevelopmentOption.icon.imageInfo'
  | 'icon.iconDevelopmentOption.icon.informationMainImageDevelopmentOption'
  | 'icon.iconDevelopmentOption.icon.locale'
  | 'icon.iconDevelopmentOption.icon.mimeType'
  | 'icon.iconDevelopmentOption.icon.publishedAt'
  | 'icon.iconDevelopmentOption.icon.remoteId'
  | 'icon.iconDevelopmentOption.icon.remoteTypeName'
  | 'icon.iconDevelopmentOption.icon.scheduledIn'
  | 'icon.iconDevelopmentOption.icon.size'
  | 'icon.iconDevelopmentOption.icon.stage'
  | 'icon.iconDevelopmentOption.icon.updatedAt'
  | 'icon.iconDevelopmentOption.icon.url'
  | 'icon.iconDevelopmentOption.icon.width'
  | 'icon.iconDevelopmentOption.id'
  | 'icon.iconDevelopmentOption.informationMainImage.children'
  | 'icon.iconDevelopmentOption.informationMainImage.createdAt'
  | 'icon.iconDevelopmentOption.informationMainImage.fileName'
  | 'icon.iconDevelopmentOption.informationMainImage.handle'
  | 'icon.iconDevelopmentOption.informationMainImage.height'
  | 'icon.iconDevelopmentOption.informationMainImage.iconDevelopmentOption'
  | 'icon.iconDevelopmentOption.informationMainImage.id'
  | 'icon.iconDevelopmentOption.informationMainImage.imageInfo'
  | 'icon.iconDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption'
  | 'icon.iconDevelopmentOption.informationMainImage.locale'
  | 'icon.iconDevelopmentOption.informationMainImage.mimeType'
  | 'icon.iconDevelopmentOption.informationMainImage.publishedAt'
  | 'icon.iconDevelopmentOption.informationMainImage.remoteId'
  | 'icon.iconDevelopmentOption.informationMainImage.remoteTypeName'
  | 'icon.iconDevelopmentOption.informationMainImage.scheduledIn'
  | 'icon.iconDevelopmentOption.informationMainImage.size'
  | 'icon.iconDevelopmentOption.informationMainImage.stage'
  | 'icon.iconDevelopmentOption.informationMainImage.updatedAt'
  | 'icon.iconDevelopmentOption.informationMainImage.url'
  | 'icon.iconDevelopmentOption.informationMainImage.width'
  | 'icon.iconDevelopmentOption.internal.content'
  | 'icon.iconDevelopmentOption.internal.contentDigest'
  | 'icon.iconDevelopmentOption.internal.contentFilePath'
  | 'icon.iconDevelopmentOption.internal.description'
  | 'icon.iconDevelopmentOption.internal.fieldOwners'
  | 'icon.iconDevelopmentOption.internal.ignoreType'
  | 'icon.iconDevelopmentOption.internal.mediaType'
  | 'icon.iconDevelopmentOption.internal.owner'
  | 'icon.iconDevelopmentOption.internal.type'
  | 'icon.iconDevelopmentOption.intro'
  | 'icon.iconDevelopmentOption.locale'
  | 'icon.iconDevelopmentOption.mainText.html'
  | 'icon.iconDevelopmentOption.mainText.markdown'
  | 'icon.iconDevelopmentOption.mainText.raw'
  | 'icon.iconDevelopmentOption.mainText.remoteTypeName'
  | 'icon.iconDevelopmentOption.mainText.text'
  | 'icon.iconDevelopmentOption.modelSwot.children'
  | 'icon.iconDevelopmentOption.modelSwot.createdAt'
  | 'icon.iconDevelopmentOption.modelSwot.developmentOption'
  | 'icon.iconDevelopmentOption.modelSwot.id'
  | 'icon.iconDevelopmentOption.modelSwot.locale'
  | 'icon.iconDevelopmentOption.modelSwot.publishedAt'
  | 'icon.iconDevelopmentOption.modelSwot.remoteId'
  | 'icon.iconDevelopmentOption.modelSwot.remoteTypeName'
  | 'icon.iconDevelopmentOption.modelSwot.scheduledIn'
  | 'icon.iconDevelopmentOption.modelSwot.stage'
  | 'icon.iconDevelopmentOption.modelSwot.updatedAt'
  | 'icon.iconDevelopmentOption.parent.children'
  | 'icon.iconDevelopmentOption.parent.id'
  | 'icon.iconDevelopmentOption.publishedAt'
  | 'icon.iconDevelopmentOption.publishedBy.children'
  | 'icon.iconDevelopmentOption.publishedBy.createdAt'
  | 'icon.iconDevelopmentOption.publishedBy.id'
  | 'icon.iconDevelopmentOption.publishedBy.isActive'
  | 'icon.iconDevelopmentOption.publishedBy.kind'
  | 'icon.iconDevelopmentOption.publishedBy.name'
  | 'icon.iconDevelopmentOption.publishedBy.picture'
  | 'icon.iconDevelopmentOption.publishedBy.publishedAt'
  | 'icon.iconDevelopmentOption.publishedBy.remoteId'
  | 'icon.iconDevelopmentOption.publishedBy.remoteTypeName'
  | 'icon.iconDevelopmentOption.publishedBy.stage'
  | 'icon.iconDevelopmentOption.publishedBy.updatedAt'
  | 'icon.iconDevelopmentOption.remoteId'
  | 'icon.iconDevelopmentOption.remoteTypeName'
  | 'icon.iconDevelopmentOption.scheduledIn'
  | 'icon.iconDevelopmentOption.scheduledIn.children'
  | 'icon.iconDevelopmentOption.scheduledIn.createdAt'
  | 'icon.iconDevelopmentOption.scheduledIn.description'
  | 'icon.iconDevelopmentOption.scheduledIn.errorMessage'
  | 'icon.iconDevelopmentOption.scheduledIn.id'
  | 'icon.iconDevelopmentOption.scheduledIn.publishedAt'
  | 'icon.iconDevelopmentOption.scheduledIn.rawPayload'
  | 'icon.iconDevelopmentOption.scheduledIn.remoteId'
  | 'icon.iconDevelopmentOption.scheduledIn.remoteTypeName'
  | 'icon.iconDevelopmentOption.scheduledIn.stage'
  | 'icon.iconDevelopmentOption.scheduledIn.status'
  | 'icon.iconDevelopmentOption.scheduledIn.updatedAt'
  | 'icon.iconDevelopmentOption.slug'
  | 'icon.iconDevelopmentOption.stage'
  | 'icon.iconDevelopmentOption.title'
  | 'icon.iconDevelopmentOption.updatedAt'
  | 'icon.iconDevelopmentOption.updatedBy.children'
  | 'icon.iconDevelopmentOption.updatedBy.createdAt'
  | 'icon.iconDevelopmentOption.updatedBy.id'
  | 'icon.iconDevelopmentOption.updatedBy.isActive'
  | 'icon.iconDevelopmentOption.updatedBy.kind'
  | 'icon.iconDevelopmentOption.updatedBy.name'
  | 'icon.iconDevelopmentOption.updatedBy.picture'
  | 'icon.iconDevelopmentOption.updatedBy.publishedAt'
  | 'icon.iconDevelopmentOption.updatedBy.remoteId'
  | 'icon.iconDevelopmentOption.updatedBy.remoteTypeName'
  | 'icon.iconDevelopmentOption.updatedBy.stage'
  | 'icon.iconDevelopmentOption.updatedBy.updatedAt'
  | 'icon.id'
  | 'icon.imageInfo'
  | 'icon.imageInfo.children'
  | 'icon.imageInfo.children.children'
  | 'icon.imageInfo.children.id'
  | 'icon.imageInfo.createdAt'
  | 'icon.imageInfo.createdBy.children'
  | 'icon.imageInfo.createdBy.createdAt'
  | 'icon.imageInfo.createdBy.id'
  | 'icon.imageInfo.createdBy.isActive'
  | 'icon.imageInfo.createdBy.kind'
  | 'icon.imageInfo.createdBy.name'
  | 'icon.imageInfo.createdBy.picture'
  | 'icon.imageInfo.createdBy.publishedAt'
  | 'icon.imageInfo.createdBy.remoteId'
  | 'icon.imageInfo.createdBy.remoteTypeName'
  | 'icon.imageInfo.createdBy.stage'
  | 'icon.imageInfo.createdBy.updatedAt'
  | 'icon.imageInfo.helpfulInfo.children'
  | 'icon.imageInfo.helpfulInfo.createdAt'
  | 'icon.imageInfo.helpfulInfo.id'
  | 'icon.imageInfo.helpfulInfo.locale'
  | 'icon.imageInfo.helpfulInfo.publishedAt'
  | 'icon.imageInfo.helpfulInfo.remoteId'
  | 'icon.imageInfo.helpfulInfo.remoteTypeName'
  | 'icon.imageInfo.helpfulInfo.scheduledIn'
  | 'icon.imageInfo.helpfulInfo.stage'
  | 'icon.imageInfo.helpfulInfo.stageNumber'
  | 'icon.imageInfo.helpfulInfo.updatedAt'
  | 'icon.imageInfo.id'
  | 'icon.imageInfo.image'
  | 'icon.imageInfo.image.children'
  | 'icon.imageInfo.image.createdAt'
  | 'icon.imageInfo.image.fileName'
  | 'icon.imageInfo.image.handle'
  | 'icon.imageInfo.image.height'
  | 'icon.imageInfo.image.iconDevelopmentOption'
  | 'icon.imageInfo.image.id'
  | 'icon.imageInfo.image.imageInfo'
  | 'icon.imageInfo.image.informationMainImageDevelopmentOption'
  | 'icon.imageInfo.image.locale'
  | 'icon.imageInfo.image.mimeType'
  | 'icon.imageInfo.image.publishedAt'
  | 'icon.imageInfo.image.remoteId'
  | 'icon.imageInfo.image.remoteTypeName'
  | 'icon.imageInfo.image.scheduledIn'
  | 'icon.imageInfo.image.size'
  | 'icon.imageInfo.image.stage'
  | 'icon.imageInfo.image.updatedAt'
  | 'icon.imageInfo.image.url'
  | 'icon.imageInfo.image.width'
  | 'icon.imageInfo.infoBlock'
  | 'icon.imageInfo.infoBlock.html'
  | 'icon.imageInfo.infoBlock.markdown'
  | 'icon.imageInfo.infoBlock.raw'
  | 'icon.imageInfo.infoBlock.remoteTypeName'
  | 'icon.imageInfo.infoBlock.text'
  | 'icon.imageInfo.internal.content'
  | 'icon.imageInfo.internal.contentDigest'
  | 'icon.imageInfo.internal.contentFilePath'
  | 'icon.imageInfo.internal.description'
  | 'icon.imageInfo.internal.fieldOwners'
  | 'icon.imageInfo.internal.ignoreType'
  | 'icon.imageInfo.internal.mediaType'
  | 'icon.imageInfo.internal.owner'
  | 'icon.imageInfo.internal.type'
  | 'icon.imageInfo.intro.html'
  | 'icon.imageInfo.intro.markdown'
  | 'icon.imageInfo.intro.raw'
  | 'icon.imageInfo.intro.remoteTypeName'
  | 'icon.imageInfo.intro.text'
  | 'icon.imageInfo.locale'
  | 'icon.imageInfo.parent.children'
  | 'icon.imageInfo.parent.id'
  | 'icon.imageInfo.publishedAt'
  | 'icon.imageInfo.publishedBy.children'
  | 'icon.imageInfo.publishedBy.createdAt'
  | 'icon.imageInfo.publishedBy.id'
  | 'icon.imageInfo.publishedBy.isActive'
  | 'icon.imageInfo.publishedBy.kind'
  | 'icon.imageInfo.publishedBy.name'
  | 'icon.imageInfo.publishedBy.picture'
  | 'icon.imageInfo.publishedBy.publishedAt'
  | 'icon.imageInfo.publishedBy.remoteId'
  | 'icon.imageInfo.publishedBy.remoteTypeName'
  | 'icon.imageInfo.publishedBy.stage'
  | 'icon.imageInfo.publishedBy.updatedAt'
  | 'icon.imageInfo.remoteId'
  | 'icon.imageInfo.remoteTypeName'
  | 'icon.imageInfo.scheduledIn'
  | 'icon.imageInfo.scheduledIn.children'
  | 'icon.imageInfo.scheduledIn.createdAt'
  | 'icon.imageInfo.scheduledIn.description'
  | 'icon.imageInfo.scheduledIn.errorMessage'
  | 'icon.imageInfo.scheduledIn.id'
  | 'icon.imageInfo.scheduledIn.publishedAt'
  | 'icon.imageInfo.scheduledIn.rawPayload'
  | 'icon.imageInfo.scheduledIn.remoteId'
  | 'icon.imageInfo.scheduledIn.remoteTypeName'
  | 'icon.imageInfo.scheduledIn.stage'
  | 'icon.imageInfo.scheduledIn.status'
  | 'icon.imageInfo.scheduledIn.updatedAt'
  | 'icon.imageInfo.slider'
  | 'icon.imageInfo.slider.html'
  | 'icon.imageInfo.slider.markdown'
  | 'icon.imageInfo.slider.raw'
  | 'icon.imageInfo.slider.remoteTypeName'
  | 'icon.imageInfo.slider.text'
  | 'icon.imageInfo.slug'
  | 'icon.imageInfo.stage'
  | 'icon.imageInfo.title'
  | 'icon.imageInfo.updatedAt'
  | 'icon.imageInfo.updatedBy.children'
  | 'icon.imageInfo.updatedBy.createdAt'
  | 'icon.imageInfo.updatedBy.id'
  | 'icon.imageInfo.updatedBy.isActive'
  | 'icon.imageInfo.updatedBy.kind'
  | 'icon.imageInfo.updatedBy.name'
  | 'icon.imageInfo.updatedBy.picture'
  | 'icon.imageInfo.updatedBy.publishedAt'
  | 'icon.imageInfo.updatedBy.remoteId'
  | 'icon.imageInfo.updatedBy.remoteTypeName'
  | 'icon.imageInfo.updatedBy.stage'
  | 'icon.imageInfo.updatedBy.updatedAt'
  | 'icon.informationMainImageDevelopmentOption'
  | 'icon.informationMainImageDevelopmentOption.children'
  | 'icon.informationMainImageDevelopmentOption.children.children'
  | 'icon.informationMainImageDevelopmentOption.children.id'
  | 'icon.informationMainImageDevelopmentOption.createdAt'
  | 'icon.informationMainImageDevelopmentOption.createdBy.children'
  | 'icon.informationMainImageDevelopmentOption.createdBy.createdAt'
  | 'icon.informationMainImageDevelopmentOption.createdBy.id'
  | 'icon.informationMainImageDevelopmentOption.createdBy.isActive'
  | 'icon.informationMainImageDevelopmentOption.createdBy.kind'
  | 'icon.informationMainImageDevelopmentOption.createdBy.name'
  | 'icon.informationMainImageDevelopmentOption.createdBy.picture'
  | 'icon.informationMainImageDevelopmentOption.createdBy.publishedAt'
  | 'icon.informationMainImageDevelopmentOption.createdBy.remoteId'
  | 'icon.informationMainImageDevelopmentOption.createdBy.remoteTypeName'
  | 'icon.informationMainImageDevelopmentOption.createdBy.stage'
  | 'icon.informationMainImageDevelopmentOption.createdBy.updatedAt'
  | 'icon.informationMainImageDevelopmentOption.fundingOptions.html'
  | 'icon.informationMainImageDevelopmentOption.fundingOptions.markdown'
  | 'icon.informationMainImageDevelopmentOption.fundingOptions.raw'
  | 'icon.informationMainImageDevelopmentOption.fundingOptions.remoteTypeName'
  | 'icon.informationMainImageDevelopmentOption.fundingOptions.text'
  | 'icon.informationMainImageDevelopmentOption.gatsbyPath'
  | 'icon.informationMainImageDevelopmentOption.icon.children'
  | 'icon.informationMainImageDevelopmentOption.icon.createdAt'
  | 'icon.informationMainImageDevelopmentOption.icon.fileName'
  | 'icon.informationMainImageDevelopmentOption.icon.handle'
  | 'icon.informationMainImageDevelopmentOption.icon.height'
  | 'icon.informationMainImageDevelopmentOption.icon.iconDevelopmentOption'
  | 'icon.informationMainImageDevelopmentOption.icon.id'
  | 'icon.informationMainImageDevelopmentOption.icon.imageInfo'
  | 'icon.informationMainImageDevelopmentOption.icon.informationMainImageDevelopmentOption'
  | 'icon.informationMainImageDevelopmentOption.icon.locale'
  | 'icon.informationMainImageDevelopmentOption.icon.mimeType'
  | 'icon.informationMainImageDevelopmentOption.icon.publishedAt'
  | 'icon.informationMainImageDevelopmentOption.icon.remoteId'
  | 'icon.informationMainImageDevelopmentOption.icon.remoteTypeName'
  | 'icon.informationMainImageDevelopmentOption.icon.scheduledIn'
  | 'icon.informationMainImageDevelopmentOption.icon.size'
  | 'icon.informationMainImageDevelopmentOption.icon.stage'
  | 'icon.informationMainImageDevelopmentOption.icon.updatedAt'
  | 'icon.informationMainImageDevelopmentOption.icon.url'
  | 'icon.informationMainImageDevelopmentOption.icon.width'
  | 'icon.informationMainImageDevelopmentOption.id'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.children'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.createdAt'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.fileName'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.handle'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.height'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.iconDevelopmentOption'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.id'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.imageInfo'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.locale'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.mimeType'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.publishedAt'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.remoteId'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.remoteTypeName'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.scheduledIn'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.size'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.stage'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.updatedAt'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.url'
  | 'icon.informationMainImageDevelopmentOption.informationMainImage.width'
  | 'icon.informationMainImageDevelopmentOption.internal.content'
  | 'icon.informationMainImageDevelopmentOption.internal.contentDigest'
  | 'icon.informationMainImageDevelopmentOption.internal.contentFilePath'
  | 'icon.informationMainImageDevelopmentOption.internal.description'
  | 'icon.informationMainImageDevelopmentOption.internal.fieldOwners'
  | 'icon.informationMainImageDevelopmentOption.internal.ignoreType'
  | 'icon.informationMainImageDevelopmentOption.internal.mediaType'
  | 'icon.informationMainImageDevelopmentOption.internal.owner'
  | 'icon.informationMainImageDevelopmentOption.internal.type'
  | 'icon.informationMainImageDevelopmentOption.intro'
  | 'icon.informationMainImageDevelopmentOption.locale'
  | 'icon.informationMainImageDevelopmentOption.mainText.html'
  | 'icon.informationMainImageDevelopmentOption.mainText.markdown'
  | 'icon.informationMainImageDevelopmentOption.mainText.raw'
  | 'icon.informationMainImageDevelopmentOption.mainText.remoteTypeName'
  | 'icon.informationMainImageDevelopmentOption.mainText.text'
  | 'icon.informationMainImageDevelopmentOption.modelSwot.children'
  | 'icon.informationMainImageDevelopmentOption.modelSwot.createdAt'
  | 'icon.informationMainImageDevelopmentOption.modelSwot.developmentOption'
  | 'icon.informationMainImageDevelopmentOption.modelSwot.id'
  | 'icon.informationMainImageDevelopmentOption.modelSwot.locale'
  | 'icon.informationMainImageDevelopmentOption.modelSwot.publishedAt'
  | 'icon.informationMainImageDevelopmentOption.modelSwot.remoteId'
  | 'icon.informationMainImageDevelopmentOption.modelSwot.remoteTypeName'
  | 'icon.informationMainImageDevelopmentOption.modelSwot.scheduledIn'
  | 'icon.informationMainImageDevelopmentOption.modelSwot.stage'
  | 'icon.informationMainImageDevelopmentOption.modelSwot.updatedAt'
  | 'icon.informationMainImageDevelopmentOption.parent.children'
  | 'icon.informationMainImageDevelopmentOption.parent.id'
  | 'icon.informationMainImageDevelopmentOption.publishedAt'
  | 'icon.informationMainImageDevelopmentOption.publishedBy.children'
  | 'icon.informationMainImageDevelopmentOption.publishedBy.createdAt'
  | 'icon.informationMainImageDevelopmentOption.publishedBy.id'
  | 'icon.informationMainImageDevelopmentOption.publishedBy.isActive'
  | 'icon.informationMainImageDevelopmentOption.publishedBy.kind'
  | 'icon.informationMainImageDevelopmentOption.publishedBy.name'
  | 'icon.informationMainImageDevelopmentOption.publishedBy.picture'
  | 'icon.informationMainImageDevelopmentOption.publishedBy.publishedAt'
  | 'icon.informationMainImageDevelopmentOption.publishedBy.remoteId'
  | 'icon.informationMainImageDevelopmentOption.publishedBy.remoteTypeName'
  | 'icon.informationMainImageDevelopmentOption.publishedBy.stage'
  | 'icon.informationMainImageDevelopmentOption.publishedBy.updatedAt'
  | 'icon.informationMainImageDevelopmentOption.remoteId'
  | 'icon.informationMainImageDevelopmentOption.remoteTypeName'
  | 'icon.informationMainImageDevelopmentOption.scheduledIn'
  | 'icon.informationMainImageDevelopmentOption.scheduledIn.children'
  | 'icon.informationMainImageDevelopmentOption.scheduledIn.createdAt'
  | 'icon.informationMainImageDevelopmentOption.scheduledIn.description'
  | 'icon.informationMainImageDevelopmentOption.scheduledIn.errorMessage'
  | 'icon.informationMainImageDevelopmentOption.scheduledIn.id'
  | 'icon.informationMainImageDevelopmentOption.scheduledIn.publishedAt'
  | 'icon.informationMainImageDevelopmentOption.scheduledIn.rawPayload'
  | 'icon.informationMainImageDevelopmentOption.scheduledIn.remoteId'
  | 'icon.informationMainImageDevelopmentOption.scheduledIn.remoteTypeName'
  | 'icon.informationMainImageDevelopmentOption.scheduledIn.stage'
  | 'icon.informationMainImageDevelopmentOption.scheduledIn.status'
  | 'icon.informationMainImageDevelopmentOption.scheduledIn.updatedAt'
  | 'icon.informationMainImageDevelopmentOption.slug'
  | 'icon.informationMainImageDevelopmentOption.stage'
  | 'icon.informationMainImageDevelopmentOption.title'
  | 'icon.informationMainImageDevelopmentOption.updatedAt'
  | 'icon.informationMainImageDevelopmentOption.updatedBy.children'
  | 'icon.informationMainImageDevelopmentOption.updatedBy.createdAt'
  | 'icon.informationMainImageDevelopmentOption.updatedBy.id'
  | 'icon.informationMainImageDevelopmentOption.updatedBy.isActive'
  | 'icon.informationMainImageDevelopmentOption.updatedBy.kind'
  | 'icon.informationMainImageDevelopmentOption.updatedBy.name'
  | 'icon.informationMainImageDevelopmentOption.updatedBy.picture'
  | 'icon.informationMainImageDevelopmentOption.updatedBy.publishedAt'
  | 'icon.informationMainImageDevelopmentOption.updatedBy.remoteId'
  | 'icon.informationMainImageDevelopmentOption.updatedBy.remoteTypeName'
  | 'icon.informationMainImageDevelopmentOption.updatedBy.stage'
  | 'icon.informationMainImageDevelopmentOption.updatedBy.updatedAt'
  | 'icon.internal.content'
  | 'icon.internal.contentDigest'
  | 'icon.internal.contentFilePath'
  | 'icon.internal.description'
  | 'icon.internal.fieldOwners'
  | 'icon.internal.ignoreType'
  | 'icon.internal.mediaType'
  | 'icon.internal.owner'
  | 'icon.internal.type'
  | 'icon.locale'
  | 'icon.mimeType'
  | 'icon.parent.children'
  | 'icon.parent.children.children'
  | 'icon.parent.children.id'
  | 'icon.parent.id'
  | 'icon.parent.internal.content'
  | 'icon.parent.internal.contentDigest'
  | 'icon.parent.internal.contentFilePath'
  | 'icon.parent.internal.description'
  | 'icon.parent.internal.fieldOwners'
  | 'icon.parent.internal.ignoreType'
  | 'icon.parent.internal.mediaType'
  | 'icon.parent.internal.owner'
  | 'icon.parent.internal.type'
  | 'icon.parent.parent.children'
  | 'icon.parent.parent.id'
  | 'icon.publishedAt'
  | 'icon.publishedBy.children'
  | 'icon.publishedBy.children.children'
  | 'icon.publishedBy.children.id'
  | 'icon.publishedBy.createdAt'
  | 'icon.publishedBy.id'
  | 'icon.publishedBy.internal.content'
  | 'icon.publishedBy.internal.contentDigest'
  | 'icon.publishedBy.internal.contentFilePath'
  | 'icon.publishedBy.internal.description'
  | 'icon.publishedBy.internal.fieldOwners'
  | 'icon.publishedBy.internal.ignoreType'
  | 'icon.publishedBy.internal.mediaType'
  | 'icon.publishedBy.internal.owner'
  | 'icon.publishedBy.internal.type'
  | 'icon.publishedBy.isActive'
  | 'icon.publishedBy.kind'
  | 'icon.publishedBy.name'
  | 'icon.publishedBy.parent.children'
  | 'icon.publishedBy.parent.id'
  | 'icon.publishedBy.picture'
  | 'icon.publishedBy.publishedAt'
  | 'icon.publishedBy.remoteId'
  | 'icon.publishedBy.remoteTypeName'
  | 'icon.publishedBy.stage'
  | 'icon.publishedBy.updatedAt'
  | 'icon.remoteId'
  | 'icon.remoteTypeName'
  | 'icon.scheduledIn'
  | 'icon.scheduledIn.children'
  | 'icon.scheduledIn.children.children'
  | 'icon.scheduledIn.children.id'
  | 'icon.scheduledIn.createdAt'
  | 'icon.scheduledIn.createdBy.children'
  | 'icon.scheduledIn.createdBy.createdAt'
  | 'icon.scheduledIn.createdBy.id'
  | 'icon.scheduledIn.createdBy.isActive'
  | 'icon.scheduledIn.createdBy.kind'
  | 'icon.scheduledIn.createdBy.name'
  | 'icon.scheduledIn.createdBy.picture'
  | 'icon.scheduledIn.createdBy.publishedAt'
  | 'icon.scheduledIn.createdBy.remoteId'
  | 'icon.scheduledIn.createdBy.remoteTypeName'
  | 'icon.scheduledIn.createdBy.stage'
  | 'icon.scheduledIn.createdBy.updatedAt'
  | 'icon.scheduledIn.description'
  | 'icon.scheduledIn.errorMessage'
  | 'icon.scheduledIn.id'
  | 'icon.scheduledIn.internal.content'
  | 'icon.scheduledIn.internal.contentDigest'
  | 'icon.scheduledIn.internal.contentFilePath'
  | 'icon.scheduledIn.internal.description'
  | 'icon.scheduledIn.internal.fieldOwners'
  | 'icon.scheduledIn.internal.ignoreType'
  | 'icon.scheduledIn.internal.mediaType'
  | 'icon.scheduledIn.internal.owner'
  | 'icon.scheduledIn.internal.type'
  | 'icon.scheduledIn.parent.children'
  | 'icon.scheduledIn.parent.id'
  | 'icon.scheduledIn.publishedAt'
  | 'icon.scheduledIn.publishedBy.children'
  | 'icon.scheduledIn.publishedBy.createdAt'
  | 'icon.scheduledIn.publishedBy.id'
  | 'icon.scheduledIn.publishedBy.isActive'
  | 'icon.scheduledIn.publishedBy.kind'
  | 'icon.scheduledIn.publishedBy.name'
  | 'icon.scheduledIn.publishedBy.picture'
  | 'icon.scheduledIn.publishedBy.publishedAt'
  | 'icon.scheduledIn.publishedBy.remoteId'
  | 'icon.scheduledIn.publishedBy.remoteTypeName'
  | 'icon.scheduledIn.publishedBy.stage'
  | 'icon.scheduledIn.publishedBy.updatedAt'
  | 'icon.scheduledIn.rawPayload'
  | 'icon.scheduledIn.release.children'
  | 'icon.scheduledIn.release.createdAt'
  | 'icon.scheduledIn.release.description'
  | 'icon.scheduledIn.release.errorMessage'
  | 'icon.scheduledIn.release.id'
  | 'icon.scheduledIn.release.isActive'
  | 'icon.scheduledIn.release.isImplicit'
  | 'icon.scheduledIn.release.operations'
  | 'icon.scheduledIn.release.publishedAt'
  | 'icon.scheduledIn.release.releaseAt'
  | 'icon.scheduledIn.release.remoteId'
  | 'icon.scheduledIn.release.remoteTypeName'
  | 'icon.scheduledIn.release.stage'
  | 'icon.scheduledIn.release.status'
  | 'icon.scheduledIn.release.title'
  | 'icon.scheduledIn.release.updatedAt'
  | 'icon.scheduledIn.remoteId'
  | 'icon.scheduledIn.remoteTypeName'
  | 'icon.scheduledIn.stage'
  | 'icon.scheduledIn.status'
  | 'icon.scheduledIn.updatedAt'
  | 'icon.scheduledIn.updatedBy.children'
  | 'icon.scheduledIn.updatedBy.createdAt'
  | 'icon.scheduledIn.updatedBy.id'
  | 'icon.scheduledIn.updatedBy.isActive'
  | 'icon.scheduledIn.updatedBy.kind'
  | 'icon.scheduledIn.updatedBy.name'
  | 'icon.scheduledIn.updatedBy.picture'
  | 'icon.scheduledIn.updatedBy.publishedAt'
  | 'icon.scheduledIn.updatedBy.remoteId'
  | 'icon.scheduledIn.updatedBy.remoteTypeName'
  | 'icon.scheduledIn.updatedBy.stage'
  | 'icon.scheduledIn.updatedBy.updatedAt'
  | 'icon.size'
  | 'icon.stage'
  | 'icon.updatedAt'
  | 'icon.updatedBy.children'
  | 'icon.updatedBy.children.children'
  | 'icon.updatedBy.children.id'
  | 'icon.updatedBy.createdAt'
  | 'icon.updatedBy.id'
  | 'icon.updatedBy.internal.content'
  | 'icon.updatedBy.internal.contentDigest'
  | 'icon.updatedBy.internal.contentFilePath'
  | 'icon.updatedBy.internal.description'
  | 'icon.updatedBy.internal.fieldOwners'
  | 'icon.updatedBy.internal.ignoreType'
  | 'icon.updatedBy.internal.mediaType'
  | 'icon.updatedBy.internal.owner'
  | 'icon.updatedBy.internal.type'
  | 'icon.updatedBy.isActive'
  | 'icon.updatedBy.kind'
  | 'icon.updatedBy.name'
  | 'icon.updatedBy.parent.children'
  | 'icon.updatedBy.parent.id'
  | 'icon.updatedBy.picture'
  | 'icon.updatedBy.publishedAt'
  | 'icon.updatedBy.remoteId'
  | 'icon.updatedBy.remoteTypeName'
  | 'icon.updatedBy.stage'
  | 'icon.updatedBy.updatedAt'
  | 'icon.url'
  | 'icon.width'
  | 'id'
  | 'informationMainImage.children'
  | 'informationMainImage.children.children'
  | 'informationMainImage.children.children.children'
  | 'informationMainImage.children.children.id'
  | 'informationMainImage.children.id'
  | 'informationMainImage.children.internal.content'
  | 'informationMainImage.children.internal.contentDigest'
  | 'informationMainImage.children.internal.contentFilePath'
  | 'informationMainImage.children.internal.description'
  | 'informationMainImage.children.internal.fieldOwners'
  | 'informationMainImage.children.internal.ignoreType'
  | 'informationMainImage.children.internal.mediaType'
  | 'informationMainImage.children.internal.owner'
  | 'informationMainImage.children.internal.type'
  | 'informationMainImage.children.parent.children'
  | 'informationMainImage.children.parent.id'
  | 'informationMainImage.createdAt'
  | 'informationMainImage.createdBy.children'
  | 'informationMainImage.createdBy.children.children'
  | 'informationMainImage.createdBy.children.id'
  | 'informationMainImage.createdBy.createdAt'
  | 'informationMainImage.createdBy.id'
  | 'informationMainImage.createdBy.internal.content'
  | 'informationMainImage.createdBy.internal.contentDigest'
  | 'informationMainImage.createdBy.internal.contentFilePath'
  | 'informationMainImage.createdBy.internal.description'
  | 'informationMainImage.createdBy.internal.fieldOwners'
  | 'informationMainImage.createdBy.internal.ignoreType'
  | 'informationMainImage.createdBy.internal.mediaType'
  | 'informationMainImage.createdBy.internal.owner'
  | 'informationMainImage.createdBy.internal.type'
  | 'informationMainImage.createdBy.isActive'
  | 'informationMainImage.createdBy.kind'
  | 'informationMainImage.createdBy.name'
  | 'informationMainImage.createdBy.parent.children'
  | 'informationMainImage.createdBy.parent.id'
  | 'informationMainImage.createdBy.picture'
  | 'informationMainImage.createdBy.publishedAt'
  | 'informationMainImage.createdBy.remoteId'
  | 'informationMainImage.createdBy.remoteTypeName'
  | 'informationMainImage.createdBy.stage'
  | 'informationMainImage.createdBy.updatedAt'
  | 'informationMainImage.fileName'
  | 'informationMainImage.handle'
  | 'informationMainImage.height'
  | 'informationMainImage.iconDevelopmentOption'
  | 'informationMainImage.iconDevelopmentOption.children'
  | 'informationMainImage.iconDevelopmentOption.children.children'
  | 'informationMainImage.iconDevelopmentOption.children.id'
  | 'informationMainImage.iconDevelopmentOption.createdAt'
  | 'informationMainImage.iconDevelopmentOption.createdBy.children'
  | 'informationMainImage.iconDevelopmentOption.createdBy.createdAt'
  | 'informationMainImage.iconDevelopmentOption.createdBy.id'
  | 'informationMainImage.iconDevelopmentOption.createdBy.isActive'
  | 'informationMainImage.iconDevelopmentOption.createdBy.kind'
  | 'informationMainImage.iconDevelopmentOption.createdBy.name'
  | 'informationMainImage.iconDevelopmentOption.createdBy.picture'
  | 'informationMainImage.iconDevelopmentOption.createdBy.publishedAt'
  | 'informationMainImage.iconDevelopmentOption.createdBy.remoteId'
  | 'informationMainImage.iconDevelopmentOption.createdBy.remoteTypeName'
  | 'informationMainImage.iconDevelopmentOption.createdBy.stage'
  | 'informationMainImage.iconDevelopmentOption.createdBy.updatedAt'
  | 'informationMainImage.iconDevelopmentOption.fundingOptions.html'
  | 'informationMainImage.iconDevelopmentOption.fundingOptions.markdown'
  | 'informationMainImage.iconDevelopmentOption.fundingOptions.raw'
  | 'informationMainImage.iconDevelopmentOption.fundingOptions.remoteTypeName'
  | 'informationMainImage.iconDevelopmentOption.fundingOptions.text'
  | 'informationMainImage.iconDevelopmentOption.gatsbyPath'
  | 'informationMainImage.iconDevelopmentOption.icon.children'
  | 'informationMainImage.iconDevelopmentOption.icon.createdAt'
  | 'informationMainImage.iconDevelopmentOption.icon.fileName'
  | 'informationMainImage.iconDevelopmentOption.icon.handle'
  | 'informationMainImage.iconDevelopmentOption.icon.height'
  | 'informationMainImage.iconDevelopmentOption.icon.iconDevelopmentOption'
  | 'informationMainImage.iconDevelopmentOption.icon.id'
  | 'informationMainImage.iconDevelopmentOption.icon.imageInfo'
  | 'informationMainImage.iconDevelopmentOption.icon.informationMainImageDevelopmentOption'
  | 'informationMainImage.iconDevelopmentOption.icon.locale'
  | 'informationMainImage.iconDevelopmentOption.icon.mimeType'
  | 'informationMainImage.iconDevelopmentOption.icon.publishedAt'
  | 'informationMainImage.iconDevelopmentOption.icon.remoteId'
  | 'informationMainImage.iconDevelopmentOption.icon.remoteTypeName'
  | 'informationMainImage.iconDevelopmentOption.icon.scheduledIn'
  | 'informationMainImage.iconDevelopmentOption.icon.size'
  | 'informationMainImage.iconDevelopmentOption.icon.stage'
  | 'informationMainImage.iconDevelopmentOption.icon.updatedAt'
  | 'informationMainImage.iconDevelopmentOption.icon.url'
  | 'informationMainImage.iconDevelopmentOption.icon.width'
  | 'informationMainImage.iconDevelopmentOption.id'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.children'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.createdAt'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.fileName'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.handle'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.height'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.iconDevelopmentOption'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.id'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.imageInfo'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.locale'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.mimeType'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.publishedAt'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.remoteId'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.remoteTypeName'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.scheduledIn'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.size'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.stage'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.updatedAt'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.url'
  | 'informationMainImage.iconDevelopmentOption.informationMainImage.width'
  | 'informationMainImage.iconDevelopmentOption.internal.content'
  | 'informationMainImage.iconDevelopmentOption.internal.contentDigest'
  | 'informationMainImage.iconDevelopmentOption.internal.contentFilePath'
  | 'informationMainImage.iconDevelopmentOption.internal.description'
  | 'informationMainImage.iconDevelopmentOption.internal.fieldOwners'
  | 'informationMainImage.iconDevelopmentOption.internal.ignoreType'
  | 'informationMainImage.iconDevelopmentOption.internal.mediaType'
  | 'informationMainImage.iconDevelopmentOption.internal.owner'
  | 'informationMainImage.iconDevelopmentOption.internal.type'
  | 'informationMainImage.iconDevelopmentOption.intro'
  | 'informationMainImage.iconDevelopmentOption.locale'
  | 'informationMainImage.iconDevelopmentOption.mainText.html'
  | 'informationMainImage.iconDevelopmentOption.mainText.markdown'
  | 'informationMainImage.iconDevelopmentOption.mainText.raw'
  | 'informationMainImage.iconDevelopmentOption.mainText.remoteTypeName'
  | 'informationMainImage.iconDevelopmentOption.mainText.text'
  | 'informationMainImage.iconDevelopmentOption.modelSwot.children'
  | 'informationMainImage.iconDevelopmentOption.modelSwot.createdAt'
  | 'informationMainImage.iconDevelopmentOption.modelSwot.developmentOption'
  | 'informationMainImage.iconDevelopmentOption.modelSwot.id'
  | 'informationMainImage.iconDevelopmentOption.modelSwot.locale'
  | 'informationMainImage.iconDevelopmentOption.modelSwot.publishedAt'
  | 'informationMainImage.iconDevelopmentOption.modelSwot.remoteId'
  | 'informationMainImage.iconDevelopmentOption.modelSwot.remoteTypeName'
  | 'informationMainImage.iconDevelopmentOption.modelSwot.scheduledIn'
  | 'informationMainImage.iconDevelopmentOption.modelSwot.stage'
  | 'informationMainImage.iconDevelopmentOption.modelSwot.updatedAt'
  | 'informationMainImage.iconDevelopmentOption.parent.children'
  | 'informationMainImage.iconDevelopmentOption.parent.id'
  | 'informationMainImage.iconDevelopmentOption.publishedAt'
  | 'informationMainImage.iconDevelopmentOption.publishedBy.children'
  | 'informationMainImage.iconDevelopmentOption.publishedBy.createdAt'
  | 'informationMainImage.iconDevelopmentOption.publishedBy.id'
  | 'informationMainImage.iconDevelopmentOption.publishedBy.isActive'
  | 'informationMainImage.iconDevelopmentOption.publishedBy.kind'
  | 'informationMainImage.iconDevelopmentOption.publishedBy.name'
  | 'informationMainImage.iconDevelopmentOption.publishedBy.picture'
  | 'informationMainImage.iconDevelopmentOption.publishedBy.publishedAt'
  | 'informationMainImage.iconDevelopmentOption.publishedBy.remoteId'
  | 'informationMainImage.iconDevelopmentOption.publishedBy.remoteTypeName'
  | 'informationMainImage.iconDevelopmentOption.publishedBy.stage'
  | 'informationMainImage.iconDevelopmentOption.publishedBy.updatedAt'
  | 'informationMainImage.iconDevelopmentOption.remoteId'
  | 'informationMainImage.iconDevelopmentOption.remoteTypeName'
  | 'informationMainImage.iconDevelopmentOption.scheduledIn'
  | 'informationMainImage.iconDevelopmentOption.scheduledIn.children'
  | 'informationMainImage.iconDevelopmentOption.scheduledIn.createdAt'
  | 'informationMainImage.iconDevelopmentOption.scheduledIn.description'
  | 'informationMainImage.iconDevelopmentOption.scheduledIn.errorMessage'
  | 'informationMainImage.iconDevelopmentOption.scheduledIn.id'
  | 'informationMainImage.iconDevelopmentOption.scheduledIn.publishedAt'
  | 'informationMainImage.iconDevelopmentOption.scheduledIn.rawPayload'
  | 'informationMainImage.iconDevelopmentOption.scheduledIn.remoteId'
  | 'informationMainImage.iconDevelopmentOption.scheduledIn.remoteTypeName'
  | 'informationMainImage.iconDevelopmentOption.scheduledIn.stage'
  | 'informationMainImage.iconDevelopmentOption.scheduledIn.status'
  | 'informationMainImage.iconDevelopmentOption.scheduledIn.updatedAt'
  | 'informationMainImage.iconDevelopmentOption.slug'
  | 'informationMainImage.iconDevelopmentOption.stage'
  | 'informationMainImage.iconDevelopmentOption.title'
  | 'informationMainImage.iconDevelopmentOption.updatedAt'
  | 'informationMainImage.iconDevelopmentOption.updatedBy.children'
  | 'informationMainImage.iconDevelopmentOption.updatedBy.createdAt'
  | 'informationMainImage.iconDevelopmentOption.updatedBy.id'
  | 'informationMainImage.iconDevelopmentOption.updatedBy.isActive'
  | 'informationMainImage.iconDevelopmentOption.updatedBy.kind'
  | 'informationMainImage.iconDevelopmentOption.updatedBy.name'
  | 'informationMainImage.iconDevelopmentOption.updatedBy.picture'
  | 'informationMainImage.iconDevelopmentOption.updatedBy.publishedAt'
  | 'informationMainImage.iconDevelopmentOption.updatedBy.remoteId'
  | 'informationMainImage.iconDevelopmentOption.updatedBy.remoteTypeName'
  | 'informationMainImage.iconDevelopmentOption.updatedBy.stage'
  | 'informationMainImage.iconDevelopmentOption.updatedBy.updatedAt'
  | 'informationMainImage.id'
  | 'informationMainImage.imageInfo'
  | 'informationMainImage.imageInfo.children'
  | 'informationMainImage.imageInfo.children.children'
  | 'informationMainImage.imageInfo.children.id'
  | 'informationMainImage.imageInfo.createdAt'
  | 'informationMainImage.imageInfo.createdBy.children'
  | 'informationMainImage.imageInfo.createdBy.createdAt'
  | 'informationMainImage.imageInfo.createdBy.id'
  | 'informationMainImage.imageInfo.createdBy.isActive'
  | 'informationMainImage.imageInfo.createdBy.kind'
  | 'informationMainImage.imageInfo.createdBy.name'
  | 'informationMainImage.imageInfo.createdBy.picture'
  | 'informationMainImage.imageInfo.createdBy.publishedAt'
  | 'informationMainImage.imageInfo.createdBy.remoteId'
  | 'informationMainImage.imageInfo.createdBy.remoteTypeName'
  | 'informationMainImage.imageInfo.createdBy.stage'
  | 'informationMainImage.imageInfo.createdBy.updatedAt'
  | 'informationMainImage.imageInfo.helpfulInfo.children'
  | 'informationMainImage.imageInfo.helpfulInfo.createdAt'
  | 'informationMainImage.imageInfo.helpfulInfo.id'
  | 'informationMainImage.imageInfo.helpfulInfo.locale'
  | 'informationMainImage.imageInfo.helpfulInfo.publishedAt'
  | 'informationMainImage.imageInfo.helpfulInfo.remoteId'
  | 'informationMainImage.imageInfo.helpfulInfo.remoteTypeName'
  | 'informationMainImage.imageInfo.helpfulInfo.scheduledIn'
  | 'informationMainImage.imageInfo.helpfulInfo.stage'
  | 'informationMainImage.imageInfo.helpfulInfo.stageNumber'
  | 'informationMainImage.imageInfo.helpfulInfo.updatedAt'
  | 'informationMainImage.imageInfo.id'
  | 'informationMainImage.imageInfo.image'
  | 'informationMainImage.imageInfo.image.children'
  | 'informationMainImage.imageInfo.image.createdAt'
  | 'informationMainImage.imageInfo.image.fileName'
  | 'informationMainImage.imageInfo.image.handle'
  | 'informationMainImage.imageInfo.image.height'
  | 'informationMainImage.imageInfo.image.iconDevelopmentOption'
  | 'informationMainImage.imageInfo.image.id'
  | 'informationMainImage.imageInfo.image.imageInfo'
  | 'informationMainImage.imageInfo.image.informationMainImageDevelopmentOption'
  | 'informationMainImage.imageInfo.image.locale'
  | 'informationMainImage.imageInfo.image.mimeType'
  | 'informationMainImage.imageInfo.image.publishedAt'
  | 'informationMainImage.imageInfo.image.remoteId'
  | 'informationMainImage.imageInfo.image.remoteTypeName'
  | 'informationMainImage.imageInfo.image.scheduledIn'
  | 'informationMainImage.imageInfo.image.size'
  | 'informationMainImage.imageInfo.image.stage'
  | 'informationMainImage.imageInfo.image.updatedAt'
  | 'informationMainImage.imageInfo.image.url'
  | 'informationMainImage.imageInfo.image.width'
  | 'informationMainImage.imageInfo.infoBlock'
  | 'informationMainImage.imageInfo.infoBlock.html'
  | 'informationMainImage.imageInfo.infoBlock.markdown'
  | 'informationMainImage.imageInfo.infoBlock.raw'
  | 'informationMainImage.imageInfo.infoBlock.remoteTypeName'
  | 'informationMainImage.imageInfo.infoBlock.text'
  | 'informationMainImage.imageInfo.internal.content'
  | 'informationMainImage.imageInfo.internal.contentDigest'
  | 'informationMainImage.imageInfo.internal.contentFilePath'
  | 'informationMainImage.imageInfo.internal.description'
  | 'informationMainImage.imageInfo.internal.fieldOwners'
  | 'informationMainImage.imageInfo.internal.ignoreType'
  | 'informationMainImage.imageInfo.internal.mediaType'
  | 'informationMainImage.imageInfo.internal.owner'
  | 'informationMainImage.imageInfo.internal.type'
  | 'informationMainImage.imageInfo.intro.html'
  | 'informationMainImage.imageInfo.intro.markdown'
  | 'informationMainImage.imageInfo.intro.raw'
  | 'informationMainImage.imageInfo.intro.remoteTypeName'
  | 'informationMainImage.imageInfo.intro.text'
  | 'informationMainImage.imageInfo.locale'
  | 'informationMainImage.imageInfo.parent.children'
  | 'informationMainImage.imageInfo.parent.id'
  | 'informationMainImage.imageInfo.publishedAt'
  | 'informationMainImage.imageInfo.publishedBy.children'
  | 'informationMainImage.imageInfo.publishedBy.createdAt'
  | 'informationMainImage.imageInfo.publishedBy.id'
  | 'informationMainImage.imageInfo.publishedBy.isActive'
  | 'informationMainImage.imageInfo.publishedBy.kind'
  | 'informationMainImage.imageInfo.publishedBy.name'
  | 'informationMainImage.imageInfo.publishedBy.picture'
  | 'informationMainImage.imageInfo.publishedBy.publishedAt'
  | 'informationMainImage.imageInfo.publishedBy.remoteId'
  | 'informationMainImage.imageInfo.publishedBy.remoteTypeName'
  | 'informationMainImage.imageInfo.publishedBy.stage'
  | 'informationMainImage.imageInfo.publishedBy.updatedAt'
  | 'informationMainImage.imageInfo.remoteId'
  | 'informationMainImage.imageInfo.remoteTypeName'
  | 'informationMainImage.imageInfo.scheduledIn'
  | 'informationMainImage.imageInfo.scheduledIn.children'
  | 'informationMainImage.imageInfo.scheduledIn.createdAt'
  | 'informationMainImage.imageInfo.scheduledIn.description'
  | 'informationMainImage.imageInfo.scheduledIn.errorMessage'
  | 'informationMainImage.imageInfo.scheduledIn.id'
  | 'informationMainImage.imageInfo.scheduledIn.publishedAt'
  | 'informationMainImage.imageInfo.scheduledIn.rawPayload'
  | 'informationMainImage.imageInfo.scheduledIn.remoteId'
  | 'informationMainImage.imageInfo.scheduledIn.remoteTypeName'
  | 'informationMainImage.imageInfo.scheduledIn.stage'
  | 'informationMainImage.imageInfo.scheduledIn.status'
  | 'informationMainImage.imageInfo.scheduledIn.updatedAt'
  | 'informationMainImage.imageInfo.slider'
  | 'informationMainImage.imageInfo.slider.html'
  | 'informationMainImage.imageInfo.slider.markdown'
  | 'informationMainImage.imageInfo.slider.raw'
  | 'informationMainImage.imageInfo.slider.remoteTypeName'
  | 'informationMainImage.imageInfo.slider.text'
  | 'informationMainImage.imageInfo.slug'
  | 'informationMainImage.imageInfo.stage'
  | 'informationMainImage.imageInfo.title'
  | 'informationMainImage.imageInfo.updatedAt'
  | 'informationMainImage.imageInfo.updatedBy.children'
  | 'informationMainImage.imageInfo.updatedBy.createdAt'
  | 'informationMainImage.imageInfo.updatedBy.id'
  | 'informationMainImage.imageInfo.updatedBy.isActive'
  | 'informationMainImage.imageInfo.updatedBy.kind'
  | 'informationMainImage.imageInfo.updatedBy.name'
  | 'informationMainImage.imageInfo.updatedBy.picture'
  | 'informationMainImage.imageInfo.updatedBy.publishedAt'
  | 'informationMainImage.imageInfo.updatedBy.remoteId'
  | 'informationMainImage.imageInfo.updatedBy.remoteTypeName'
  | 'informationMainImage.imageInfo.updatedBy.stage'
  | 'informationMainImage.imageInfo.updatedBy.updatedAt'
  | 'informationMainImage.informationMainImageDevelopmentOption'
  | 'informationMainImage.informationMainImageDevelopmentOption.children'
  | 'informationMainImage.informationMainImageDevelopmentOption.children.children'
  | 'informationMainImage.informationMainImageDevelopmentOption.children.id'
  | 'informationMainImage.informationMainImageDevelopmentOption.createdAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.createdBy.children'
  | 'informationMainImage.informationMainImageDevelopmentOption.createdBy.createdAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.createdBy.id'
  | 'informationMainImage.informationMainImageDevelopmentOption.createdBy.isActive'
  | 'informationMainImage.informationMainImageDevelopmentOption.createdBy.kind'
  | 'informationMainImage.informationMainImageDevelopmentOption.createdBy.name'
  | 'informationMainImage.informationMainImageDevelopmentOption.createdBy.picture'
  | 'informationMainImage.informationMainImageDevelopmentOption.createdBy.publishedAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.createdBy.remoteId'
  | 'informationMainImage.informationMainImageDevelopmentOption.createdBy.remoteTypeName'
  | 'informationMainImage.informationMainImageDevelopmentOption.createdBy.stage'
  | 'informationMainImage.informationMainImageDevelopmentOption.createdBy.updatedAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.fundingOptions.html'
  | 'informationMainImage.informationMainImageDevelopmentOption.fundingOptions.markdown'
  | 'informationMainImage.informationMainImageDevelopmentOption.fundingOptions.raw'
  | 'informationMainImage.informationMainImageDevelopmentOption.fundingOptions.remoteTypeName'
  | 'informationMainImage.informationMainImageDevelopmentOption.fundingOptions.text'
  | 'informationMainImage.informationMainImageDevelopmentOption.gatsbyPath'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.children'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.createdAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.fileName'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.handle'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.height'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.iconDevelopmentOption'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.id'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.imageInfo'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.informationMainImageDevelopmentOption'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.locale'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.mimeType'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.publishedAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.remoteId'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.remoteTypeName'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.scheduledIn'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.size'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.stage'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.updatedAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.url'
  | 'informationMainImage.informationMainImageDevelopmentOption.icon.width'
  | 'informationMainImage.informationMainImageDevelopmentOption.id'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.children'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.createdAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.fileName'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.handle'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.height'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.iconDevelopmentOption'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.id'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.imageInfo'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.locale'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.mimeType'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.publishedAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.remoteId'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.remoteTypeName'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.scheduledIn'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.size'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.stage'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.updatedAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.url'
  | 'informationMainImage.informationMainImageDevelopmentOption.informationMainImage.width'
  | 'informationMainImage.informationMainImageDevelopmentOption.internal.content'
  | 'informationMainImage.informationMainImageDevelopmentOption.internal.contentDigest'
  | 'informationMainImage.informationMainImageDevelopmentOption.internal.contentFilePath'
  | 'informationMainImage.informationMainImageDevelopmentOption.internal.description'
  | 'informationMainImage.informationMainImageDevelopmentOption.internal.fieldOwners'
  | 'informationMainImage.informationMainImageDevelopmentOption.internal.ignoreType'
  | 'informationMainImage.informationMainImageDevelopmentOption.internal.mediaType'
  | 'informationMainImage.informationMainImageDevelopmentOption.internal.owner'
  | 'informationMainImage.informationMainImageDevelopmentOption.internal.type'
  | 'informationMainImage.informationMainImageDevelopmentOption.intro'
  | 'informationMainImage.informationMainImageDevelopmentOption.locale'
  | 'informationMainImage.informationMainImageDevelopmentOption.mainText.html'
  | 'informationMainImage.informationMainImageDevelopmentOption.mainText.markdown'
  | 'informationMainImage.informationMainImageDevelopmentOption.mainText.raw'
  | 'informationMainImage.informationMainImageDevelopmentOption.mainText.remoteTypeName'
  | 'informationMainImage.informationMainImageDevelopmentOption.mainText.text'
  | 'informationMainImage.informationMainImageDevelopmentOption.modelSwot.children'
  | 'informationMainImage.informationMainImageDevelopmentOption.modelSwot.createdAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.modelSwot.developmentOption'
  | 'informationMainImage.informationMainImageDevelopmentOption.modelSwot.id'
  | 'informationMainImage.informationMainImageDevelopmentOption.modelSwot.locale'
  | 'informationMainImage.informationMainImageDevelopmentOption.modelSwot.publishedAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.modelSwot.remoteId'
  | 'informationMainImage.informationMainImageDevelopmentOption.modelSwot.remoteTypeName'
  | 'informationMainImage.informationMainImageDevelopmentOption.modelSwot.scheduledIn'
  | 'informationMainImage.informationMainImageDevelopmentOption.modelSwot.stage'
  | 'informationMainImage.informationMainImageDevelopmentOption.modelSwot.updatedAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.parent.children'
  | 'informationMainImage.informationMainImageDevelopmentOption.parent.id'
  | 'informationMainImage.informationMainImageDevelopmentOption.publishedAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.publishedBy.children'
  | 'informationMainImage.informationMainImageDevelopmentOption.publishedBy.createdAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.publishedBy.id'
  | 'informationMainImage.informationMainImageDevelopmentOption.publishedBy.isActive'
  | 'informationMainImage.informationMainImageDevelopmentOption.publishedBy.kind'
  | 'informationMainImage.informationMainImageDevelopmentOption.publishedBy.name'
  | 'informationMainImage.informationMainImageDevelopmentOption.publishedBy.picture'
  | 'informationMainImage.informationMainImageDevelopmentOption.publishedBy.publishedAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.publishedBy.remoteId'
  | 'informationMainImage.informationMainImageDevelopmentOption.publishedBy.remoteTypeName'
  | 'informationMainImage.informationMainImageDevelopmentOption.publishedBy.stage'
  | 'informationMainImage.informationMainImageDevelopmentOption.publishedBy.updatedAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.remoteId'
  | 'informationMainImage.informationMainImageDevelopmentOption.remoteTypeName'
  | 'informationMainImage.informationMainImageDevelopmentOption.scheduledIn'
  | 'informationMainImage.informationMainImageDevelopmentOption.scheduledIn.children'
  | 'informationMainImage.informationMainImageDevelopmentOption.scheduledIn.createdAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.scheduledIn.description'
  | 'informationMainImage.informationMainImageDevelopmentOption.scheduledIn.errorMessage'
  | 'informationMainImage.informationMainImageDevelopmentOption.scheduledIn.id'
  | 'informationMainImage.informationMainImageDevelopmentOption.scheduledIn.publishedAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.scheduledIn.rawPayload'
  | 'informationMainImage.informationMainImageDevelopmentOption.scheduledIn.remoteId'
  | 'informationMainImage.informationMainImageDevelopmentOption.scheduledIn.remoteTypeName'
  | 'informationMainImage.informationMainImageDevelopmentOption.scheduledIn.stage'
  | 'informationMainImage.informationMainImageDevelopmentOption.scheduledIn.status'
  | 'informationMainImage.informationMainImageDevelopmentOption.scheduledIn.updatedAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.slug'
  | 'informationMainImage.informationMainImageDevelopmentOption.stage'
  | 'informationMainImage.informationMainImageDevelopmentOption.title'
  | 'informationMainImage.informationMainImageDevelopmentOption.updatedAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.updatedBy.children'
  | 'informationMainImage.informationMainImageDevelopmentOption.updatedBy.createdAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.updatedBy.id'
  | 'informationMainImage.informationMainImageDevelopmentOption.updatedBy.isActive'
  | 'informationMainImage.informationMainImageDevelopmentOption.updatedBy.kind'
  | 'informationMainImage.informationMainImageDevelopmentOption.updatedBy.name'
  | 'informationMainImage.informationMainImageDevelopmentOption.updatedBy.picture'
  | 'informationMainImage.informationMainImageDevelopmentOption.updatedBy.publishedAt'
  | 'informationMainImage.informationMainImageDevelopmentOption.updatedBy.remoteId'
  | 'informationMainImage.informationMainImageDevelopmentOption.updatedBy.remoteTypeName'
  | 'informationMainImage.informationMainImageDevelopmentOption.updatedBy.stage'
  | 'informationMainImage.informationMainImageDevelopmentOption.updatedBy.updatedAt'
  | 'informationMainImage.internal.content'
  | 'informationMainImage.internal.contentDigest'
  | 'informationMainImage.internal.contentFilePath'
  | 'informationMainImage.internal.description'
  | 'informationMainImage.internal.fieldOwners'
  | 'informationMainImage.internal.ignoreType'
  | 'informationMainImage.internal.mediaType'
  | 'informationMainImage.internal.owner'
  | 'informationMainImage.internal.type'
  | 'informationMainImage.locale'
  | 'informationMainImage.mimeType'
  | 'informationMainImage.parent.children'
  | 'informationMainImage.parent.children.children'
  | 'informationMainImage.parent.children.id'
  | 'informationMainImage.parent.id'
  | 'informationMainImage.parent.internal.content'
  | 'informationMainImage.parent.internal.contentDigest'
  | 'informationMainImage.parent.internal.contentFilePath'
  | 'informationMainImage.parent.internal.description'
  | 'informationMainImage.parent.internal.fieldOwners'
  | 'informationMainImage.parent.internal.ignoreType'
  | 'informationMainImage.parent.internal.mediaType'
  | 'informationMainImage.parent.internal.owner'
  | 'informationMainImage.parent.internal.type'
  | 'informationMainImage.parent.parent.children'
  | 'informationMainImage.parent.parent.id'
  | 'informationMainImage.publishedAt'
  | 'informationMainImage.publishedBy.children'
  | 'informationMainImage.publishedBy.children.children'
  | 'informationMainImage.publishedBy.children.id'
  | 'informationMainImage.publishedBy.createdAt'
  | 'informationMainImage.publishedBy.id'
  | 'informationMainImage.publishedBy.internal.content'
  | 'informationMainImage.publishedBy.internal.contentDigest'
  | 'informationMainImage.publishedBy.internal.contentFilePath'
  | 'informationMainImage.publishedBy.internal.description'
  | 'informationMainImage.publishedBy.internal.fieldOwners'
  | 'informationMainImage.publishedBy.internal.ignoreType'
  | 'informationMainImage.publishedBy.internal.mediaType'
  | 'informationMainImage.publishedBy.internal.owner'
  | 'informationMainImage.publishedBy.internal.type'
  | 'informationMainImage.publishedBy.isActive'
  | 'informationMainImage.publishedBy.kind'
  | 'informationMainImage.publishedBy.name'
  | 'informationMainImage.publishedBy.parent.children'
  | 'informationMainImage.publishedBy.parent.id'
  | 'informationMainImage.publishedBy.picture'
  | 'informationMainImage.publishedBy.publishedAt'
  | 'informationMainImage.publishedBy.remoteId'
  | 'informationMainImage.publishedBy.remoteTypeName'
  | 'informationMainImage.publishedBy.stage'
  | 'informationMainImage.publishedBy.updatedAt'
  | 'informationMainImage.remoteId'
  | 'informationMainImage.remoteTypeName'
  | 'informationMainImage.scheduledIn'
  | 'informationMainImage.scheduledIn.children'
  | 'informationMainImage.scheduledIn.children.children'
  | 'informationMainImage.scheduledIn.children.id'
  | 'informationMainImage.scheduledIn.createdAt'
  | 'informationMainImage.scheduledIn.createdBy.children'
  | 'informationMainImage.scheduledIn.createdBy.createdAt'
  | 'informationMainImage.scheduledIn.createdBy.id'
  | 'informationMainImage.scheduledIn.createdBy.isActive'
  | 'informationMainImage.scheduledIn.createdBy.kind'
  | 'informationMainImage.scheduledIn.createdBy.name'
  | 'informationMainImage.scheduledIn.createdBy.picture'
  | 'informationMainImage.scheduledIn.createdBy.publishedAt'
  | 'informationMainImage.scheduledIn.createdBy.remoteId'
  | 'informationMainImage.scheduledIn.createdBy.remoteTypeName'
  | 'informationMainImage.scheduledIn.createdBy.stage'
  | 'informationMainImage.scheduledIn.createdBy.updatedAt'
  | 'informationMainImage.scheduledIn.description'
  | 'informationMainImage.scheduledIn.errorMessage'
  | 'informationMainImage.scheduledIn.id'
  | 'informationMainImage.scheduledIn.internal.content'
  | 'informationMainImage.scheduledIn.internal.contentDigest'
  | 'informationMainImage.scheduledIn.internal.contentFilePath'
  | 'informationMainImage.scheduledIn.internal.description'
  | 'informationMainImage.scheduledIn.internal.fieldOwners'
  | 'informationMainImage.scheduledIn.internal.ignoreType'
  | 'informationMainImage.scheduledIn.internal.mediaType'
  | 'informationMainImage.scheduledIn.internal.owner'
  | 'informationMainImage.scheduledIn.internal.type'
  | 'informationMainImage.scheduledIn.parent.children'
  | 'informationMainImage.scheduledIn.parent.id'
  | 'informationMainImage.scheduledIn.publishedAt'
  | 'informationMainImage.scheduledIn.publishedBy.children'
  | 'informationMainImage.scheduledIn.publishedBy.createdAt'
  | 'informationMainImage.scheduledIn.publishedBy.id'
  | 'informationMainImage.scheduledIn.publishedBy.isActive'
  | 'informationMainImage.scheduledIn.publishedBy.kind'
  | 'informationMainImage.scheduledIn.publishedBy.name'
  | 'informationMainImage.scheduledIn.publishedBy.picture'
  | 'informationMainImage.scheduledIn.publishedBy.publishedAt'
  | 'informationMainImage.scheduledIn.publishedBy.remoteId'
  | 'informationMainImage.scheduledIn.publishedBy.remoteTypeName'
  | 'informationMainImage.scheduledIn.publishedBy.stage'
  | 'informationMainImage.scheduledIn.publishedBy.updatedAt'
  | 'informationMainImage.scheduledIn.rawPayload'
  | 'informationMainImage.scheduledIn.release.children'
  | 'informationMainImage.scheduledIn.release.createdAt'
  | 'informationMainImage.scheduledIn.release.description'
  | 'informationMainImage.scheduledIn.release.errorMessage'
  | 'informationMainImage.scheduledIn.release.id'
  | 'informationMainImage.scheduledIn.release.isActive'
  | 'informationMainImage.scheduledIn.release.isImplicit'
  | 'informationMainImage.scheduledIn.release.operations'
  | 'informationMainImage.scheduledIn.release.publishedAt'
  | 'informationMainImage.scheduledIn.release.releaseAt'
  | 'informationMainImage.scheduledIn.release.remoteId'
  | 'informationMainImage.scheduledIn.release.remoteTypeName'
  | 'informationMainImage.scheduledIn.release.stage'
  | 'informationMainImage.scheduledIn.release.status'
  | 'informationMainImage.scheduledIn.release.title'
  | 'informationMainImage.scheduledIn.release.updatedAt'
  | 'informationMainImage.scheduledIn.remoteId'
  | 'informationMainImage.scheduledIn.remoteTypeName'
  | 'informationMainImage.scheduledIn.stage'
  | 'informationMainImage.scheduledIn.status'
  | 'informationMainImage.scheduledIn.updatedAt'
  | 'informationMainImage.scheduledIn.updatedBy.children'
  | 'informationMainImage.scheduledIn.updatedBy.createdAt'
  | 'informationMainImage.scheduledIn.updatedBy.id'
  | 'informationMainImage.scheduledIn.updatedBy.isActive'
  | 'informationMainImage.scheduledIn.updatedBy.kind'
  | 'informationMainImage.scheduledIn.updatedBy.name'
  | 'informationMainImage.scheduledIn.updatedBy.picture'
  | 'informationMainImage.scheduledIn.updatedBy.publishedAt'
  | 'informationMainImage.scheduledIn.updatedBy.remoteId'
  | 'informationMainImage.scheduledIn.updatedBy.remoteTypeName'
  | 'informationMainImage.scheduledIn.updatedBy.stage'
  | 'informationMainImage.scheduledIn.updatedBy.updatedAt'
  | 'informationMainImage.size'
  | 'informationMainImage.stage'
  | 'informationMainImage.updatedAt'
  | 'informationMainImage.updatedBy.children'
  | 'informationMainImage.updatedBy.children.children'
  | 'informationMainImage.updatedBy.children.id'
  | 'informationMainImage.updatedBy.createdAt'
  | 'informationMainImage.updatedBy.id'
  | 'informationMainImage.updatedBy.internal.content'
  | 'informationMainImage.updatedBy.internal.contentDigest'
  | 'informationMainImage.updatedBy.internal.contentFilePath'
  | 'informationMainImage.updatedBy.internal.description'
  | 'informationMainImage.updatedBy.internal.fieldOwners'
  | 'informationMainImage.updatedBy.internal.ignoreType'
  | 'informationMainImage.updatedBy.internal.mediaType'
  | 'informationMainImage.updatedBy.internal.owner'
  | 'informationMainImage.updatedBy.internal.type'
  | 'informationMainImage.updatedBy.isActive'
  | 'informationMainImage.updatedBy.kind'
  | 'informationMainImage.updatedBy.name'
  | 'informationMainImage.updatedBy.parent.children'
  | 'informationMainImage.updatedBy.parent.id'
  | 'informationMainImage.updatedBy.picture'
  | 'informationMainImage.updatedBy.publishedAt'
  | 'informationMainImage.updatedBy.remoteId'
  | 'informationMainImage.updatedBy.remoteTypeName'
  | 'informationMainImage.updatedBy.stage'
  | 'informationMainImage.updatedBy.updatedAt'
  | 'informationMainImage.url'
  | 'informationMainImage.width'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'intro'
  | 'locale'
  | 'mainText.html'
  | 'mainText.markdown'
  | 'mainText.raw'
  | 'mainText.remoteTypeName'
  | 'mainText.text'
  | 'modelSwot.children'
  | 'modelSwot.children.children'
  | 'modelSwot.children.children.children'
  | 'modelSwot.children.children.id'
  | 'modelSwot.children.id'
  | 'modelSwot.children.internal.content'
  | 'modelSwot.children.internal.contentDigest'
  | 'modelSwot.children.internal.contentFilePath'
  | 'modelSwot.children.internal.description'
  | 'modelSwot.children.internal.fieldOwners'
  | 'modelSwot.children.internal.ignoreType'
  | 'modelSwot.children.internal.mediaType'
  | 'modelSwot.children.internal.owner'
  | 'modelSwot.children.internal.type'
  | 'modelSwot.children.parent.children'
  | 'modelSwot.children.parent.id'
  | 'modelSwot.createdAt'
  | 'modelSwot.createdBy.children'
  | 'modelSwot.createdBy.children.children'
  | 'modelSwot.createdBy.children.id'
  | 'modelSwot.createdBy.createdAt'
  | 'modelSwot.createdBy.id'
  | 'modelSwot.createdBy.internal.content'
  | 'modelSwot.createdBy.internal.contentDigest'
  | 'modelSwot.createdBy.internal.contentFilePath'
  | 'modelSwot.createdBy.internal.description'
  | 'modelSwot.createdBy.internal.fieldOwners'
  | 'modelSwot.createdBy.internal.ignoreType'
  | 'modelSwot.createdBy.internal.mediaType'
  | 'modelSwot.createdBy.internal.owner'
  | 'modelSwot.createdBy.internal.type'
  | 'modelSwot.createdBy.isActive'
  | 'modelSwot.createdBy.kind'
  | 'modelSwot.createdBy.name'
  | 'modelSwot.createdBy.parent.children'
  | 'modelSwot.createdBy.parent.id'
  | 'modelSwot.createdBy.picture'
  | 'modelSwot.createdBy.publishedAt'
  | 'modelSwot.createdBy.remoteId'
  | 'modelSwot.createdBy.remoteTypeName'
  | 'modelSwot.createdBy.stage'
  | 'modelSwot.createdBy.updatedAt'
  | 'modelSwot.developmentOption'
  | 'modelSwot.id'
  | 'modelSwot.internal.content'
  | 'modelSwot.internal.contentDigest'
  | 'modelSwot.internal.contentFilePath'
  | 'modelSwot.internal.description'
  | 'modelSwot.internal.fieldOwners'
  | 'modelSwot.internal.ignoreType'
  | 'modelSwot.internal.mediaType'
  | 'modelSwot.internal.owner'
  | 'modelSwot.internal.type'
  | 'modelSwot.locale'
  | 'modelSwot.opportunities.html'
  | 'modelSwot.opportunities.markdown'
  | 'modelSwot.opportunities.raw'
  | 'modelSwot.opportunities.remoteTypeName'
  | 'modelSwot.opportunities.text'
  | 'modelSwot.parent.children'
  | 'modelSwot.parent.children.children'
  | 'modelSwot.parent.children.id'
  | 'modelSwot.parent.id'
  | 'modelSwot.parent.internal.content'
  | 'modelSwot.parent.internal.contentDigest'
  | 'modelSwot.parent.internal.contentFilePath'
  | 'modelSwot.parent.internal.description'
  | 'modelSwot.parent.internal.fieldOwners'
  | 'modelSwot.parent.internal.ignoreType'
  | 'modelSwot.parent.internal.mediaType'
  | 'modelSwot.parent.internal.owner'
  | 'modelSwot.parent.internal.type'
  | 'modelSwot.parent.parent.children'
  | 'modelSwot.parent.parent.id'
  | 'modelSwot.publishedAt'
  | 'modelSwot.publishedBy.children'
  | 'modelSwot.publishedBy.children.children'
  | 'modelSwot.publishedBy.children.id'
  | 'modelSwot.publishedBy.createdAt'
  | 'modelSwot.publishedBy.id'
  | 'modelSwot.publishedBy.internal.content'
  | 'modelSwot.publishedBy.internal.contentDigest'
  | 'modelSwot.publishedBy.internal.contentFilePath'
  | 'modelSwot.publishedBy.internal.description'
  | 'modelSwot.publishedBy.internal.fieldOwners'
  | 'modelSwot.publishedBy.internal.ignoreType'
  | 'modelSwot.publishedBy.internal.mediaType'
  | 'modelSwot.publishedBy.internal.owner'
  | 'modelSwot.publishedBy.internal.type'
  | 'modelSwot.publishedBy.isActive'
  | 'modelSwot.publishedBy.kind'
  | 'modelSwot.publishedBy.name'
  | 'modelSwot.publishedBy.parent.children'
  | 'modelSwot.publishedBy.parent.id'
  | 'modelSwot.publishedBy.picture'
  | 'modelSwot.publishedBy.publishedAt'
  | 'modelSwot.publishedBy.remoteId'
  | 'modelSwot.publishedBy.remoteTypeName'
  | 'modelSwot.publishedBy.stage'
  | 'modelSwot.publishedBy.updatedAt'
  | 'modelSwot.remoteId'
  | 'modelSwot.remoteTypeName'
  | 'modelSwot.scheduledIn'
  | 'modelSwot.scheduledIn.children'
  | 'modelSwot.scheduledIn.children.children'
  | 'modelSwot.scheduledIn.children.id'
  | 'modelSwot.scheduledIn.createdAt'
  | 'modelSwot.scheduledIn.createdBy.children'
  | 'modelSwot.scheduledIn.createdBy.createdAt'
  | 'modelSwot.scheduledIn.createdBy.id'
  | 'modelSwot.scheduledIn.createdBy.isActive'
  | 'modelSwot.scheduledIn.createdBy.kind'
  | 'modelSwot.scheduledIn.createdBy.name'
  | 'modelSwot.scheduledIn.createdBy.picture'
  | 'modelSwot.scheduledIn.createdBy.publishedAt'
  | 'modelSwot.scheduledIn.createdBy.remoteId'
  | 'modelSwot.scheduledIn.createdBy.remoteTypeName'
  | 'modelSwot.scheduledIn.createdBy.stage'
  | 'modelSwot.scheduledIn.createdBy.updatedAt'
  | 'modelSwot.scheduledIn.description'
  | 'modelSwot.scheduledIn.errorMessage'
  | 'modelSwot.scheduledIn.id'
  | 'modelSwot.scheduledIn.internal.content'
  | 'modelSwot.scheduledIn.internal.contentDigest'
  | 'modelSwot.scheduledIn.internal.contentFilePath'
  | 'modelSwot.scheduledIn.internal.description'
  | 'modelSwot.scheduledIn.internal.fieldOwners'
  | 'modelSwot.scheduledIn.internal.ignoreType'
  | 'modelSwot.scheduledIn.internal.mediaType'
  | 'modelSwot.scheduledIn.internal.owner'
  | 'modelSwot.scheduledIn.internal.type'
  | 'modelSwot.scheduledIn.parent.children'
  | 'modelSwot.scheduledIn.parent.id'
  | 'modelSwot.scheduledIn.publishedAt'
  | 'modelSwot.scheduledIn.publishedBy.children'
  | 'modelSwot.scheduledIn.publishedBy.createdAt'
  | 'modelSwot.scheduledIn.publishedBy.id'
  | 'modelSwot.scheduledIn.publishedBy.isActive'
  | 'modelSwot.scheduledIn.publishedBy.kind'
  | 'modelSwot.scheduledIn.publishedBy.name'
  | 'modelSwot.scheduledIn.publishedBy.picture'
  | 'modelSwot.scheduledIn.publishedBy.publishedAt'
  | 'modelSwot.scheduledIn.publishedBy.remoteId'
  | 'modelSwot.scheduledIn.publishedBy.remoteTypeName'
  | 'modelSwot.scheduledIn.publishedBy.stage'
  | 'modelSwot.scheduledIn.publishedBy.updatedAt'
  | 'modelSwot.scheduledIn.rawPayload'
  | 'modelSwot.scheduledIn.release.children'
  | 'modelSwot.scheduledIn.release.createdAt'
  | 'modelSwot.scheduledIn.release.description'
  | 'modelSwot.scheduledIn.release.errorMessage'
  | 'modelSwot.scheduledIn.release.id'
  | 'modelSwot.scheduledIn.release.isActive'
  | 'modelSwot.scheduledIn.release.isImplicit'
  | 'modelSwot.scheduledIn.release.operations'
  | 'modelSwot.scheduledIn.release.publishedAt'
  | 'modelSwot.scheduledIn.release.releaseAt'
  | 'modelSwot.scheduledIn.release.remoteId'
  | 'modelSwot.scheduledIn.release.remoteTypeName'
  | 'modelSwot.scheduledIn.release.stage'
  | 'modelSwot.scheduledIn.release.status'
  | 'modelSwot.scheduledIn.release.title'
  | 'modelSwot.scheduledIn.release.updatedAt'
  | 'modelSwot.scheduledIn.remoteId'
  | 'modelSwot.scheduledIn.remoteTypeName'
  | 'modelSwot.scheduledIn.stage'
  | 'modelSwot.scheduledIn.status'
  | 'modelSwot.scheduledIn.updatedAt'
  | 'modelSwot.scheduledIn.updatedBy.children'
  | 'modelSwot.scheduledIn.updatedBy.createdAt'
  | 'modelSwot.scheduledIn.updatedBy.id'
  | 'modelSwot.scheduledIn.updatedBy.isActive'
  | 'modelSwot.scheduledIn.updatedBy.kind'
  | 'modelSwot.scheduledIn.updatedBy.name'
  | 'modelSwot.scheduledIn.updatedBy.picture'
  | 'modelSwot.scheduledIn.updatedBy.publishedAt'
  | 'modelSwot.scheduledIn.updatedBy.remoteId'
  | 'modelSwot.scheduledIn.updatedBy.remoteTypeName'
  | 'modelSwot.scheduledIn.updatedBy.stage'
  | 'modelSwot.scheduledIn.updatedBy.updatedAt'
  | 'modelSwot.stage'
  | 'modelSwot.strengths.html'
  | 'modelSwot.strengths.markdown'
  | 'modelSwot.strengths.raw'
  | 'modelSwot.strengths.remoteTypeName'
  | 'modelSwot.strengths.text'
  | 'modelSwot.threats.html'
  | 'modelSwot.threats.markdown'
  | 'modelSwot.threats.raw'
  | 'modelSwot.threats.remoteTypeName'
  | 'modelSwot.threats.text'
  | 'modelSwot.updatedAt'
  | 'modelSwot.updatedBy.children'
  | 'modelSwot.updatedBy.children.children'
  | 'modelSwot.updatedBy.children.id'
  | 'modelSwot.updatedBy.createdAt'
  | 'modelSwot.updatedBy.id'
  | 'modelSwot.updatedBy.internal.content'
  | 'modelSwot.updatedBy.internal.contentDigest'
  | 'modelSwot.updatedBy.internal.contentFilePath'
  | 'modelSwot.updatedBy.internal.description'
  | 'modelSwot.updatedBy.internal.fieldOwners'
  | 'modelSwot.updatedBy.internal.ignoreType'
  | 'modelSwot.updatedBy.internal.mediaType'
  | 'modelSwot.updatedBy.internal.owner'
  | 'modelSwot.updatedBy.internal.type'
  | 'modelSwot.updatedBy.isActive'
  | 'modelSwot.updatedBy.kind'
  | 'modelSwot.updatedBy.name'
  | 'modelSwot.updatedBy.parent.children'
  | 'modelSwot.updatedBy.parent.id'
  | 'modelSwot.updatedBy.picture'
  | 'modelSwot.updatedBy.publishedAt'
  | 'modelSwot.updatedBy.remoteId'
  | 'modelSwot.updatedBy.remoteTypeName'
  | 'modelSwot.updatedBy.stage'
  | 'modelSwot.updatedBy.updatedAt'
  | 'modelSwot.weaknesses.html'
  | 'modelSwot.weaknesses.markdown'
  | 'modelSwot.weaknesses.raw'
  | 'modelSwot.weaknesses.remoteTypeName'
  | 'modelSwot.weaknesses.text'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'publishedAt'
  | 'publishedBy.children'
  | 'publishedBy.children.children'
  | 'publishedBy.children.children.children'
  | 'publishedBy.children.children.id'
  | 'publishedBy.children.id'
  | 'publishedBy.children.internal.content'
  | 'publishedBy.children.internal.contentDigest'
  | 'publishedBy.children.internal.contentFilePath'
  | 'publishedBy.children.internal.description'
  | 'publishedBy.children.internal.fieldOwners'
  | 'publishedBy.children.internal.ignoreType'
  | 'publishedBy.children.internal.mediaType'
  | 'publishedBy.children.internal.owner'
  | 'publishedBy.children.internal.type'
  | 'publishedBy.children.parent.children'
  | 'publishedBy.children.parent.id'
  | 'publishedBy.createdAt'
  | 'publishedBy.id'
  | 'publishedBy.internal.content'
  | 'publishedBy.internal.contentDigest'
  | 'publishedBy.internal.contentFilePath'
  | 'publishedBy.internal.description'
  | 'publishedBy.internal.fieldOwners'
  | 'publishedBy.internal.ignoreType'
  | 'publishedBy.internal.mediaType'
  | 'publishedBy.internal.owner'
  | 'publishedBy.internal.type'
  | 'publishedBy.isActive'
  | 'publishedBy.kind'
  | 'publishedBy.name'
  | 'publishedBy.parent.children'
  | 'publishedBy.parent.children.children'
  | 'publishedBy.parent.children.id'
  | 'publishedBy.parent.id'
  | 'publishedBy.parent.internal.content'
  | 'publishedBy.parent.internal.contentDigest'
  | 'publishedBy.parent.internal.contentFilePath'
  | 'publishedBy.parent.internal.description'
  | 'publishedBy.parent.internal.fieldOwners'
  | 'publishedBy.parent.internal.ignoreType'
  | 'publishedBy.parent.internal.mediaType'
  | 'publishedBy.parent.internal.owner'
  | 'publishedBy.parent.internal.type'
  | 'publishedBy.parent.parent.children'
  | 'publishedBy.parent.parent.id'
  | 'publishedBy.picture'
  | 'publishedBy.publishedAt'
  | 'publishedBy.remoteId'
  | 'publishedBy.remoteTypeName'
  | 'publishedBy.stage'
  | 'publishedBy.updatedAt'
  | 'remoteId'
  | 'remoteTypeName'
  | 'scheduledIn'
  | 'scheduledIn.children'
  | 'scheduledIn.children.children'
  | 'scheduledIn.children.children.children'
  | 'scheduledIn.children.children.id'
  | 'scheduledIn.children.id'
  | 'scheduledIn.children.internal.content'
  | 'scheduledIn.children.internal.contentDigest'
  | 'scheduledIn.children.internal.contentFilePath'
  | 'scheduledIn.children.internal.description'
  | 'scheduledIn.children.internal.fieldOwners'
  | 'scheduledIn.children.internal.ignoreType'
  | 'scheduledIn.children.internal.mediaType'
  | 'scheduledIn.children.internal.owner'
  | 'scheduledIn.children.internal.type'
  | 'scheduledIn.children.parent.children'
  | 'scheduledIn.children.parent.id'
  | 'scheduledIn.createdAt'
  | 'scheduledIn.createdBy.children'
  | 'scheduledIn.createdBy.children.children'
  | 'scheduledIn.createdBy.children.id'
  | 'scheduledIn.createdBy.createdAt'
  | 'scheduledIn.createdBy.id'
  | 'scheduledIn.createdBy.internal.content'
  | 'scheduledIn.createdBy.internal.contentDigest'
  | 'scheduledIn.createdBy.internal.contentFilePath'
  | 'scheduledIn.createdBy.internal.description'
  | 'scheduledIn.createdBy.internal.fieldOwners'
  | 'scheduledIn.createdBy.internal.ignoreType'
  | 'scheduledIn.createdBy.internal.mediaType'
  | 'scheduledIn.createdBy.internal.owner'
  | 'scheduledIn.createdBy.internal.type'
  | 'scheduledIn.createdBy.isActive'
  | 'scheduledIn.createdBy.kind'
  | 'scheduledIn.createdBy.name'
  | 'scheduledIn.createdBy.parent.children'
  | 'scheduledIn.createdBy.parent.id'
  | 'scheduledIn.createdBy.picture'
  | 'scheduledIn.createdBy.publishedAt'
  | 'scheduledIn.createdBy.remoteId'
  | 'scheduledIn.createdBy.remoteTypeName'
  | 'scheduledIn.createdBy.stage'
  | 'scheduledIn.createdBy.updatedAt'
  | 'scheduledIn.description'
  | 'scheduledIn.errorMessage'
  | 'scheduledIn.id'
  | 'scheduledIn.internal.content'
  | 'scheduledIn.internal.contentDigest'
  | 'scheduledIn.internal.contentFilePath'
  | 'scheduledIn.internal.description'
  | 'scheduledIn.internal.fieldOwners'
  | 'scheduledIn.internal.ignoreType'
  | 'scheduledIn.internal.mediaType'
  | 'scheduledIn.internal.owner'
  | 'scheduledIn.internal.type'
  | 'scheduledIn.parent.children'
  | 'scheduledIn.parent.children.children'
  | 'scheduledIn.parent.children.id'
  | 'scheduledIn.parent.id'
  | 'scheduledIn.parent.internal.content'
  | 'scheduledIn.parent.internal.contentDigest'
  | 'scheduledIn.parent.internal.contentFilePath'
  | 'scheduledIn.parent.internal.description'
  | 'scheduledIn.parent.internal.fieldOwners'
  | 'scheduledIn.parent.internal.ignoreType'
  | 'scheduledIn.parent.internal.mediaType'
  | 'scheduledIn.parent.internal.owner'
  | 'scheduledIn.parent.internal.type'
  | 'scheduledIn.parent.parent.children'
  | 'scheduledIn.parent.parent.id'
  | 'scheduledIn.publishedAt'
  | 'scheduledIn.publishedBy.children'
  | 'scheduledIn.publishedBy.children.children'
  | 'scheduledIn.publishedBy.children.id'
  | 'scheduledIn.publishedBy.createdAt'
  | 'scheduledIn.publishedBy.id'
  | 'scheduledIn.publishedBy.internal.content'
  | 'scheduledIn.publishedBy.internal.contentDigest'
  | 'scheduledIn.publishedBy.internal.contentFilePath'
  | 'scheduledIn.publishedBy.internal.description'
  | 'scheduledIn.publishedBy.internal.fieldOwners'
  | 'scheduledIn.publishedBy.internal.ignoreType'
  | 'scheduledIn.publishedBy.internal.mediaType'
  | 'scheduledIn.publishedBy.internal.owner'
  | 'scheduledIn.publishedBy.internal.type'
  | 'scheduledIn.publishedBy.isActive'
  | 'scheduledIn.publishedBy.kind'
  | 'scheduledIn.publishedBy.name'
  | 'scheduledIn.publishedBy.parent.children'
  | 'scheduledIn.publishedBy.parent.id'
  | 'scheduledIn.publishedBy.picture'
  | 'scheduledIn.publishedBy.publishedAt'
  | 'scheduledIn.publishedBy.remoteId'
  | 'scheduledIn.publishedBy.remoteTypeName'
  | 'scheduledIn.publishedBy.stage'
  | 'scheduledIn.publishedBy.updatedAt'
  | 'scheduledIn.rawPayload'
  | 'scheduledIn.release.children'
  | 'scheduledIn.release.children.children'
  | 'scheduledIn.release.children.id'
  | 'scheduledIn.release.createdAt'
  | 'scheduledIn.release.createdBy.children'
  | 'scheduledIn.release.createdBy.createdAt'
  | 'scheduledIn.release.createdBy.id'
  | 'scheduledIn.release.createdBy.isActive'
  | 'scheduledIn.release.createdBy.kind'
  | 'scheduledIn.release.createdBy.name'
  | 'scheduledIn.release.createdBy.picture'
  | 'scheduledIn.release.createdBy.publishedAt'
  | 'scheduledIn.release.createdBy.remoteId'
  | 'scheduledIn.release.createdBy.remoteTypeName'
  | 'scheduledIn.release.createdBy.stage'
  | 'scheduledIn.release.createdBy.updatedAt'
  | 'scheduledIn.release.description'
  | 'scheduledIn.release.errorMessage'
  | 'scheduledIn.release.id'
  | 'scheduledIn.release.internal.content'
  | 'scheduledIn.release.internal.contentDigest'
  | 'scheduledIn.release.internal.contentFilePath'
  | 'scheduledIn.release.internal.description'
  | 'scheduledIn.release.internal.fieldOwners'
  | 'scheduledIn.release.internal.ignoreType'
  | 'scheduledIn.release.internal.mediaType'
  | 'scheduledIn.release.internal.owner'
  | 'scheduledIn.release.internal.type'
  | 'scheduledIn.release.isActive'
  | 'scheduledIn.release.isImplicit'
  | 'scheduledIn.release.operations'
  | 'scheduledIn.release.operations.children'
  | 'scheduledIn.release.operations.createdAt'
  | 'scheduledIn.release.operations.description'
  | 'scheduledIn.release.operations.errorMessage'
  | 'scheduledIn.release.operations.id'
  | 'scheduledIn.release.operations.publishedAt'
  | 'scheduledIn.release.operations.rawPayload'
  | 'scheduledIn.release.operations.remoteId'
  | 'scheduledIn.release.operations.remoteTypeName'
  | 'scheduledIn.release.operations.stage'
  | 'scheduledIn.release.operations.status'
  | 'scheduledIn.release.operations.updatedAt'
  | 'scheduledIn.release.parent.children'
  | 'scheduledIn.release.parent.id'
  | 'scheduledIn.release.publishedAt'
  | 'scheduledIn.release.publishedBy.children'
  | 'scheduledIn.release.publishedBy.createdAt'
  | 'scheduledIn.release.publishedBy.id'
  | 'scheduledIn.release.publishedBy.isActive'
  | 'scheduledIn.release.publishedBy.kind'
  | 'scheduledIn.release.publishedBy.name'
  | 'scheduledIn.release.publishedBy.picture'
  | 'scheduledIn.release.publishedBy.publishedAt'
  | 'scheduledIn.release.publishedBy.remoteId'
  | 'scheduledIn.release.publishedBy.remoteTypeName'
  | 'scheduledIn.release.publishedBy.stage'
  | 'scheduledIn.release.publishedBy.updatedAt'
  | 'scheduledIn.release.releaseAt'
  | 'scheduledIn.release.remoteId'
  | 'scheduledIn.release.remoteTypeName'
  | 'scheduledIn.release.stage'
  | 'scheduledIn.release.status'
  | 'scheduledIn.release.title'
  | 'scheduledIn.release.updatedAt'
  | 'scheduledIn.release.updatedBy.children'
  | 'scheduledIn.release.updatedBy.createdAt'
  | 'scheduledIn.release.updatedBy.id'
  | 'scheduledIn.release.updatedBy.isActive'
  | 'scheduledIn.release.updatedBy.kind'
  | 'scheduledIn.release.updatedBy.name'
  | 'scheduledIn.release.updatedBy.picture'
  | 'scheduledIn.release.updatedBy.publishedAt'
  | 'scheduledIn.release.updatedBy.remoteId'
  | 'scheduledIn.release.updatedBy.remoteTypeName'
  | 'scheduledIn.release.updatedBy.stage'
  | 'scheduledIn.release.updatedBy.updatedAt'
  | 'scheduledIn.remoteId'
  | 'scheduledIn.remoteTypeName'
  | 'scheduledIn.stage'
  | 'scheduledIn.status'
  | 'scheduledIn.updatedAt'
  | 'scheduledIn.updatedBy.children'
  | 'scheduledIn.updatedBy.children.children'
  | 'scheduledIn.updatedBy.children.id'
  | 'scheduledIn.updatedBy.createdAt'
  | 'scheduledIn.updatedBy.id'
  | 'scheduledIn.updatedBy.internal.content'
  | 'scheduledIn.updatedBy.internal.contentDigest'
  | 'scheduledIn.updatedBy.internal.contentFilePath'
  | 'scheduledIn.updatedBy.internal.description'
  | 'scheduledIn.updatedBy.internal.fieldOwners'
  | 'scheduledIn.updatedBy.internal.ignoreType'
  | 'scheduledIn.updatedBy.internal.mediaType'
  | 'scheduledIn.updatedBy.internal.owner'
  | 'scheduledIn.updatedBy.internal.type'
  | 'scheduledIn.updatedBy.isActive'
  | 'scheduledIn.updatedBy.kind'
  | 'scheduledIn.updatedBy.name'
  | 'scheduledIn.updatedBy.parent.children'
  | 'scheduledIn.updatedBy.parent.id'
  | 'scheduledIn.updatedBy.picture'
  | 'scheduledIn.updatedBy.publishedAt'
  | 'scheduledIn.updatedBy.remoteId'
  | 'scheduledIn.updatedBy.remoteTypeName'
  | 'scheduledIn.updatedBy.stage'
  | 'scheduledIn.updatedBy.updatedAt'
  | 'slug'
  | 'stage'
  | 'title'
  | 'updatedAt'
  | 'updatedBy.children'
  | 'updatedBy.children.children'
  | 'updatedBy.children.children.children'
  | 'updatedBy.children.children.id'
  | 'updatedBy.children.id'
  | 'updatedBy.children.internal.content'
  | 'updatedBy.children.internal.contentDigest'
  | 'updatedBy.children.internal.contentFilePath'
  | 'updatedBy.children.internal.description'
  | 'updatedBy.children.internal.fieldOwners'
  | 'updatedBy.children.internal.ignoreType'
  | 'updatedBy.children.internal.mediaType'
  | 'updatedBy.children.internal.owner'
  | 'updatedBy.children.internal.type'
  | 'updatedBy.children.parent.children'
  | 'updatedBy.children.parent.id'
  | 'updatedBy.createdAt'
  | 'updatedBy.id'
  | 'updatedBy.internal.content'
  | 'updatedBy.internal.contentDigest'
  | 'updatedBy.internal.contentFilePath'
  | 'updatedBy.internal.description'
  | 'updatedBy.internal.fieldOwners'
  | 'updatedBy.internal.ignoreType'
  | 'updatedBy.internal.mediaType'
  | 'updatedBy.internal.owner'
  | 'updatedBy.internal.type'
  | 'updatedBy.isActive'
  | 'updatedBy.kind'
  | 'updatedBy.name'
  | 'updatedBy.parent.children'
  | 'updatedBy.parent.children.children'
  | 'updatedBy.parent.children.id'
  | 'updatedBy.parent.id'
  | 'updatedBy.parent.internal.content'
  | 'updatedBy.parent.internal.contentDigest'
  | 'updatedBy.parent.internal.contentFilePath'
  | 'updatedBy.parent.internal.description'
  | 'updatedBy.parent.internal.fieldOwners'
  | 'updatedBy.parent.internal.ignoreType'
  | 'updatedBy.parent.internal.mediaType'
  | 'updatedBy.parent.internal.owner'
  | 'updatedBy.parent.internal.type'
  | 'updatedBy.parent.parent.children'
  | 'updatedBy.parent.parent.id'
  | 'updatedBy.picture'
  | 'updatedBy.publishedAt'
  | 'updatedBy.remoteId'
  | 'updatedBy.remoteTypeName'
  | 'updatedBy.stage'
  | 'updatedBy.updatedAt';

type GraphCMS_DevelopmentOptionFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly createdAt: InputMaybe<JSONQueryOperatorInput>;
  readonly createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly fundingOptions: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly gatsbyPath: InputMaybe<StringQueryOperatorInput>;
  readonly icon: InputMaybe<GraphCMS_AssetFilterInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly informationMainImage: InputMaybe<GraphCMS_AssetFilterInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly intro: InputMaybe<StringQueryOperatorInput>;
  readonly locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  readonly mainText: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly modelSwot: InputMaybe<GraphCMS_ModelSwotFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly publishedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly remoteId: InputMaybe<IDQueryOperatorInput>;
  readonly remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  readonly scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly updatedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};

type GraphCMS_DevelopmentOptionFilterListInput = {
  readonly elemMatch: InputMaybe<GraphCMS_DevelopmentOptionFilterInput>;
};

type GraphCMS_DevelopmentOptionGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_DevelopmentOptionEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<GraphCMS_DevelopmentOptionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_DevelopmentOption>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_DevelopmentOptionGroupConnection_distinctArgs = {
  field: GraphCMS_DevelopmentOptionFieldsEnum;
};


type GraphCMS_DevelopmentOptionGroupConnection_groupArgs = {
  field: GraphCMS_DevelopmentOptionFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_DevelopmentOptionGroupConnection_maxArgs = {
  field: GraphCMS_DevelopmentOptionFieldsEnum;
};


type GraphCMS_DevelopmentOptionGroupConnection_minArgs = {
  field: GraphCMS_DevelopmentOptionFieldsEnum;
};


type GraphCMS_DevelopmentOptionGroupConnection_sumArgs = {
  field: GraphCMS_DevelopmentOptionFieldsEnum;
};

type GraphCMS_DevelopmentOptionSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_DevelopmentOptionFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type GraphCMS_DevelopmentOptionchecklistUnion = GraphCMS_Checklist;

type GraphCMS_HelpfulInfo = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly createdAt: Scalars['JSON'];
  readonly createdBy: Maybe<GraphCMS_User>;
  readonly id: Scalars['ID'];
  readonly info: GraphCMS_RichText;
  readonly internal: Internal;
  readonly locale: GraphCMS_Locale;
  readonly parent: Maybe<Node>;
  readonly publishedAt: Maybe<Scalars['JSON']>;
  readonly publishedBy: Maybe<GraphCMS_User>;
  readonly remoteId: Scalars['ID'];
  readonly remoteTypeName: Scalars['String'];
  readonly scheduledIn: ReadonlyArray<GraphCMS_ScheduledOperation>;
  readonly stage: GraphCMS_Stage;
  readonly stageNumber: Scalars['Int'];
  readonly updatedAt: Scalars['JSON'];
  readonly updatedBy: Maybe<GraphCMS_User>;
};

type GraphCMS_HelpfulInfoConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_HelpfulInfoEdge>;
  readonly group: ReadonlyArray<GraphCMS_HelpfulInfoGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_HelpfulInfo>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_HelpfulInfoConnection_distinctArgs = {
  field: GraphCMS_HelpfulInfoFieldsEnum;
};


type GraphCMS_HelpfulInfoConnection_groupArgs = {
  field: GraphCMS_HelpfulInfoFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_HelpfulInfoConnection_maxArgs = {
  field: GraphCMS_HelpfulInfoFieldsEnum;
};


type GraphCMS_HelpfulInfoConnection_minArgs = {
  field: GraphCMS_HelpfulInfoFieldsEnum;
};


type GraphCMS_HelpfulInfoConnection_sumArgs = {
  field: GraphCMS_HelpfulInfoFieldsEnum;
};

type GraphCMS_HelpfulInfoEdge = {
  readonly next: Maybe<GraphCMS_HelpfulInfo>;
  readonly node: GraphCMS_HelpfulInfo;
  readonly previous: Maybe<GraphCMS_HelpfulInfo>;
};

type GraphCMS_HelpfulInfoFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'createdAt'
  | 'createdBy.children'
  | 'createdBy.children.children'
  | 'createdBy.children.children.children'
  | 'createdBy.children.children.id'
  | 'createdBy.children.id'
  | 'createdBy.children.internal.content'
  | 'createdBy.children.internal.contentDigest'
  | 'createdBy.children.internal.contentFilePath'
  | 'createdBy.children.internal.description'
  | 'createdBy.children.internal.fieldOwners'
  | 'createdBy.children.internal.ignoreType'
  | 'createdBy.children.internal.mediaType'
  | 'createdBy.children.internal.owner'
  | 'createdBy.children.internal.type'
  | 'createdBy.children.parent.children'
  | 'createdBy.children.parent.id'
  | 'createdBy.createdAt'
  | 'createdBy.id'
  | 'createdBy.internal.content'
  | 'createdBy.internal.contentDigest'
  | 'createdBy.internal.contentFilePath'
  | 'createdBy.internal.description'
  | 'createdBy.internal.fieldOwners'
  | 'createdBy.internal.ignoreType'
  | 'createdBy.internal.mediaType'
  | 'createdBy.internal.owner'
  | 'createdBy.internal.type'
  | 'createdBy.isActive'
  | 'createdBy.kind'
  | 'createdBy.name'
  | 'createdBy.parent.children'
  | 'createdBy.parent.children.children'
  | 'createdBy.parent.children.id'
  | 'createdBy.parent.id'
  | 'createdBy.parent.internal.content'
  | 'createdBy.parent.internal.contentDigest'
  | 'createdBy.parent.internal.contentFilePath'
  | 'createdBy.parent.internal.description'
  | 'createdBy.parent.internal.fieldOwners'
  | 'createdBy.parent.internal.ignoreType'
  | 'createdBy.parent.internal.mediaType'
  | 'createdBy.parent.internal.owner'
  | 'createdBy.parent.internal.type'
  | 'createdBy.parent.parent.children'
  | 'createdBy.parent.parent.id'
  | 'createdBy.picture'
  | 'createdBy.publishedAt'
  | 'createdBy.remoteId'
  | 'createdBy.remoteTypeName'
  | 'createdBy.stage'
  | 'createdBy.updatedAt'
  | 'id'
  | 'info.html'
  | 'info.markdown'
  | 'info.raw'
  | 'info.remoteTypeName'
  | 'info.text'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'locale'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'publishedAt'
  | 'publishedBy.children'
  | 'publishedBy.children.children'
  | 'publishedBy.children.children.children'
  | 'publishedBy.children.children.id'
  | 'publishedBy.children.id'
  | 'publishedBy.children.internal.content'
  | 'publishedBy.children.internal.contentDigest'
  | 'publishedBy.children.internal.contentFilePath'
  | 'publishedBy.children.internal.description'
  | 'publishedBy.children.internal.fieldOwners'
  | 'publishedBy.children.internal.ignoreType'
  | 'publishedBy.children.internal.mediaType'
  | 'publishedBy.children.internal.owner'
  | 'publishedBy.children.internal.type'
  | 'publishedBy.children.parent.children'
  | 'publishedBy.children.parent.id'
  | 'publishedBy.createdAt'
  | 'publishedBy.id'
  | 'publishedBy.internal.content'
  | 'publishedBy.internal.contentDigest'
  | 'publishedBy.internal.contentFilePath'
  | 'publishedBy.internal.description'
  | 'publishedBy.internal.fieldOwners'
  | 'publishedBy.internal.ignoreType'
  | 'publishedBy.internal.mediaType'
  | 'publishedBy.internal.owner'
  | 'publishedBy.internal.type'
  | 'publishedBy.isActive'
  | 'publishedBy.kind'
  | 'publishedBy.name'
  | 'publishedBy.parent.children'
  | 'publishedBy.parent.children.children'
  | 'publishedBy.parent.children.id'
  | 'publishedBy.parent.id'
  | 'publishedBy.parent.internal.content'
  | 'publishedBy.parent.internal.contentDigest'
  | 'publishedBy.parent.internal.contentFilePath'
  | 'publishedBy.parent.internal.description'
  | 'publishedBy.parent.internal.fieldOwners'
  | 'publishedBy.parent.internal.ignoreType'
  | 'publishedBy.parent.internal.mediaType'
  | 'publishedBy.parent.internal.owner'
  | 'publishedBy.parent.internal.type'
  | 'publishedBy.parent.parent.children'
  | 'publishedBy.parent.parent.id'
  | 'publishedBy.picture'
  | 'publishedBy.publishedAt'
  | 'publishedBy.remoteId'
  | 'publishedBy.remoteTypeName'
  | 'publishedBy.stage'
  | 'publishedBy.updatedAt'
  | 'remoteId'
  | 'remoteTypeName'
  | 'scheduledIn'
  | 'scheduledIn.children'
  | 'scheduledIn.children.children'
  | 'scheduledIn.children.children.children'
  | 'scheduledIn.children.children.id'
  | 'scheduledIn.children.id'
  | 'scheduledIn.children.internal.content'
  | 'scheduledIn.children.internal.contentDigest'
  | 'scheduledIn.children.internal.contentFilePath'
  | 'scheduledIn.children.internal.description'
  | 'scheduledIn.children.internal.fieldOwners'
  | 'scheduledIn.children.internal.ignoreType'
  | 'scheduledIn.children.internal.mediaType'
  | 'scheduledIn.children.internal.owner'
  | 'scheduledIn.children.internal.type'
  | 'scheduledIn.children.parent.children'
  | 'scheduledIn.children.parent.id'
  | 'scheduledIn.createdAt'
  | 'scheduledIn.createdBy.children'
  | 'scheduledIn.createdBy.children.children'
  | 'scheduledIn.createdBy.children.id'
  | 'scheduledIn.createdBy.createdAt'
  | 'scheduledIn.createdBy.id'
  | 'scheduledIn.createdBy.internal.content'
  | 'scheduledIn.createdBy.internal.contentDigest'
  | 'scheduledIn.createdBy.internal.contentFilePath'
  | 'scheduledIn.createdBy.internal.description'
  | 'scheduledIn.createdBy.internal.fieldOwners'
  | 'scheduledIn.createdBy.internal.ignoreType'
  | 'scheduledIn.createdBy.internal.mediaType'
  | 'scheduledIn.createdBy.internal.owner'
  | 'scheduledIn.createdBy.internal.type'
  | 'scheduledIn.createdBy.isActive'
  | 'scheduledIn.createdBy.kind'
  | 'scheduledIn.createdBy.name'
  | 'scheduledIn.createdBy.parent.children'
  | 'scheduledIn.createdBy.parent.id'
  | 'scheduledIn.createdBy.picture'
  | 'scheduledIn.createdBy.publishedAt'
  | 'scheduledIn.createdBy.remoteId'
  | 'scheduledIn.createdBy.remoteTypeName'
  | 'scheduledIn.createdBy.stage'
  | 'scheduledIn.createdBy.updatedAt'
  | 'scheduledIn.description'
  | 'scheduledIn.errorMessage'
  | 'scheduledIn.id'
  | 'scheduledIn.internal.content'
  | 'scheduledIn.internal.contentDigest'
  | 'scheduledIn.internal.contentFilePath'
  | 'scheduledIn.internal.description'
  | 'scheduledIn.internal.fieldOwners'
  | 'scheduledIn.internal.ignoreType'
  | 'scheduledIn.internal.mediaType'
  | 'scheduledIn.internal.owner'
  | 'scheduledIn.internal.type'
  | 'scheduledIn.parent.children'
  | 'scheduledIn.parent.children.children'
  | 'scheduledIn.parent.children.id'
  | 'scheduledIn.parent.id'
  | 'scheduledIn.parent.internal.content'
  | 'scheduledIn.parent.internal.contentDigest'
  | 'scheduledIn.parent.internal.contentFilePath'
  | 'scheduledIn.parent.internal.description'
  | 'scheduledIn.parent.internal.fieldOwners'
  | 'scheduledIn.parent.internal.ignoreType'
  | 'scheduledIn.parent.internal.mediaType'
  | 'scheduledIn.parent.internal.owner'
  | 'scheduledIn.parent.internal.type'
  | 'scheduledIn.parent.parent.children'
  | 'scheduledIn.parent.parent.id'
  | 'scheduledIn.publishedAt'
  | 'scheduledIn.publishedBy.children'
  | 'scheduledIn.publishedBy.children.children'
  | 'scheduledIn.publishedBy.children.id'
  | 'scheduledIn.publishedBy.createdAt'
  | 'scheduledIn.publishedBy.id'
  | 'scheduledIn.publishedBy.internal.content'
  | 'scheduledIn.publishedBy.internal.contentDigest'
  | 'scheduledIn.publishedBy.internal.contentFilePath'
  | 'scheduledIn.publishedBy.internal.description'
  | 'scheduledIn.publishedBy.internal.fieldOwners'
  | 'scheduledIn.publishedBy.internal.ignoreType'
  | 'scheduledIn.publishedBy.internal.mediaType'
  | 'scheduledIn.publishedBy.internal.owner'
  | 'scheduledIn.publishedBy.internal.type'
  | 'scheduledIn.publishedBy.isActive'
  | 'scheduledIn.publishedBy.kind'
  | 'scheduledIn.publishedBy.name'
  | 'scheduledIn.publishedBy.parent.children'
  | 'scheduledIn.publishedBy.parent.id'
  | 'scheduledIn.publishedBy.picture'
  | 'scheduledIn.publishedBy.publishedAt'
  | 'scheduledIn.publishedBy.remoteId'
  | 'scheduledIn.publishedBy.remoteTypeName'
  | 'scheduledIn.publishedBy.stage'
  | 'scheduledIn.publishedBy.updatedAt'
  | 'scheduledIn.rawPayload'
  | 'scheduledIn.release.children'
  | 'scheduledIn.release.children.children'
  | 'scheduledIn.release.children.id'
  | 'scheduledIn.release.createdAt'
  | 'scheduledIn.release.createdBy.children'
  | 'scheduledIn.release.createdBy.createdAt'
  | 'scheduledIn.release.createdBy.id'
  | 'scheduledIn.release.createdBy.isActive'
  | 'scheduledIn.release.createdBy.kind'
  | 'scheduledIn.release.createdBy.name'
  | 'scheduledIn.release.createdBy.picture'
  | 'scheduledIn.release.createdBy.publishedAt'
  | 'scheduledIn.release.createdBy.remoteId'
  | 'scheduledIn.release.createdBy.remoteTypeName'
  | 'scheduledIn.release.createdBy.stage'
  | 'scheduledIn.release.createdBy.updatedAt'
  | 'scheduledIn.release.description'
  | 'scheduledIn.release.errorMessage'
  | 'scheduledIn.release.id'
  | 'scheduledIn.release.internal.content'
  | 'scheduledIn.release.internal.contentDigest'
  | 'scheduledIn.release.internal.contentFilePath'
  | 'scheduledIn.release.internal.description'
  | 'scheduledIn.release.internal.fieldOwners'
  | 'scheduledIn.release.internal.ignoreType'
  | 'scheduledIn.release.internal.mediaType'
  | 'scheduledIn.release.internal.owner'
  | 'scheduledIn.release.internal.type'
  | 'scheduledIn.release.isActive'
  | 'scheduledIn.release.isImplicit'
  | 'scheduledIn.release.operations'
  | 'scheduledIn.release.operations.children'
  | 'scheduledIn.release.operations.createdAt'
  | 'scheduledIn.release.operations.description'
  | 'scheduledIn.release.operations.errorMessage'
  | 'scheduledIn.release.operations.id'
  | 'scheduledIn.release.operations.publishedAt'
  | 'scheduledIn.release.operations.rawPayload'
  | 'scheduledIn.release.operations.remoteId'
  | 'scheduledIn.release.operations.remoteTypeName'
  | 'scheduledIn.release.operations.stage'
  | 'scheduledIn.release.operations.status'
  | 'scheduledIn.release.operations.updatedAt'
  | 'scheduledIn.release.parent.children'
  | 'scheduledIn.release.parent.id'
  | 'scheduledIn.release.publishedAt'
  | 'scheduledIn.release.publishedBy.children'
  | 'scheduledIn.release.publishedBy.createdAt'
  | 'scheduledIn.release.publishedBy.id'
  | 'scheduledIn.release.publishedBy.isActive'
  | 'scheduledIn.release.publishedBy.kind'
  | 'scheduledIn.release.publishedBy.name'
  | 'scheduledIn.release.publishedBy.picture'
  | 'scheduledIn.release.publishedBy.publishedAt'
  | 'scheduledIn.release.publishedBy.remoteId'
  | 'scheduledIn.release.publishedBy.remoteTypeName'
  | 'scheduledIn.release.publishedBy.stage'
  | 'scheduledIn.release.publishedBy.updatedAt'
  | 'scheduledIn.release.releaseAt'
  | 'scheduledIn.release.remoteId'
  | 'scheduledIn.release.remoteTypeName'
  | 'scheduledIn.release.stage'
  | 'scheduledIn.release.status'
  | 'scheduledIn.release.title'
  | 'scheduledIn.release.updatedAt'
  | 'scheduledIn.release.updatedBy.children'
  | 'scheduledIn.release.updatedBy.createdAt'
  | 'scheduledIn.release.updatedBy.id'
  | 'scheduledIn.release.updatedBy.isActive'
  | 'scheduledIn.release.updatedBy.kind'
  | 'scheduledIn.release.updatedBy.name'
  | 'scheduledIn.release.updatedBy.picture'
  | 'scheduledIn.release.updatedBy.publishedAt'
  | 'scheduledIn.release.updatedBy.remoteId'
  | 'scheduledIn.release.updatedBy.remoteTypeName'
  | 'scheduledIn.release.updatedBy.stage'
  | 'scheduledIn.release.updatedBy.updatedAt'
  | 'scheduledIn.remoteId'
  | 'scheduledIn.remoteTypeName'
  | 'scheduledIn.stage'
  | 'scheduledIn.status'
  | 'scheduledIn.updatedAt'
  | 'scheduledIn.updatedBy.children'
  | 'scheduledIn.updatedBy.children.children'
  | 'scheduledIn.updatedBy.children.id'
  | 'scheduledIn.updatedBy.createdAt'
  | 'scheduledIn.updatedBy.id'
  | 'scheduledIn.updatedBy.internal.content'
  | 'scheduledIn.updatedBy.internal.contentDigest'
  | 'scheduledIn.updatedBy.internal.contentFilePath'
  | 'scheduledIn.updatedBy.internal.description'
  | 'scheduledIn.updatedBy.internal.fieldOwners'
  | 'scheduledIn.updatedBy.internal.ignoreType'
  | 'scheduledIn.updatedBy.internal.mediaType'
  | 'scheduledIn.updatedBy.internal.owner'
  | 'scheduledIn.updatedBy.internal.type'
  | 'scheduledIn.updatedBy.isActive'
  | 'scheduledIn.updatedBy.kind'
  | 'scheduledIn.updatedBy.name'
  | 'scheduledIn.updatedBy.parent.children'
  | 'scheduledIn.updatedBy.parent.id'
  | 'scheduledIn.updatedBy.picture'
  | 'scheduledIn.updatedBy.publishedAt'
  | 'scheduledIn.updatedBy.remoteId'
  | 'scheduledIn.updatedBy.remoteTypeName'
  | 'scheduledIn.updatedBy.stage'
  | 'scheduledIn.updatedBy.updatedAt'
  | 'stage'
  | 'stageNumber'
  | 'updatedAt'
  | 'updatedBy.children'
  | 'updatedBy.children.children'
  | 'updatedBy.children.children.children'
  | 'updatedBy.children.children.id'
  | 'updatedBy.children.id'
  | 'updatedBy.children.internal.content'
  | 'updatedBy.children.internal.contentDigest'
  | 'updatedBy.children.internal.contentFilePath'
  | 'updatedBy.children.internal.description'
  | 'updatedBy.children.internal.fieldOwners'
  | 'updatedBy.children.internal.ignoreType'
  | 'updatedBy.children.internal.mediaType'
  | 'updatedBy.children.internal.owner'
  | 'updatedBy.children.internal.type'
  | 'updatedBy.children.parent.children'
  | 'updatedBy.children.parent.id'
  | 'updatedBy.createdAt'
  | 'updatedBy.id'
  | 'updatedBy.internal.content'
  | 'updatedBy.internal.contentDigest'
  | 'updatedBy.internal.contentFilePath'
  | 'updatedBy.internal.description'
  | 'updatedBy.internal.fieldOwners'
  | 'updatedBy.internal.ignoreType'
  | 'updatedBy.internal.mediaType'
  | 'updatedBy.internal.owner'
  | 'updatedBy.internal.type'
  | 'updatedBy.isActive'
  | 'updatedBy.kind'
  | 'updatedBy.name'
  | 'updatedBy.parent.children'
  | 'updatedBy.parent.children.children'
  | 'updatedBy.parent.children.id'
  | 'updatedBy.parent.id'
  | 'updatedBy.parent.internal.content'
  | 'updatedBy.parent.internal.contentDigest'
  | 'updatedBy.parent.internal.contentFilePath'
  | 'updatedBy.parent.internal.description'
  | 'updatedBy.parent.internal.fieldOwners'
  | 'updatedBy.parent.internal.ignoreType'
  | 'updatedBy.parent.internal.mediaType'
  | 'updatedBy.parent.internal.owner'
  | 'updatedBy.parent.internal.type'
  | 'updatedBy.parent.parent.children'
  | 'updatedBy.parent.parent.id'
  | 'updatedBy.picture'
  | 'updatedBy.publishedAt'
  | 'updatedBy.remoteId'
  | 'updatedBy.remoteTypeName'
  | 'updatedBy.stage'
  | 'updatedBy.updatedAt';

type GraphCMS_HelpfulInfoFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly createdAt: InputMaybe<JSONQueryOperatorInput>;
  readonly createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly info: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly publishedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly remoteId: InputMaybe<IDQueryOperatorInput>;
  readonly remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  readonly scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  readonly stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  readonly stageNumber: InputMaybe<IntQueryOperatorInput>;
  readonly updatedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};

type GraphCMS_HelpfulInfoGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_HelpfulInfoEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<GraphCMS_HelpfulInfoGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_HelpfulInfo>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_HelpfulInfoGroupConnection_distinctArgs = {
  field: GraphCMS_HelpfulInfoFieldsEnum;
};


type GraphCMS_HelpfulInfoGroupConnection_groupArgs = {
  field: GraphCMS_HelpfulInfoFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_HelpfulInfoGroupConnection_maxArgs = {
  field: GraphCMS_HelpfulInfoFieldsEnum;
};


type GraphCMS_HelpfulInfoGroupConnection_minArgs = {
  field: GraphCMS_HelpfulInfoFieldsEnum;
};


type GraphCMS_HelpfulInfoGroupConnection_sumArgs = {
  field: GraphCMS_HelpfulInfoFieldsEnum;
};

type GraphCMS_HelpfulInfoSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_HelpfulInfoFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type GraphCMS_Info = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly createdAt: Scalars['JSON'];
  readonly createdBy: Maybe<GraphCMS_User>;
  readonly helpfulInfo: Maybe<GraphCMS_HelpfulInfo>;
  readonly id: Scalars['ID'];
  readonly image: ReadonlyArray<GraphCMS_Asset>;
  readonly infoBlock: ReadonlyArray<GraphCMS_RichText>;
  readonly internal: Internal;
  readonly intro: Maybe<GraphCMS_RichText>;
  readonly locale: GraphCMS_Locale;
  readonly parent: Maybe<Node>;
  readonly publishedAt: Maybe<Scalars['JSON']>;
  readonly publishedBy: Maybe<GraphCMS_User>;
  readonly remoteId: Scalars['ID'];
  readonly remoteTypeName: Scalars['String'];
  readonly scheduledIn: ReadonlyArray<GraphCMS_ScheduledOperation>;
  readonly slider: ReadonlyArray<GraphCMS_RichText>;
  readonly slug: Maybe<Scalars['String']>;
  readonly stage: GraphCMS_Stage;
  readonly title: Maybe<Scalars['String']>;
  readonly updatedAt: Scalars['JSON'];
  readonly updatedBy: Maybe<GraphCMS_User>;
};

type GraphCMS_InfoConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_InfoEdge>;
  readonly group: ReadonlyArray<GraphCMS_InfoGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_Info>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_InfoConnection_distinctArgs = {
  field: GraphCMS_InfoFieldsEnum;
};


type GraphCMS_InfoConnection_groupArgs = {
  field: GraphCMS_InfoFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_InfoConnection_maxArgs = {
  field: GraphCMS_InfoFieldsEnum;
};


type GraphCMS_InfoConnection_minArgs = {
  field: GraphCMS_InfoFieldsEnum;
};


type GraphCMS_InfoConnection_sumArgs = {
  field: GraphCMS_InfoFieldsEnum;
};

type GraphCMS_InfoEdge = {
  readonly next: Maybe<GraphCMS_Info>;
  readonly node: GraphCMS_Info;
  readonly previous: Maybe<GraphCMS_Info>;
};

type GraphCMS_InfoFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'createdAt'
  | 'createdBy.children'
  | 'createdBy.children.children'
  | 'createdBy.children.children.children'
  | 'createdBy.children.children.id'
  | 'createdBy.children.id'
  | 'createdBy.children.internal.content'
  | 'createdBy.children.internal.contentDigest'
  | 'createdBy.children.internal.contentFilePath'
  | 'createdBy.children.internal.description'
  | 'createdBy.children.internal.fieldOwners'
  | 'createdBy.children.internal.ignoreType'
  | 'createdBy.children.internal.mediaType'
  | 'createdBy.children.internal.owner'
  | 'createdBy.children.internal.type'
  | 'createdBy.children.parent.children'
  | 'createdBy.children.parent.id'
  | 'createdBy.createdAt'
  | 'createdBy.id'
  | 'createdBy.internal.content'
  | 'createdBy.internal.contentDigest'
  | 'createdBy.internal.contentFilePath'
  | 'createdBy.internal.description'
  | 'createdBy.internal.fieldOwners'
  | 'createdBy.internal.ignoreType'
  | 'createdBy.internal.mediaType'
  | 'createdBy.internal.owner'
  | 'createdBy.internal.type'
  | 'createdBy.isActive'
  | 'createdBy.kind'
  | 'createdBy.name'
  | 'createdBy.parent.children'
  | 'createdBy.parent.children.children'
  | 'createdBy.parent.children.id'
  | 'createdBy.parent.id'
  | 'createdBy.parent.internal.content'
  | 'createdBy.parent.internal.contentDigest'
  | 'createdBy.parent.internal.contentFilePath'
  | 'createdBy.parent.internal.description'
  | 'createdBy.parent.internal.fieldOwners'
  | 'createdBy.parent.internal.ignoreType'
  | 'createdBy.parent.internal.mediaType'
  | 'createdBy.parent.internal.owner'
  | 'createdBy.parent.internal.type'
  | 'createdBy.parent.parent.children'
  | 'createdBy.parent.parent.id'
  | 'createdBy.picture'
  | 'createdBy.publishedAt'
  | 'createdBy.remoteId'
  | 'createdBy.remoteTypeName'
  | 'createdBy.stage'
  | 'createdBy.updatedAt'
  | 'helpfulInfo.children'
  | 'helpfulInfo.children.children'
  | 'helpfulInfo.children.children.children'
  | 'helpfulInfo.children.children.id'
  | 'helpfulInfo.children.id'
  | 'helpfulInfo.children.internal.content'
  | 'helpfulInfo.children.internal.contentDigest'
  | 'helpfulInfo.children.internal.contentFilePath'
  | 'helpfulInfo.children.internal.description'
  | 'helpfulInfo.children.internal.fieldOwners'
  | 'helpfulInfo.children.internal.ignoreType'
  | 'helpfulInfo.children.internal.mediaType'
  | 'helpfulInfo.children.internal.owner'
  | 'helpfulInfo.children.internal.type'
  | 'helpfulInfo.children.parent.children'
  | 'helpfulInfo.children.parent.id'
  | 'helpfulInfo.createdAt'
  | 'helpfulInfo.createdBy.children'
  | 'helpfulInfo.createdBy.children.children'
  | 'helpfulInfo.createdBy.children.id'
  | 'helpfulInfo.createdBy.createdAt'
  | 'helpfulInfo.createdBy.id'
  | 'helpfulInfo.createdBy.internal.content'
  | 'helpfulInfo.createdBy.internal.contentDigest'
  | 'helpfulInfo.createdBy.internal.contentFilePath'
  | 'helpfulInfo.createdBy.internal.description'
  | 'helpfulInfo.createdBy.internal.fieldOwners'
  | 'helpfulInfo.createdBy.internal.ignoreType'
  | 'helpfulInfo.createdBy.internal.mediaType'
  | 'helpfulInfo.createdBy.internal.owner'
  | 'helpfulInfo.createdBy.internal.type'
  | 'helpfulInfo.createdBy.isActive'
  | 'helpfulInfo.createdBy.kind'
  | 'helpfulInfo.createdBy.name'
  | 'helpfulInfo.createdBy.parent.children'
  | 'helpfulInfo.createdBy.parent.id'
  | 'helpfulInfo.createdBy.picture'
  | 'helpfulInfo.createdBy.publishedAt'
  | 'helpfulInfo.createdBy.remoteId'
  | 'helpfulInfo.createdBy.remoteTypeName'
  | 'helpfulInfo.createdBy.stage'
  | 'helpfulInfo.createdBy.updatedAt'
  | 'helpfulInfo.id'
  | 'helpfulInfo.info.html'
  | 'helpfulInfo.info.markdown'
  | 'helpfulInfo.info.raw'
  | 'helpfulInfo.info.remoteTypeName'
  | 'helpfulInfo.info.text'
  | 'helpfulInfo.internal.content'
  | 'helpfulInfo.internal.contentDigest'
  | 'helpfulInfo.internal.contentFilePath'
  | 'helpfulInfo.internal.description'
  | 'helpfulInfo.internal.fieldOwners'
  | 'helpfulInfo.internal.ignoreType'
  | 'helpfulInfo.internal.mediaType'
  | 'helpfulInfo.internal.owner'
  | 'helpfulInfo.internal.type'
  | 'helpfulInfo.locale'
  | 'helpfulInfo.parent.children'
  | 'helpfulInfo.parent.children.children'
  | 'helpfulInfo.parent.children.id'
  | 'helpfulInfo.parent.id'
  | 'helpfulInfo.parent.internal.content'
  | 'helpfulInfo.parent.internal.contentDigest'
  | 'helpfulInfo.parent.internal.contentFilePath'
  | 'helpfulInfo.parent.internal.description'
  | 'helpfulInfo.parent.internal.fieldOwners'
  | 'helpfulInfo.parent.internal.ignoreType'
  | 'helpfulInfo.parent.internal.mediaType'
  | 'helpfulInfo.parent.internal.owner'
  | 'helpfulInfo.parent.internal.type'
  | 'helpfulInfo.parent.parent.children'
  | 'helpfulInfo.parent.parent.id'
  | 'helpfulInfo.publishedAt'
  | 'helpfulInfo.publishedBy.children'
  | 'helpfulInfo.publishedBy.children.children'
  | 'helpfulInfo.publishedBy.children.id'
  | 'helpfulInfo.publishedBy.createdAt'
  | 'helpfulInfo.publishedBy.id'
  | 'helpfulInfo.publishedBy.internal.content'
  | 'helpfulInfo.publishedBy.internal.contentDigest'
  | 'helpfulInfo.publishedBy.internal.contentFilePath'
  | 'helpfulInfo.publishedBy.internal.description'
  | 'helpfulInfo.publishedBy.internal.fieldOwners'
  | 'helpfulInfo.publishedBy.internal.ignoreType'
  | 'helpfulInfo.publishedBy.internal.mediaType'
  | 'helpfulInfo.publishedBy.internal.owner'
  | 'helpfulInfo.publishedBy.internal.type'
  | 'helpfulInfo.publishedBy.isActive'
  | 'helpfulInfo.publishedBy.kind'
  | 'helpfulInfo.publishedBy.name'
  | 'helpfulInfo.publishedBy.parent.children'
  | 'helpfulInfo.publishedBy.parent.id'
  | 'helpfulInfo.publishedBy.picture'
  | 'helpfulInfo.publishedBy.publishedAt'
  | 'helpfulInfo.publishedBy.remoteId'
  | 'helpfulInfo.publishedBy.remoteTypeName'
  | 'helpfulInfo.publishedBy.stage'
  | 'helpfulInfo.publishedBy.updatedAt'
  | 'helpfulInfo.remoteId'
  | 'helpfulInfo.remoteTypeName'
  | 'helpfulInfo.scheduledIn'
  | 'helpfulInfo.scheduledIn.children'
  | 'helpfulInfo.scheduledIn.children.children'
  | 'helpfulInfo.scheduledIn.children.id'
  | 'helpfulInfo.scheduledIn.createdAt'
  | 'helpfulInfo.scheduledIn.createdBy.children'
  | 'helpfulInfo.scheduledIn.createdBy.createdAt'
  | 'helpfulInfo.scheduledIn.createdBy.id'
  | 'helpfulInfo.scheduledIn.createdBy.isActive'
  | 'helpfulInfo.scheduledIn.createdBy.kind'
  | 'helpfulInfo.scheduledIn.createdBy.name'
  | 'helpfulInfo.scheduledIn.createdBy.picture'
  | 'helpfulInfo.scheduledIn.createdBy.publishedAt'
  | 'helpfulInfo.scheduledIn.createdBy.remoteId'
  | 'helpfulInfo.scheduledIn.createdBy.remoteTypeName'
  | 'helpfulInfo.scheduledIn.createdBy.stage'
  | 'helpfulInfo.scheduledIn.createdBy.updatedAt'
  | 'helpfulInfo.scheduledIn.description'
  | 'helpfulInfo.scheduledIn.errorMessage'
  | 'helpfulInfo.scheduledIn.id'
  | 'helpfulInfo.scheduledIn.internal.content'
  | 'helpfulInfo.scheduledIn.internal.contentDigest'
  | 'helpfulInfo.scheduledIn.internal.contentFilePath'
  | 'helpfulInfo.scheduledIn.internal.description'
  | 'helpfulInfo.scheduledIn.internal.fieldOwners'
  | 'helpfulInfo.scheduledIn.internal.ignoreType'
  | 'helpfulInfo.scheduledIn.internal.mediaType'
  | 'helpfulInfo.scheduledIn.internal.owner'
  | 'helpfulInfo.scheduledIn.internal.type'
  | 'helpfulInfo.scheduledIn.parent.children'
  | 'helpfulInfo.scheduledIn.parent.id'
  | 'helpfulInfo.scheduledIn.publishedAt'
  | 'helpfulInfo.scheduledIn.publishedBy.children'
  | 'helpfulInfo.scheduledIn.publishedBy.createdAt'
  | 'helpfulInfo.scheduledIn.publishedBy.id'
  | 'helpfulInfo.scheduledIn.publishedBy.isActive'
  | 'helpfulInfo.scheduledIn.publishedBy.kind'
  | 'helpfulInfo.scheduledIn.publishedBy.name'
  | 'helpfulInfo.scheduledIn.publishedBy.picture'
  | 'helpfulInfo.scheduledIn.publishedBy.publishedAt'
  | 'helpfulInfo.scheduledIn.publishedBy.remoteId'
  | 'helpfulInfo.scheduledIn.publishedBy.remoteTypeName'
  | 'helpfulInfo.scheduledIn.publishedBy.stage'
  | 'helpfulInfo.scheduledIn.publishedBy.updatedAt'
  | 'helpfulInfo.scheduledIn.rawPayload'
  | 'helpfulInfo.scheduledIn.release.children'
  | 'helpfulInfo.scheduledIn.release.createdAt'
  | 'helpfulInfo.scheduledIn.release.description'
  | 'helpfulInfo.scheduledIn.release.errorMessage'
  | 'helpfulInfo.scheduledIn.release.id'
  | 'helpfulInfo.scheduledIn.release.isActive'
  | 'helpfulInfo.scheduledIn.release.isImplicit'
  | 'helpfulInfo.scheduledIn.release.operations'
  | 'helpfulInfo.scheduledIn.release.publishedAt'
  | 'helpfulInfo.scheduledIn.release.releaseAt'
  | 'helpfulInfo.scheduledIn.release.remoteId'
  | 'helpfulInfo.scheduledIn.release.remoteTypeName'
  | 'helpfulInfo.scheduledIn.release.stage'
  | 'helpfulInfo.scheduledIn.release.status'
  | 'helpfulInfo.scheduledIn.release.title'
  | 'helpfulInfo.scheduledIn.release.updatedAt'
  | 'helpfulInfo.scheduledIn.remoteId'
  | 'helpfulInfo.scheduledIn.remoteTypeName'
  | 'helpfulInfo.scheduledIn.stage'
  | 'helpfulInfo.scheduledIn.status'
  | 'helpfulInfo.scheduledIn.updatedAt'
  | 'helpfulInfo.scheduledIn.updatedBy.children'
  | 'helpfulInfo.scheduledIn.updatedBy.createdAt'
  | 'helpfulInfo.scheduledIn.updatedBy.id'
  | 'helpfulInfo.scheduledIn.updatedBy.isActive'
  | 'helpfulInfo.scheduledIn.updatedBy.kind'
  | 'helpfulInfo.scheduledIn.updatedBy.name'
  | 'helpfulInfo.scheduledIn.updatedBy.picture'
  | 'helpfulInfo.scheduledIn.updatedBy.publishedAt'
  | 'helpfulInfo.scheduledIn.updatedBy.remoteId'
  | 'helpfulInfo.scheduledIn.updatedBy.remoteTypeName'
  | 'helpfulInfo.scheduledIn.updatedBy.stage'
  | 'helpfulInfo.scheduledIn.updatedBy.updatedAt'
  | 'helpfulInfo.stage'
  | 'helpfulInfo.stageNumber'
  | 'helpfulInfo.updatedAt'
  | 'helpfulInfo.updatedBy.children'
  | 'helpfulInfo.updatedBy.children.children'
  | 'helpfulInfo.updatedBy.children.id'
  | 'helpfulInfo.updatedBy.createdAt'
  | 'helpfulInfo.updatedBy.id'
  | 'helpfulInfo.updatedBy.internal.content'
  | 'helpfulInfo.updatedBy.internal.contentDigest'
  | 'helpfulInfo.updatedBy.internal.contentFilePath'
  | 'helpfulInfo.updatedBy.internal.description'
  | 'helpfulInfo.updatedBy.internal.fieldOwners'
  | 'helpfulInfo.updatedBy.internal.ignoreType'
  | 'helpfulInfo.updatedBy.internal.mediaType'
  | 'helpfulInfo.updatedBy.internal.owner'
  | 'helpfulInfo.updatedBy.internal.type'
  | 'helpfulInfo.updatedBy.isActive'
  | 'helpfulInfo.updatedBy.kind'
  | 'helpfulInfo.updatedBy.name'
  | 'helpfulInfo.updatedBy.parent.children'
  | 'helpfulInfo.updatedBy.parent.id'
  | 'helpfulInfo.updatedBy.picture'
  | 'helpfulInfo.updatedBy.publishedAt'
  | 'helpfulInfo.updatedBy.remoteId'
  | 'helpfulInfo.updatedBy.remoteTypeName'
  | 'helpfulInfo.updatedBy.stage'
  | 'helpfulInfo.updatedBy.updatedAt'
  | 'id'
  | 'image'
  | 'image.children'
  | 'image.children.children'
  | 'image.children.children.children'
  | 'image.children.children.id'
  | 'image.children.id'
  | 'image.children.internal.content'
  | 'image.children.internal.contentDigest'
  | 'image.children.internal.contentFilePath'
  | 'image.children.internal.description'
  | 'image.children.internal.fieldOwners'
  | 'image.children.internal.ignoreType'
  | 'image.children.internal.mediaType'
  | 'image.children.internal.owner'
  | 'image.children.internal.type'
  | 'image.children.parent.children'
  | 'image.children.parent.id'
  | 'image.createdAt'
  | 'image.createdBy.children'
  | 'image.createdBy.children.children'
  | 'image.createdBy.children.id'
  | 'image.createdBy.createdAt'
  | 'image.createdBy.id'
  | 'image.createdBy.internal.content'
  | 'image.createdBy.internal.contentDigest'
  | 'image.createdBy.internal.contentFilePath'
  | 'image.createdBy.internal.description'
  | 'image.createdBy.internal.fieldOwners'
  | 'image.createdBy.internal.ignoreType'
  | 'image.createdBy.internal.mediaType'
  | 'image.createdBy.internal.owner'
  | 'image.createdBy.internal.type'
  | 'image.createdBy.isActive'
  | 'image.createdBy.kind'
  | 'image.createdBy.name'
  | 'image.createdBy.parent.children'
  | 'image.createdBy.parent.id'
  | 'image.createdBy.picture'
  | 'image.createdBy.publishedAt'
  | 'image.createdBy.remoteId'
  | 'image.createdBy.remoteTypeName'
  | 'image.createdBy.stage'
  | 'image.createdBy.updatedAt'
  | 'image.fileName'
  | 'image.handle'
  | 'image.height'
  | 'image.iconDevelopmentOption'
  | 'image.iconDevelopmentOption.children'
  | 'image.iconDevelopmentOption.children.children'
  | 'image.iconDevelopmentOption.children.id'
  | 'image.iconDevelopmentOption.createdAt'
  | 'image.iconDevelopmentOption.createdBy.children'
  | 'image.iconDevelopmentOption.createdBy.createdAt'
  | 'image.iconDevelopmentOption.createdBy.id'
  | 'image.iconDevelopmentOption.createdBy.isActive'
  | 'image.iconDevelopmentOption.createdBy.kind'
  | 'image.iconDevelopmentOption.createdBy.name'
  | 'image.iconDevelopmentOption.createdBy.picture'
  | 'image.iconDevelopmentOption.createdBy.publishedAt'
  | 'image.iconDevelopmentOption.createdBy.remoteId'
  | 'image.iconDevelopmentOption.createdBy.remoteTypeName'
  | 'image.iconDevelopmentOption.createdBy.stage'
  | 'image.iconDevelopmentOption.createdBy.updatedAt'
  | 'image.iconDevelopmentOption.fundingOptions.html'
  | 'image.iconDevelopmentOption.fundingOptions.markdown'
  | 'image.iconDevelopmentOption.fundingOptions.raw'
  | 'image.iconDevelopmentOption.fundingOptions.remoteTypeName'
  | 'image.iconDevelopmentOption.fundingOptions.text'
  | 'image.iconDevelopmentOption.gatsbyPath'
  | 'image.iconDevelopmentOption.icon.children'
  | 'image.iconDevelopmentOption.icon.createdAt'
  | 'image.iconDevelopmentOption.icon.fileName'
  | 'image.iconDevelopmentOption.icon.handle'
  | 'image.iconDevelopmentOption.icon.height'
  | 'image.iconDevelopmentOption.icon.iconDevelopmentOption'
  | 'image.iconDevelopmentOption.icon.id'
  | 'image.iconDevelopmentOption.icon.imageInfo'
  | 'image.iconDevelopmentOption.icon.informationMainImageDevelopmentOption'
  | 'image.iconDevelopmentOption.icon.locale'
  | 'image.iconDevelopmentOption.icon.mimeType'
  | 'image.iconDevelopmentOption.icon.publishedAt'
  | 'image.iconDevelopmentOption.icon.remoteId'
  | 'image.iconDevelopmentOption.icon.remoteTypeName'
  | 'image.iconDevelopmentOption.icon.scheduledIn'
  | 'image.iconDevelopmentOption.icon.size'
  | 'image.iconDevelopmentOption.icon.stage'
  | 'image.iconDevelopmentOption.icon.updatedAt'
  | 'image.iconDevelopmentOption.icon.url'
  | 'image.iconDevelopmentOption.icon.width'
  | 'image.iconDevelopmentOption.id'
  | 'image.iconDevelopmentOption.informationMainImage.children'
  | 'image.iconDevelopmentOption.informationMainImage.createdAt'
  | 'image.iconDevelopmentOption.informationMainImage.fileName'
  | 'image.iconDevelopmentOption.informationMainImage.handle'
  | 'image.iconDevelopmentOption.informationMainImage.height'
  | 'image.iconDevelopmentOption.informationMainImage.iconDevelopmentOption'
  | 'image.iconDevelopmentOption.informationMainImage.id'
  | 'image.iconDevelopmentOption.informationMainImage.imageInfo'
  | 'image.iconDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption'
  | 'image.iconDevelopmentOption.informationMainImage.locale'
  | 'image.iconDevelopmentOption.informationMainImage.mimeType'
  | 'image.iconDevelopmentOption.informationMainImage.publishedAt'
  | 'image.iconDevelopmentOption.informationMainImage.remoteId'
  | 'image.iconDevelopmentOption.informationMainImage.remoteTypeName'
  | 'image.iconDevelopmentOption.informationMainImage.scheduledIn'
  | 'image.iconDevelopmentOption.informationMainImage.size'
  | 'image.iconDevelopmentOption.informationMainImage.stage'
  | 'image.iconDevelopmentOption.informationMainImage.updatedAt'
  | 'image.iconDevelopmentOption.informationMainImage.url'
  | 'image.iconDevelopmentOption.informationMainImage.width'
  | 'image.iconDevelopmentOption.internal.content'
  | 'image.iconDevelopmentOption.internal.contentDigest'
  | 'image.iconDevelopmentOption.internal.contentFilePath'
  | 'image.iconDevelopmentOption.internal.description'
  | 'image.iconDevelopmentOption.internal.fieldOwners'
  | 'image.iconDevelopmentOption.internal.ignoreType'
  | 'image.iconDevelopmentOption.internal.mediaType'
  | 'image.iconDevelopmentOption.internal.owner'
  | 'image.iconDevelopmentOption.internal.type'
  | 'image.iconDevelopmentOption.intro'
  | 'image.iconDevelopmentOption.locale'
  | 'image.iconDevelopmentOption.mainText.html'
  | 'image.iconDevelopmentOption.mainText.markdown'
  | 'image.iconDevelopmentOption.mainText.raw'
  | 'image.iconDevelopmentOption.mainText.remoteTypeName'
  | 'image.iconDevelopmentOption.mainText.text'
  | 'image.iconDevelopmentOption.modelSwot.children'
  | 'image.iconDevelopmentOption.modelSwot.createdAt'
  | 'image.iconDevelopmentOption.modelSwot.developmentOption'
  | 'image.iconDevelopmentOption.modelSwot.id'
  | 'image.iconDevelopmentOption.modelSwot.locale'
  | 'image.iconDevelopmentOption.modelSwot.publishedAt'
  | 'image.iconDevelopmentOption.modelSwot.remoteId'
  | 'image.iconDevelopmentOption.modelSwot.remoteTypeName'
  | 'image.iconDevelopmentOption.modelSwot.scheduledIn'
  | 'image.iconDevelopmentOption.modelSwot.stage'
  | 'image.iconDevelopmentOption.modelSwot.updatedAt'
  | 'image.iconDevelopmentOption.parent.children'
  | 'image.iconDevelopmentOption.parent.id'
  | 'image.iconDevelopmentOption.publishedAt'
  | 'image.iconDevelopmentOption.publishedBy.children'
  | 'image.iconDevelopmentOption.publishedBy.createdAt'
  | 'image.iconDevelopmentOption.publishedBy.id'
  | 'image.iconDevelopmentOption.publishedBy.isActive'
  | 'image.iconDevelopmentOption.publishedBy.kind'
  | 'image.iconDevelopmentOption.publishedBy.name'
  | 'image.iconDevelopmentOption.publishedBy.picture'
  | 'image.iconDevelopmentOption.publishedBy.publishedAt'
  | 'image.iconDevelopmentOption.publishedBy.remoteId'
  | 'image.iconDevelopmentOption.publishedBy.remoteTypeName'
  | 'image.iconDevelopmentOption.publishedBy.stage'
  | 'image.iconDevelopmentOption.publishedBy.updatedAt'
  | 'image.iconDevelopmentOption.remoteId'
  | 'image.iconDevelopmentOption.remoteTypeName'
  | 'image.iconDevelopmentOption.scheduledIn'
  | 'image.iconDevelopmentOption.scheduledIn.children'
  | 'image.iconDevelopmentOption.scheduledIn.createdAt'
  | 'image.iconDevelopmentOption.scheduledIn.description'
  | 'image.iconDevelopmentOption.scheduledIn.errorMessage'
  | 'image.iconDevelopmentOption.scheduledIn.id'
  | 'image.iconDevelopmentOption.scheduledIn.publishedAt'
  | 'image.iconDevelopmentOption.scheduledIn.rawPayload'
  | 'image.iconDevelopmentOption.scheduledIn.remoteId'
  | 'image.iconDevelopmentOption.scheduledIn.remoteTypeName'
  | 'image.iconDevelopmentOption.scheduledIn.stage'
  | 'image.iconDevelopmentOption.scheduledIn.status'
  | 'image.iconDevelopmentOption.scheduledIn.updatedAt'
  | 'image.iconDevelopmentOption.slug'
  | 'image.iconDevelopmentOption.stage'
  | 'image.iconDevelopmentOption.title'
  | 'image.iconDevelopmentOption.updatedAt'
  | 'image.iconDevelopmentOption.updatedBy.children'
  | 'image.iconDevelopmentOption.updatedBy.createdAt'
  | 'image.iconDevelopmentOption.updatedBy.id'
  | 'image.iconDevelopmentOption.updatedBy.isActive'
  | 'image.iconDevelopmentOption.updatedBy.kind'
  | 'image.iconDevelopmentOption.updatedBy.name'
  | 'image.iconDevelopmentOption.updatedBy.picture'
  | 'image.iconDevelopmentOption.updatedBy.publishedAt'
  | 'image.iconDevelopmentOption.updatedBy.remoteId'
  | 'image.iconDevelopmentOption.updatedBy.remoteTypeName'
  | 'image.iconDevelopmentOption.updatedBy.stage'
  | 'image.iconDevelopmentOption.updatedBy.updatedAt'
  | 'image.id'
  | 'image.imageInfo'
  | 'image.imageInfo.children'
  | 'image.imageInfo.children.children'
  | 'image.imageInfo.children.id'
  | 'image.imageInfo.createdAt'
  | 'image.imageInfo.createdBy.children'
  | 'image.imageInfo.createdBy.createdAt'
  | 'image.imageInfo.createdBy.id'
  | 'image.imageInfo.createdBy.isActive'
  | 'image.imageInfo.createdBy.kind'
  | 'image.imageInfo.createdBy.name'
  | 'image.imageInfo.createdBy.picture'
  | 'image.imageInfo.createdBy.publishedAt'
  | 'image.imageInfo.createdBy.remoteId'
  | 'image.imageInfo.createdBy.remoteTypeName'
  | 'image.imageInfo.createdBy.stage'
  | 'image.imageInfo.createdBy.updatedAt'
  | 'image.imageInfo.helpfulInfo.children'
  | 'image.imageInfo.helpfulInfo.createdAt'
  | 'image.imageInfo.helpfulInfo.id'
  | 'image.imageInfo.helpfulInfo.locale'
  | 'image.imageInfo.helpfulInfo.publishedAt'
  | 'image.imageInfo.helpfulInfo.remoteId'
  | 'image.imageInfo.helpfulInfo.remoteTypeName'
  | 'image.imageInfo.helpfulInfo.scheduledIn'
  | 'image.imageInfo.helpfulInfo.stage'
  | 'image.imageInfo.helpfulInfo.stageNumber'
  | 'image.imageInfo.helpfulInfo.updatedAt'
  | 'image.imageInfo.id'
  | 'image.imageInfo.image'
  | 'image.imageInfo.image.children'
  | 'image.imageInfo.image.createdAt'
  | 'image.imageInfo.image.fileName'
  | 'image.imageInfo.image.handle'
  | 'image.imageInfo.image.height'
  | 'image.imageInfo.image.iconDevelopmentOption'
  | 'image.imageInfo.image.id'
  | 'image.imageInfo.image.imageInfo'
  | 'image.imageInfo.image.informationMainImageDevelopmentOption'
  | 'image.imageInfo.image.locale'
  | 'image.imageInfo.image.mimeType'
  | 'image.imageInfo.image.publishedAt'
  | 'image.imageInfo.image.remoteId'
  | 'image.imageInfo.image.remoteTypeName'
  | 'image.imageInfo.image.scheduledIn'
  | 'image.imageInfo.image.size'
  | 'image.imageInfo.image.stage'
  | 'image.imageInfo.image.updatedAt'
  | 'image.imageInfo.image.url'
  | 'image.imageInfo.image.width'
  | 'image.imageInfo.infoBlock'
  | 'image.imageInfo.infoBlock.html'
  | 'image.imageInfo.infoBlock.markdown'
  | 'image.imageInfo.infoBlock.raw'
  | 'image.imageInfo.infoBlock.remoteTypeName'
  | 'image.imageInfo.infoBlock.text'
  | 'image.imageInfo.internal.content'
  | 'image.imageInfo.internal.contentDigest'
  | 'image.imageInfo.internal.contentFilePath'
  | 'image.imageInfo.internal.description'
  | 'image.imageInfo.internal.fieldOwners'
  | 'image.imageInfo.internal.ignoreType'
  | 'image.imageInfo.internal.mediaType'
  | 'image.imageInfo.internal.owner'
  | 'image.imageInfo.internal.type'
  | 'image.imageInfo.intro.html'
  | 'image.imageInfo.intro.markdown'
  | 'image.imageInfo.intro.raw'
  | 'image.imageInfo.intro.remoteTypeName'
  | 'image.imageInfo.intro.text'
  | 'image.imageInfo.locale'
  | 'image.imageInfo.parent.children'
  | 'image.imageInfo.parent.id'
  | 'image.imageInfo.publishedAt'
  | 'image.imageInfo.publishedBy.children'
  | 'image.imageInfo.publishedBy.createdAt'
  | 'image.imageInfo.publishedBy.id'
  | 'image.imageInfo.publishedBy.isActive'
  | 'image.imageInfo.publishedBy.kind'
  | 'image.imageInfo.publishedBy.name'
  | 'image.imageInfo.publishedBy.picture'
  | 'image.imageInfo.publishedBy.publishedAt'
  | 'image.imageInfo.publishedBy.remoteId'
  | 'image.imageInfo.publishedBy.remoteTypeName'
  | 'image.imageInfo.publishedBy.stage'
  | 'image.imageInfo.publishedBy.updatedAt'
  | 'image.imageInfo.remoteId'
  | 'image.imageInfo.remoteTypeName'
  | 'image.imageInfo.scheduledIn'
  | 'image.imageInfo.scheduledIn.children'
  | 'image.imageInfo.scheduledIn.createdAt'
  | 'image.imageInfo.scheduledIn.description'
  | 'image.imageInfo.scheduledIn.errorMessage'
  | 'image.imageInfo.scheduledIn.id'
  | 'image.imageInfo.scheduledIn.publishedAt'
  | 'image.imageInfo.scheduledIn.rawPayload'
  | 'image.imageInfo.scheduledIn.remoteId'
  | 'image.imageInfo.scheduledIn.remoteTypeName'
  | 'image.imageInfo.scheduledIn.stage'
  | 'image.imageInfo.scheduledIn.status'
  | 'image.imageInfo.scheduledIn.updatedAt'
  | 'image.imageInfo.slider'
  | 'image.imageInfo.slider.html'
  | 'image.imageInfo.slider.markdown'
  | 'image.imageInfo.slider.raw'
  | 'image.imageInfo.slider.remoteTypeName'
  | 'image.imageInfo.slider.text'
  | 'image.imageInfo.slug'
  | 'image.imageInfo.stage'
  | 'image.imageInfo.title'
  | 'image.imageInfo.updatedAt'
  | 'image.imageInfo.updatedBy.children'
  | 'image.imageInfo.updatedBy.createdAt'
  | 'image.imageInfo.updatedBy.id'
  | 'image.imageInfo.updatedBy.isActive'
  | 'image.imageInfo.updatedBy.kind'
  | 'image.imageInfo.updatedBy.name'
  | 'image.imageInfo.updatedBy.picture'
  | 'image.imageInfo.updatedBy.publishedAt'
  | 'image.imageInfo.updatedBy.remoteId'
  | 'image.imageInfo.updatedBy.remoteTypeName'
  | 'image.imageInfo.updatedBy.stage'
  | 'image.imageInfo.updatedBy.updatedAt'
  | 'image.informationMainImageDevelopmentOption'
  | 'image.informationMainImageDevelopmentOption.children'
  | 'image.informationMainImageDevelopmentOption.children.children'
  | 'image.informationMainImageDevelopmentOption.children.id'
  | 'image.informationMainImageDevelopmentOption.createdAt'
  | 'image.informationMainImageDevelopmentOption.createdBy.children'
  | 'image.informationMainImageDevelopmentOption.createdBy.createdAt'
  | 'image.informationMainImageDevelopmentOption.createdBy.id'
  | 'image.informationMainImageDevelopmentOption.createdBy.isActive'
  | 'image.informationMainImageDevelopmentOption.createdBy.kind'
  | 'image.informationMainImageDevelopmentOption.createdBy.name'
  | 'image.informationMainImageDevelopmentOption.createdBy.picture'
  | 'image.informationMainImageDevelopmentOption.createdBy.publishedAt'
  | 'image.informationMainImageDevelopmentOption.createdBy.remoteId'
  | 'image.informationMainImageDevelopmentOption.createdBy.remoteTypeName'
  | 'image.informationMainImageDevelopmentOption.createdBy.stage'
  | 'image.informationMainImageDevelopmentOption.createdBy.updatedAt'
  | 'image.informationMainImageDevelopmentOption.fundingOptions.html'
  | 'image.informationMainImageDevelopmentOption.fundingOptions.markdown'
  | 'image.informationMainImageDevelopmentOption.fundingOptions.raw'
  | 'image.informationMainImageDevelopmentOption.fundingOptions.remoteTypeName'
  | 'image.informationMainImageDevelopmentOption.fundingOptions.text'
  | 'image.informationMainImageDevelopmentOption.gatsbyPath'
  | 'image.informationMainImageDevelopmentOption.icon.children'
  | 'image.informationMainImageDevelopmentOption.icon.createdAt'
  | 'image.informationMainImageDevelopmentOption.icon.fileName'
  | 'image.informationMainImageDevelopmentOption.icon.handle'
  | 'image.informationMainImageDevelopmentOption.icon.height'
  | 'image.informationMainImageDevelopmentOption.icon.iconDevelopmentOption'
  | 'image.informationMainImageDevelopmentOption.icon.id'
  | 'image.informationMainImageDevelopmentOption.icon.imageInfo'
  | 'image.informationMainImageDevelopmentOption.icon.informationMainImageDevelopmentOption'
  | 'image.informationMainImageDevelopmentOption.icon.locale'
  | 'image.informationMainImageDevelopmentOption.icon.mimeType'
  | 'image.informationMainImageDevelopmentOption.icon.publishedAt'
  | 'image.informationMainImageDevelopmentOption.icon.remoteId'
  | 'image.informationMainImageDevelopmentOption.icon.remoteTypeName'
  | 'image.informationMainImageDevelopmentOption.icon.scheduledIn'
  | 'image.informationMainImageDevelopmentOption.icon.size'
  | 'image.informationMainImageDevelopmentOption.icon.stage'
  | 'image.informationMainImageDevelopmentOption.icon.updatedAt'
  | 'image.informationMainImageDevelopmentOption.icon.url'
  | 'image.informationMainImageDevelopmentOption.icon.width'
  | 'image.informationMainImageDevelopmentOption.id'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.children'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.createdAt'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.fileName'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.handle'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.height'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.iconDevelopmentOption'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.id'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.imageInfo'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.informationMainImageDevelopmentOption'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.locale'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.mimeType'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.publishedAt'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.remoteId'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.remoteTypeName'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.scheduledIn'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.size'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.stage'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.updatedAt'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.url'
  | 'image.informationMainImageDevelopmentOption.informationMainImage.width'
  | 'image.informationMainImageDevelopmentOption.internal.content'
  | 'image.informationMainImageDevelopmentOption.internal.contentDigest'
  | 'image.informationMainImageDevelopmentOption.internal.contentFilePath'
  | 'image.informationMainImageDevelopmentOption.internal.description'
  | 'image.informationMainImageDevelopmentOption.internal.fieldOwners'
  | 'image.informationMainImageDevelopmentOption.internal.ignoreType'
  | 'image.informationMainImageDevelopmentOption.internal.mediaType'
  | 'image.informationMainImageDevelopmentOption.internal.owner'
  | 'image.informationMainImageDevelopmentOption.internal.type'
  | 'image.informationMainImageDevelopmentOption.intro'
  | 'image.informationMainImageDevelopmentOption.locale'
  | 'image.informationMainImageDevelopmentOption.mainText.html'
  | 'image.informationMainImageDevelopmentOption.mainText.markdown'
  | 'image.informationMainImageDevelopmentOption.mainText.raw'
  | 'image.informationMainImageDevelopmentOption.mainText.remoteTypeName'
  | 'image.informationMainImageDevelopmentOption.mainText.text'
  | 'image.informationMainImageDevelopmentOption.modelSwot.children'
  | 'image.informationMainImageDevelopmentOption.modelSwot.createdAt'
  | 'image.informationMainImageDevelopmentOption.modelSwot.developmentOption'
  | 'image.informationMainImageDevelopmentOption.modelSwot.id'
  | 'image.informationMainImageDevelopmentOption.modelSwot.locale'
  | 'image.informationMainImageDevelopmentOption.modelSwot.publishedAt'
  | 'image.informationMainImageDevelopmentOption.modelSwot.remoteId'
  | 'image.informationMainImageDevelopmentOption.modelSwot.remoteTypeName'
  | 'image.informationMainImageDevelopmentOption.modelSwot.scheduledIn'
  | 'image.informationMainImageDevelopmentOption.modelSwot.stage'
  | 'image.informationMainImageDevelopmentOption.modelSwot.updatedAt'
  | 'image.informationMainImageDevelopmentOption.parent.children'
  | 'image.informationMainImageDevelopmentOption.parent.id'
  | 'image.informationMainImageDevelopmentOption.publishedAt'
  | 'image.informationMainImageDevelopmentOption.publishedBy.children'
  | 'image.informationMainImageDevelopmentOption.publishedBy.createdAt'
  | 'image.informationMainImageDevelopmentOption.publishedBy.id'
  | 'image.informationMainImageDevelopmentOption.publishedBy.isActive'
  | 'image.informationMainImageDevelopmentOption.publishedBy.kind'
  | 'image.informationMainImageDevelopmentOption.publishedBy.name'
  | 'image.informationMainImageDevelopmentOption.publishedBy.picture'
  | 'image.informationMainImageDevelopmentOption.publishedBy.publishedAt'
  | 'image.informationMainImageDevelopmentOption.publishedBy.remoteId'
  | 'image.informationMainImageDevelopmentOption.publishedBy.remoteTypeName'
  | 'image.informationMainImageDevelopmentOption.publishedBy.stage'
  | 'image.informationMainImageDevelopmentOption.publishedBy.updatedAt'
  | 'image.informationMainImageDevelopmentOption.remoteId'
  | 'image.informationMainImageDevelopmentOption.remoteTypeName'
  | 'image.informationMainImageDevelopmentOption.scheduledIn'
  | 'image.informationMainImageDevelopmentOption.scheduledIn.children'
  | 'image.informationMainImageDevelopmentOption.scheduledIn.createdAt'
  | 'image.informationMainImageDevelopmentOption.scheduledIn.description'
  | 'image.informationMainImageDevelopmentOption.scheduledIn.errorMessage'
  | 'image.informationMainImageDevelopmentOption.scheduledIn.id'
  | 'image.informationMainImageDevelopmentOption.scheduledIn.publishedAt'
  | 'image.informationMainImageDevelopmentOption.scheduledIn.rawPayload'
  | 'image.informationMainImageDevelopmentOption.scheduledIn.remoteId'
  | 'image.informationMainImageDevelopmentOption.scheduledIn.remoteTypeName'
  | 'image.informationMainImageDevelopmentOption.scheduledIn.stage'
  | 'image.informationMainImageDevelopmentOption.scheduledIn.status'
  | 'image.informationMainImageDevelopmentOption.scheduledIn.updatedAt'
  | 'image.informationMainImageDevelopmentOption.slug'
  | 'image.informationMainImageDevelopmentOption.stage'
  | 'image.informationMainImageDevelopmentOption.title'
  | 'image.informationMainImageDevelopmentOption.updatedAt'
  | 'image.informationMainImageDevelopmentOption.updatedBy.children'
  | 'image.informationMainImageDevelopmentOption.updatedBy.createdAt'
  | 'image.informationMainImageDevelopmentOption.updatedBy.id'
  | 'image.informationMainImageDevelopmentOption.updatedBy.isActive'
  | 'image.informationMainImageDevelopmentOption.updatedBy.kind'
  | 'image.informationMainImageDevelopmentOption.updatedBy.name'
  | 'image.informationMainImageDevelopmentOption.updatedBy.picture'
  | 'image.informationMainImageDevelopmentOption.updatedBy.publishedAt'
  | 'image.informationMainImageDevelopmentOption.updatedBy.remoteId'
  | 'image.informationMainImageDevelopmentOption.updatedBy.remoteTypeName'
  | 'image.informationMainImageDevelopmentOption.updatedBy.stage'
  | 'image.informationMainImageDevelopmentOption.updatedBy.updatedAt'
  | 'image.internal.content'
  | 'image.internal.contentDigest'
  | 'image.internal.contentFilePath'
  | 'image.internal.description'
  | 'image.internal.fieldOwners'
  | 'image.internal.ignoreType'
  | 'image.internal.mediaType'
  | 'image.internal.owner'
  | 'image.internal.type'
  | 'image.locale'
  | 'image.mimeType'
  | 'image.parent.children'
  | 'image.parent.children.children'
  | 'image.parent.children.id'
  | 'image.parent.id'
  | 'image.parent.internal.content'
  | 'image.parent.internal.contentDigest'
  | 'image.parent.internal.contentFilePath'
  | 'image.parent.internal.description'
  | 'image.parent.internal.fieldOwners'
  | 'image.parent.internal.ignoreType'
  | 'image.parent.internal.mediaType'
  | 'image.parent.internal.owner'
  | 'image.parent.internal.type'
  | 'image.parent.parent.children'
  | 'image.parent.parent.id'
  | 'image.publishedAt'
  | 'image.publishedBy.children'
  | 'image.publishedBy.children.children'
  | 'image.publishedBy.children.id'
  | 'image.publishedBy.createdAt'
  | 'image.publishedBy.id'
  | 'image.publishedBy.internal.content'
  | 'image.publishedBy.internal.contentDigest'
  | 'image.publishedBy.internal.contentFilePath'
  | 'image.publishedBy.internal.description'
  | 'image.publishedBy.internal.fieldOwners'
  | 'image.publishedBy.internal.ignoreType'
  | 'image.publishedBy.internal.mediaType'
  | 'image.publishedBy.internal.owner'
  | 'image.publishedBy.internal.type'
  | 'image.publishedBy.isActive'
  | 'image.publishedBy.kind'
  | 'image.publishedBy.name'
  | 'image.publishedBy.parent.children'
  | 'image.publishedBy.parent.id'
  | 'image.publishedBy.picture'
  | 'image.publishedBy.publishedAt'
  | 'image.publishedBy.remoteId'
  | 'image.publishedBy.remoteTypeName'
  | 'image.publishedBy.stage'
  | 'image.publishedBy.updatedAt'
  | 'image.remoteId'
  | 'image.remoteTypeName'
  | 'image.scheduledIn'
  | 'image.scheduledIn.children'
  | 'image.scheduledIn.children.children'
  | 'image.scheduledIn.children.id'
  | 'image.scheduledIn.createdAt'
  | 'image.scheduledIn.createdBy.children'
  | 'image.scheduledIn.createdBy.createdAt'
  | 'image.scheduledIn.createdBy.id'
  | 'image.scheduledIn.createdBy.isActive'
  | 'image.scheduledIn.createdBy.kind'
  | 'image.scheduledIn.createdBy.name'
  | 'image.scheduledIn.createdBy.picture'
  | 'image.scheduledIn.createdBy.publishedAt'
  | 'image.scheduledIn.createdBy.remoteId'
  | 'image.scheduledIn.createdBy.remoteTypeName'
  | 'image.scheduledIn.createdBy.stage'
  | 'image.scheduledIn.createdBy.updatedAt'
  | 'image.scheduledIn.description'
  | 'image.scheduledIn.errorMessage'
  | 'image.scheduledIn.id'
  | 'image.scheduledIn.internal.content'
  | 'image.scheduledIn.internal.contentDigest'
  | 'image.scheduledIn.internal.contentFilePath'
  | 'image.scheduledIn.internal.description'
  | 'image.scheduledIn.internal.fieldOwners'
  | 'image.scheduledIn.internal.ignoreType'
  | 'image.scheduledIn.internal.mediaType'
  | 'image.scheduledIn.internal.owner'
  | 'image.scheduledIn.internal.type'
  | 'image.scheduledIn.parent.children'
  | 'image.scheduledIn.parent.id'
  | 'image.scheduledIn.publishedAt'
  | 'image.scheduledIn.publishedBy.children'
  | 'image.scheduledIn.publishedBy.createdAt'
  | 'image.scheduledIn.publishedBy.id'
  | 'image.scheduledIn.publishedBy.isActive'
  | 'image.scheduledIn.publishedBy.kind'
  | 'image.scheduledIn.publishedBy.name'
  | 'image.scheduledIn.publishedBy.picture'
  | 'image.scheduledIn.publishedBy.publishedAt'
  | 'image.scheduledIn.publishedBy.remoteId'
  | 'image.scheduledIn.publishedBy.remoteTypeName'
  | 'image.scheduledIn.publishedBy.stage'
  | 'image.scheduledIn.publishedBy.updatedAt'
  | 'image.scheduledIn.rawPayload'
  | 'image.scheduledIn.release.children'
  | 'image.scheduledIn.release.createdAt'
  | 'image.scheduledIn.release.description'
  | 'image.scheduledIn.release.errorMessage'
  | 'image.scheduledIn.release.id'
  | 'image.scheduledIn.release.isActive'
  | 'image.scheduledIn.release.isImplicit'
  | 'image.scheduledIn.release.operations'
  | 'image.scheduledIn.release.publishedAt'
  | 'image.scheduledIn.release.releaseAt'
  | 'image.scheduledIn.release.remoteId'
  | 'image.scheduledIn.release.remoteTypeName'
  | 'image.scheduledIn.release.stage'
  | 'image.scheduledIn.release.status'
  | 'image.scheduledIn.release.title'
  | 'image.scheduledIn.release.updatedAt'
  | 'image.scheduledIn.remoteId'
  | 'image.scheduledIn.remoteTypeName'
  | 'image.scheduledIn.stage'
  | 'image.scheduledIn.status'
  | 'image.scheduledIn.updatedAt'
  | 'image.scheduledIn.updatedBy.children'
  | 'image.scheduledIn.updatedBy.createdAt'
  | 'image.scheduledIn.updatedBy.id'
  | 'image.scheduledIn.updatedBy.isActive'
  | 'image.scheduledIn.updatedBy.kind'
  | 'image.scheduledIn.updatedBy.name'
  | 'image.scheduledIn.updatedBy.picture'
  | 'image.scheduledIn.updatedBy.publishedAt'
  | 'image.scheduledIn.updatedBy.remoteId'
  | 'image.scheduledIn.updatedBy.remoteTypeName'
  | 'image.scheduledIn.updatedBy.stage'
  | 'image.scheduledIn.updatedBy.updatedAt'
  | 'image.size'
  | 'image.stage'
  | 'image.updatedAt'
  | 'image.updatedBy.children'
  | 'image.updatedBy.children.children'
  | 'image.updatedBy.children.id'
  | 'image.updatedBy.createdAt'
  | 'image.updatedBy.id'
  | 'image.updatedBy.internal.content'
  | 'image.updatedBy.internal.contentDigest'
  | 'image.updatedBy.internal.contentFilePath'
  | 'image.updatedBy.internal.description'
  | 'image.updatedBy.internal.fieldOwners'
  | 'image.updatedBy.internal.ignoreType'
  | 'image.updatedBy.internal.mediaType'
  | 'image.updatedBy.internal.owner'
  | 'image.updatedBy.internal.type'
  | 'image.updatedBy.isActive'
  | 'image.updatedBy.kind'
  | 'image.updatedBy.name'
  | 'image.updatedBy.parent.children'
  | 'image.updatedBy.parent.id'
  | 'image.updatedBy.picture'
  | 'image.updatedBy.publishedAt'
  | 'image.updatedBy.remoteId'
  | 'image.updatedBy.remoteTypeName'
  | 'image.updatedBy.stage'
  | 'image.updatedBy.updatedAt'
  | 'image.url'
  | 'image.width'
  | 'infoBlock'
  | 'infoBlock.html'
  | 'infoBlock.markdown'
  | 'infoBlock.raw'
  | 'infoBlock.remoteTypeName'
  | 'infoBlock.text'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'intro.html'
  | 'intro.markdown'
  | 'intro.raw'
  | 'intro.remoteTypeName'
  | 'intro.text'
  | 'locale'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'publishedAt'
  | 'publishedBy.children'
  | 'publishedBy.children.children'
  | 'publishedBy.children.children.children'
  | 'publishedBy.children.children.id'
  | 'publishedBy.children.id'
  | 'publishedBy.children.internal.content'
  | 'publishedBy.children.internal.contentDigest'
  | 'publishedBy.children.internal.contentFilePath'
  | 'publishedBy.children.internal.description'
  | 'publishedBy.children.internal.fieldOwners'
  | 'publishedBy.children.internal.ignoreType'
  | 'publishedBy.children.internal.mediaType'
  | 'publishedBy.children.internal.owner'
  | 'publishedBy.children.internal.type'
  | 'publishedBy.children.parent.children'
  | 'publishedBy.children.parent.id'
  | 'publishedBy.createdAt'
  | 'publishedBy.id'
  | 'publishedBy.internal.content'
  | 'publishedBy.internal.contentDigest'
  | 'publishedBy.internal.contentFilePath'
  | 'publishedBy.internal.description'
  | 'publishedBy.internal.fieldOwners'
  | 'publishedBy.internal.ignoreType'
  | 'publishedBy.internal.mediaType'
  | 'publishedBy.internal.owner'
  | 'publishedBy.internal.type'
  | 'publishedBy.isActive'
  | 'publishedBy.kind'
  | 'publishedBy.name'
  | 'publishedBy.parent.children'
  | 'publishedBy.parent.children.children'
  | 'publishedBy.parent.children.id'
  | 'publishedBy.parent.id'
  | 'publishedBy.parent.internal.content'
  | 'publishedBy.parent.internal.contentDigest'
  | 'publishedBy.parent.internal.contentFilePath'
  | 'publishedBy.parent.internal.description'
  | 'publishedBy.parent.internal.fieldOwners'
  | 'publishedBy.parent.internal.ignoreType'
  | 'publishedBy.parent.internal.mediaType'
  | 'publishedBy.parent.internal.owner'
  | 'publishedBy.parent.internal.type'
  | 'publishedBy.parent.parent.children'
  | 'publishedBy.parent.parent.id'
  | 'publishedBy.picture'
  | 'publishedBy.publishedAt'
  | 'publishedBy.remoteId'
  | 'publishedBy.remoteTypeName'
  | 'publishedBy.stage'
  | 'publishedBy.updatedAt'
  | 'remoteId'
  | 'remoteTypeName'
  | 'scheduledIn'
  | 'scheduledIn.children'
  | 'scheduledIn.children.children'
  | 'scheduledIn.children.children.children'
  | 'scheduledIn.children.children.id'
  | 'scheduledIn.children.id'
  | 'scheduledIn.children.internal.content'
  | 'scheduledIn.children.internal.contentDigest'
  | 'scheduledIn.children.internal.contentFilePath'
  | 'scheduledIn.children.internal.description'
  | 'scheduledIn.children.internal.fieldOwners'
  | 'scheduledIn.children.internal.ignoreType'
  | 'scheduledIn.children.internal.mediaType'
  | 'scheduledIn.children.internal.owner'
  | 'scheduledIn.children.internal.type'
  | 'scheduledIn.children.parent.children'
  | 'scheduledIn.children.parent.id'
  | 'scheduledIn.createdAt'
  | 'scheduledIn.createdBy.children'
  | 'scheduledIn.createdBy.children.children'
  | 'scheduledIn.createdBy.children.id'
  | 'scheduledIn.createdBy.createdAt'
  | 'scheduledIn.createdBy.id'
  | 'scheduledIn.createdBy.internal.content'
  | 'scheduledIn.createdBy.internal.contentDigest'
  | 'scheduledIn.createdBy.internal.contentFilePath'
  | 'scheduledIn.createdBy.internal.description'
  | 'scheduledIn.createdBy.internal.fieldOwners'
  | 'scheduledIn.createdBy.internal.ignoreType'
  | 'scheduledIn.createdBy.internal.mediaType'
  | 'scheduledIn.createdBy.internal.owner'
  | 'scheduledIn.createdBy.internal.type'
  | 'scheduledIn.createdBy.isActive'
  | 'scheduledIn.createdBy.kind'
  | 'scheduledIn.createdBy.name'
  | 'scheduledIn.createdBy.parent.children'
  | 'scheduledIn.createdBy.parent.id'
  | 'scheduledIn.createdBy.picture'
  | 'scheduledIn.createdBy.publishedAt'
  | 'scheduledIn.createdBy.remoteId'
  | 'scheduledIn.createdBy.remoteTypeName'
  | 'scheduledIn.createdBy.stage'
  | 'scheduledIn.createdBy.updatedAt'
  | 'scheduledIn.description'
  | 'scheduledIn.errorMessage'
  | 'scheduledIn.id'
  | 'scheduledIn.internal.content'
  | 'scheduledIn.internal.contentDigest'
  | 'scheduledIn.internal.contentFilePath'
  | 'scheduledIn.internal.description'
  | 'scheduledIn.internal.fieldOwners'
  | 'scheduledIn.internal.ignoreType'
  | 'scheduledIn.internal.mediaType'
  | 'scheduledIn.internal.owner'
  | 'scheduledIn.internal.type'
  | 'scheduledIn.parent.children'
  | 'scheduledIn.parent.children.children'
  | 'scheduledIn.parent.children.id'
  | 'scheduledIn.parent.id'
  | 'scheduledIn.parent.internal.content'
  | 'scheduledIn.parent.internal.contentDigest'
  | 'scheduledIn.parent.internal.contentFilePath'
  | 'scheduledIn.parent.internal.description'
  | 'scheduledIn.parent.internal.fieldOwners'
  | 'scheduledIn.parent.internal.ignoreType'
  | 'scheduledIn.parent.internal.mediaType'
  | 'scheduledIn.parent.internal.owner'
  | 'scheduledIn.parent.internal.type'
  | 'scheduledIn.parent.parent.children'
  | 'scheduledIn.parent.parent.id'
  | 'scheduledIn.publishedAt'
  | 'scheduledIn.publishedBy.children'
  | 'scheduledIn.publishedBy.children.children'
  | 'scheduledIn.publishedBy.children.id'
  | 'scheduledIn.publishedBy.createdAt'
  | 'scheduledIn.publishedBy.id'
  | 'scheduledIn.publishedBy.internal.content'
  | 'scheduledIn.publishedBy.internal.contentDigest'
  | 'scheduledIn.publishedBy.internal.contentFilePath'
  | 'scheduledIn.publishedBy.internal.description'
  | 'scheduledIn.publishedBy.internal.fieldOwners'
  | 'scheduledIn.publishedBy.internal.ignoreType'
  | 'scheduledIn.publishedBy.internal.mediaType'
  | 'scheduledIn.publishedBy.internal.owner'
  | 'scheduledIn.publishedBy.internal.type'
  | 'scheduledIn.publishedBy.isActive'
  | 'scheduledIn.publishedBy.kind'
  | 'scheduledIn.publishedBy.name'
  | 'scheduledIn.publishedBy.parent.children'
  | 'scheduledIn.publishedBy.parent.id'
  | 'scheduledIn.publishedBy.picture'
  | 'scheduledIn.publishedBy.publishedAt'
  | 'scheduledIn.publishedBy.remoteId'
  | 'scheduledIn.publishedBy.remoteTypeName'
  | 'scheduledIn.publishedBy.stage'
  | 'scheduledIn.publishedBy.updatedAt'
  | 'scheduledIn.rawPayload'
  | 'scheduledIn.release.children'
  | 'scheduledIn.release.children.children'
  | 'scheduledIn.release.children.id'
  | 'scheduledIn.release.createdAt'
  | 'scheduledIn.release.createdBy.children'
  | 'scheduledIn.release.createdBy.createdAt'
  | 'scheduledIn.release.createdBy.id'
  | 'scheduledIn.release.createdBy.isActive'
  | 'scheduledIn.release.createdBy.kind'
  | 'scheduledIn.release.createdBy.name'
  | 'scheduledIn.release.createdBy.picture'
  | 'scheduledIn.release.createdBy.publishedAt'
  | 'scheduledIn.release.createdBy.remoteId'
  | 'scheduledIn.release.createdBy.remoteTypeName'
  | 'scheduledIn.release.createdBy.stage'
  | 'scheduledIn.release.createdBy.updatedAt'
  | 'scheduledIn.release.description'
  | 'scheduledIn.release.errorMessage'
  | 'scheduledIn.release.id'
  | 'scheduledIn.release.internal.content'
  | 'scheduledIn.release.internal.contentDigest'
  | 'scheduledIn.release.internal.contentFilePath'
  | 'scheduledIn.release.internal.description'
  | 'scheduledIn.release.internal.fieldOwners'
  | 'scheduledIn.release.internal.ignoreType'
  | 'scheduledIn.release.internal.mediaType'
  | 'scheduledIn.release.internal.owner'
  | 'scheduledIn.release.internal.type'
  | 'scheduledIn.release.isActive'
  | 'scheduledIn.release.isImplicit'
  | 'scheduledIn.release.operations'
  | 'scheduledIn.release.operations.children'
  | 'scheduledIn.release.operations.createdAt'
  | 'scheduledIn.release.operations.description'
  | 'scheduledIn.release.operations.errorMessage'
  | 'scheduledIn.release.operations.id'
  | 'scheduledIn.release.operations.publishedAt'
  | 'scheduledIn.release.operations.rawPayload'
  | 'scheduledIn.release.operations.remoteId'
  | 'scheduledIn.release.operations.remoteTypeName'
  | 'scheduledIn.release.operations.stage'
  | 'scheduledIn.release.operations.status'
  | 'scheduledIn.release.operations.updatedAt'
  | 'scheduledIn.release.parent.children'
  | 'scheduledIn.release.parent.id'
  | 'scheduledIn.release.publishedAt'
  | 'scheduledIn.release.publishedBy.children'
  | 'scheduledIn.release.publishedBy.createdAt'
  | 'scheduledIn.release.publishedBy.id'
  | 'scheduledIn.release.publishedBy.isActive'
  | 'scheduledIn.release.publishedBy.kind'
  | 'scheduledIn.release.publishedBy.name'
  | 'scheduledIn.release.publishedBy.picture'
  | 'scheduledIn.release.publishedBy.publishedAt'
  | 'scheduledIn.release.publishedBy.remoteId'
  | 'scheduledIn.release.publishedBy.remoteTypeName'
  | 'scheduledIn.release.publishedBy.stage'
  | 'scheduledIn.release.publishedBy.updatedAt'
  | 'scheduledIn.release.releaseAt'
  | 'scheduledIn.release.remoteId'
  | 'scheduledIn.release.remoteTypeName'
  | 'scheduledIn.release.stage'
  | 'scheduledIn.release.status'
  | 'scheduledIn.release.title'
  | 'scheduledIn.release.updatedAt'
  | 'scheduledIn.release.updatedBy.children'
  | 'scheduledIn.release.updatedBy.createdAt'
  | 'scheduledIn.release.updatedBy.id'
  | 'scheduledIn.release.updatedBy.isActive'
  | 'scheduledIn.release.updatedBy.kind'
  | 'scheduledIn.release.updatedBy.name'
  | 'scheduledIn.release.updatedBy.picture'
  | 'scheduledIn.release.updatedBy.publishedAt'
  | 'scheduledIn.release.updatedBy.remoteId'
  | 'scheduledIn.release.updatedBy.remoteTypeName'
  | 'scheduledIn.release.updatedBy.stage'
  | 'scheduledIn.release.updatedBy.updatedAt'
  | 'scheduledIn.remoteId'
  | 'scheduledIn.remoteTypeName'
  | 'scheduledIn.stage'
  | 'scheduledIn.status'
  | 'scheduledIn.updatedAt'
  | 'scheduledIn.updatedBy.children'
  | 'scheduledIn.updatedBy.children.children'
  | 'scheduledIn.updatedBy.children.id'
  | 'scheduledIn.updatedBy.createdAt'
  | 'scheduledIn.updatedBy.id'
  | 'scheduledIn.updatedBy.internal.content'
  | 'scheduledIn.updatedBy.internal.contentDigest'
  | 'scheduledIn.updatedBy.internal.contentFilePath'
  | 'scheduledIn.updatedBy.internal.description'
  | 'scheduledIn.updatedBy.internal.fieldOwners'
  | 'scheduledIn.updatedBy.internal.ignoreType'
  | 'scheduledIn.updatedBy.internal.mediaType'
  | 'scheduledIn.updatedBy.internal.owner'
  | 'scheduledIn.updatedBy.internal.type'
  | 'scheduledIn.updatedBy.isActive'
  | 'scheduledIn.updatedBy.kind'
  | 'scheduledIn.updatedBy.name'
  | 'scheduledIn.updatedBy.parent.children'
  | 'scheduledIn.updatedBy.parent.id'
  | 'scheduledIn.updatedBy.picture'
  | 'scheduledIn.updatedBy.publishedAt'
  | 'scheduledIn.updatedBy.remoteId'
  | 'scheduledIn.updatedBy.remoteTypeName'
  | 'scheduledIn.updatedBy.stage'
  | 'scheduledIn.updatedBy.updatedAt'
  | 'slider'
  | 'slider.html'
  | 'slider.markdown'
  | 'slider.raw'
  | 'slider.remoteTypeName'
  | 'slider.text'
  | 'slug'
  | 'stage'
  | 'title'
  | 'updatedAt'
  | 'updatedBy.children'
  | 'updatedBy.children.children'
  | 'updatedBy.children.children.children'
  | 'updatedBy.children.children.id'
  | 'updatedBy.children.id'
  | 'updatedBy.children.internal.content'
  | 'updatedBy.children.internal.contentDigest'
  | 'updatedBy.children.internal.contentFilePath'
  | 'updatedBy.children.internal.description'
  | 'updatedBy.children.internal.fieldOwners'
  | 'updatedBy.children.internal.ignoreType'
  | 'updatedBy.children.internal.mediaType'
  | 'updatedBy.children.internal.owner'
  | 'updatedBy.children.internal.type'
  | 'updatedBy.children.parent.children'
  | 'updatedBy.children.parent.id'
  | 'updatedBy.createdAt'
  | 'updatedBy.id'
  | 'updatedBy.internal.content'
  | 'updatedBy.internal.contentDigest'
  | 'updatedBy.internal.contentFilePath'
  | 'updatedBy.internal.description'
  | 'updatedBy.internal.fieldOwners'
  | 'updatedBy.internal.ignoreType'
  | 'updatedBy.internal.mediaType'
  | 'updatedBy.internal.owner'
  | 'updatedBy.internal.type'
  | 'updatedBy.isActive'
  | 'updatedBy.kind'
  | 'updatedBy.name'
  | 'updatedBy.parent.children'
  | 'updatedBy.parent.children.children'
  | 'updatedBy.parent.children.id'
  | 'updatedBy.parent.id'
  | 'updatedBy.parent.internal.content'
  | 'updatedBy.parent.internal.contentDigest'
  | 'updatedBy.parent.internal.contentFilePath'
  | 'updatedBy.parent.internal.description'
  | 'updatedBy.parent.internal.fieldOwners'
  | 'updatedBy.parent.internal.ignoreType'
  | 'updatedBy.parent.internal.mediaType'
  | 'updatedBy.parent.internal.owner'
  | 'updatedBy.parent.internal.type'
  | 'updatedBy.parent.parent.children'
  | 'updatedBy.parent.parent.id'
  | 'updatedBy.picture'
  | 'updatedBy.publishedAt'
  | 'updatedBy.remoteId'
  | 'updatedBy.remoteTypeName'
  | 'updatedBy.stage'
  | 'updatedBy.updatedAt';

type GraphCMS_InfoFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly createdAt: InputMaybe<JSONQueryOperatorInput>;
  readonly createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly helpfulInfo: InputMaybe<GraphCMS_HelpfulInfoFilterInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly image: InputMaybe<GraphCMS_AssetFilterListInput>;
  readonly infoBlock: InputMaybe<GraphCMS_RichTextFilterListInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly intro: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly publishedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly remoteId: InputMaybe<IDQueryOperatorInput>;
  readonly remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  readonly scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  readonly slider: InputMaybe<GraphCMS_RichTextFilterListInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly updatedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};

type GraphCMS_InfoFilterListInput = {
  readonly elemMatch: InputMaybe<GraphCMS_InfoFilterInput>;
};

type GraphCMS_InfoGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_InfoEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<GraphCMS_InfoGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_Info>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_InfoGroupConnection_distinctArgs = {
  field: GraphCMS_InfoFieldsEnum;
};


type GraphCMS_InfoGroupConnection_groupArgs = {
  field: GraphCMS_InfoFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_InfoGroupConnection_maxArgs = {
  field: GraphCMS_InfoFieldsEnum;
};


type GraphCMS_InfoGroupConnection_minArgs = {
  field: GraphCMS_InfoFieldsEnum;
};


type GraphCMS_InfoGroupConnection_sumArgs = {
  field: GraphCMS_InfoFieldsEnum;
};

type GraphCMS_InfoSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_InfoFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type GraphCMS_Locale =
  | 'en'
  | 'gd';

type GraphCMS_LocaleQueryOperatorInput = {
  readonly eq: InputMaybe<GraphCMS_Locale>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_Locale>>>;
  readonly ne: InputMaybe<GraphCMS_Locale>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_Locale>>>;
};

type GraphCMS_ModelBusinessPlan = Node & {
  readonly capitalCosts: Maybe<GraphCMS_CapitalCosts>;
  readonly children: ReadonlyArray<Node>;
  readonly createdAt: Scalars['JSON'];
  readonly createdBy: Maybe<GraphCMS_User>;
  readonly developmentOption: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly locale: GraphCMS_Locale;
  readonly parent: Maybe<Node>;
  readonly publishedAt: Maybe<Scalars['JSON']>;
  readonly publishedBy: Maybe<GraphCMS_User>;
  readonly remoteId: Scalars['ID'];
  readonly remoteTypeName: Scalars['String'];
  readonly scheduledIn: ReadonlyArray<GraphCMS_ScheduledOperation>;
  readonly stage: GraphCMS_Stage;
  readonly updatedAt: Scalars['JSON'];
  readonly updatedBy: Maybe<GraphCMS_User>;
};

type GraphCMS_ModelBusinessPlanConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_ModelBusinessPlanEdge>;
  readonly group: ReadonlyArray<GraphCMS_ModelBusinessPlanGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_ModelBusinessPlan>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_ModelBusinessPlanConnection_distinctArgs = {
  field: GraphCMS_ModelBusinessPlanFieldsEnum;
};


type GraphCMS_ModelBusinessPlanConnection_groupArgs = {
  field: GraphCMS_ModelBusinessPlanFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_ModelBusinessPlanConnection_maxArgs = {
  field: GraphCMS_ModelBusinessPlanFieldsEnum;
};


type GraphCMS_ModelBusinessPlanConnection_minArgs = {
  field: GraphCMS_ModelBusinessPlanFieldsEnum;
};


type GraphCMS_ModelBusinessPlanConnection_sumArgs = {
  field: GraphCMS_ModelBusinessPlanFieldsEnum;
};

type GraphCMS_ModelBusinessPlanEdge = {
  readonly next: Maybe<GraphCMS_ModelBusinessPlan>;
  readonly node: GraphCMS_ModelBusinessPlan;
  readonly previous: Maybe<GraphCMS_ModelBusinessPlan>;
};

type GraphCMS_ModelBusinessPlanFieldsEnum =
  | 'capitalCosts.details.html'
  | 'capitalCosts.details.markdown'
  | 'capitalCosts.details.raw'
  | 'capitalCosts.details.remoteTypeName'
  | 'capitalCosts.details.text'
  | 'capitalCosts.funding.html'
  | 'capitalCosts.funding.markdown'
  | 'capitalCosts.funding.raw'
  | 'capitalCosts.funding.remoteTypeName'
  | 'capitalCosts.funding.text'
  | 'capitalCosts.id'
  | 'capitalCosts.remoteTypeName'
  | 'capitalCosts.stage'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'createdAt'
  | 'createdBy.children'
  | 'createdBy.children.children'
  | 'createdBy.children.children.children'
  | 'createdBy.children.children.id'
  | 'createdBy.children.id'
  | 'createdBy.children.internal.content'
  | 'createdBy.children.internal.contentDigest'
  | 'createdBy.children.internal.contentFilePath'
  | 'createdBy.children.internal.description'
  | 'createdBy.children.internal.fieldOwners'
  | 'createdBy.children.internal.ignoreType'
  | 'createdBy.children.internal.mediaType'
  | 'createdBy.children.internal.owner'
  | 'createdBy.children.internal.type'
  | 'createdBy.children.parent.children'
  | 'createdBy.children.parent.id'
  | 'createdBy.createdAt'
  | 'createdBy.id'
  | 'createdBy.internal.content'
  | 'createdBy.internal.contentDigest'
  | 'createdBy.internal.contentFilePath'
  | 'createdBy.internal.description'
  | 'createdBy.internal.fieldOwners'
  | 'createdBy.internal.ignoreType'
  | 'createdBy.internal.mediaType'
  | 'createdBy.internal.owner'
  | 'createdBy.internal.type'
  | 'createdBy.isActive'
  | 'createdBy.kind'
  | 'createdBy.name'
  | 'createdBy.parent.children'
  | 'createdBy.parent.children.children'
  | 'createdBy.parent.children.id'
  | 'createdBy.parent.id'
  | 'createdBy.parent.internal.content'
  | 'createdBy.parent.internal.contentDigest'
  | 'createdBy.parent.internal.contentFilePath'
  | 'createdBy.parent.internal.description'
  | 'createdBy.parent.internal.fieldOwners'
  | 'createdBy.parent.internal.ignoreType'
  | 'createdBy.parent.internal.mediaType'
  | 'createdBy.parent.internal.owner'
  | 'createdBy.parent.internal.type'
  | 'createdBy.parent.parent.children'
  | 'createdBy.parent.parent.id'
  | 'createdBy.picture'
  | 'createdBy.publishedAt'
  | 'createdBy.remoteId'
  | 'createdBy.remoteTypeName'
  | 'createdBy.stage'
  | 'createdBy.updatedAt'
  | 'developmentOption'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'locale'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'publishedAt'
  | 'publishedBy.children'
  | 'publishedBy.children.children'
  | 'publishedBy.children.children.children'
  | 'publishedBy.children.children.id'
  | 'publishedBy.children.id'
  | 'publishedBy.children.internal.content'
  | 'publishedBy.children.internal.contentDigest'
  | 'publishedBy.children.internal.contentFilePath'
  | 'publishedBy.children.internal.description'
  | 'publishedBy.children.internal.fieldOwners'
  | 'publishedBy.children.internal.ignoreType'
  | 'publishedBy.children.internal.mediaType'
  | 'publishedBy.children.internal.owner'
  | 'publishedBy.children.internal.type'
  | 'publishedBy.children.parent.children'
  | 'publishedBy.children.parent.id'
  | 'publishedBy.createdAt'
  | 'publishedBy.id'
  | 'publishedBy.internal.content'
  | 'publishedBy.internal.contentDigest'
  | 'publishedBy.internal.contentFilePath'
  | 'publishedBy.internal.description'
  | 'publishedBy.internal.fieldOwners'
  | 'publishedBy.internal.ignoreType'
  | 'publishedBy.internal.mediaType'
  | 'publishedBy.internal.owner'
  | 'publishedBy.internal.type'
  | 'publishedBy.isActive'
  | 'publishedBy.kind'
  | 'publishedBy.name'
  | 'publishedBy.parent.children'
  | 'publishedBy.parent.children.children'
  | 'publishedBy.parent.children.id'
  | 'publishedBy.parent.id'
  | 'publishedBy.parent.internal.content'
  | 'publishedBy.parent.internal.contentDigest'
  | 'publishedBy.parent.internal.contentFilePath'
  | 'publishedBy.parent.internal.description'
  | 'publishedBy.parent.internal.fieldOwners'
  | 'publishedBy.parent.internal.ignoreType'
  | 'publishedBy.parent.internal.mediaType'
  | 'publishedBy.parent.internal.owner'
  | 'publishedBy.parent.internal.type'
  | 'publishedBy.parent.parent.children'
  | 'publishedBy.parent.parent.id'
  | 'publishedBy.picture'
  | 'publishedBy.publishedAt'
  | 'publishedBy.remoteId'
  | 'publishedBy.remoteTypeName'
  | 'publishedBy.stage'
  | 'publishedBy.updatedAt'
  | 'remoteId'
  | 'remoteTypeName'
  | 'scheduledIn'
  | 'scheduledIn.children'
  | 'scheduledIn.children.children'
  | 'scheduledIn.children.children.children'
  | 'scheduledIn.children.children.id'
  | 'scheduledIn.children.id'
  | 'scheduledIn.children.internal.content'
  | 'scheduledIn.children.internal.contentDigest'
  | 'scheduledIn.children.internal.contentFilePath'
  | 'scheduledIn.children.internal.description'
  | 'scheduledIn.children.internal.fieldOwners'
  | 'scheduledIn.children.internal.ignoreType'
  | 'scheduledIn.children.internal.mediaType'
  | 'scheduledIn.children.internal.owner'
  | 'scheduledIn.children.internal.type'
  | 'scheduledIn.children.parent.children'
  | 'scheduledIn.children.parent.id'
  | 'scheduledIn.createdAt'
  | 'scheduledIn.createdBy.children'
  | 'scheduledIn.createdBy.children.children'
  | 'scheduledIn.createdBy.children.id'
  | 'scheduledIn.createdBy.createdAt'
  | 'scheduledIn.createdBy.id'
  | 'scheduledIn.createdBy.internal.content'
  | 'scheduledIn.createdBy.internal.contentDigest'
  | 'scheduledIn.createdBy.internal.contentFilePath'
  | 'scheduledIn.createdBy.internal.description'
  | 'scheduledIn.createdBy.internal.fieldOwners'
  | 'scheduledIn.createdBy.internal.ignoreType'
  | 'scheduledIn.createdBy.internal.mediaType'
  | 'scheduledIn.createdBy.internal.owner'
  | 'scheduledIn.createdBy.internal.type'
  | 'scheduledIn.createdBy.isActive'
  | 'scheduledIn.createdBy.kind'
  | 'scheduledIn.createdBy.name'
  | 'scheduledIn.createdBy.parent.children'
  | 'scheduledIn.createdBy.parent.id'
  | 'scheduledIn.createdBy.picture'
  | 'scheduledIn.createdBy.publishedAt'
  | 'scheduledIn.createdBy.remoteId'
  | 'scheduledIn.createdBy.remoteTypeName'
  | 'scheduledIn.createdBy.stage'
  | 'scheduledIn.createdBy.updatedAt'
  | 'scheduledIn.description'
  | 'scheduledIn.errorMessage'
  | 'scheduledIn.id'
  | 'scheduledIn.internal.content'
  | 'scheduledIn.internal.contentDigest'
  | 'scheduledIn.internal.contentFilePath'
  | 'scheduledIn.internal.description'
  | 'scheduledIn.internal.fieldOwners'
  | 'scheduledIn.internal.ignoreType'
  | 'scheduledIn.internal.mediaType'
  | 'scheduledIn.internal.owner'
  | 'scheduledIn.internal.type'
  | 'scheduledIn.parent.children'
  | 'scheduledIn.parent.children.children'
  | 'scheduledIn.parent.children.id'
  | 'scheduledIn.parent.id'
  | 'scheduledIn.parent.internal.content'
  | 'scheduledIn.parent.internal.contentDigest'
  | 'scheduledIn.parent.internal.contentFilePath'
  | 'scheduledIn.parent.internal.description'
  | 'scheduledIn.parent.internal.fieldOwners'
  | 'scheduledIn.parent.internal.ignoreType'
  | 'scheduledIn.parent.internal.mediaType'
  | 'scheduledIn.parent.internal.owner'
  | 'scheduledIn.parent.internal.type'
  | 'scheduledIn.parent.parent.children'
  | 'scheduledIn.parent.parent.id'
  | 'scheduledIn.publishedAt'
  | 'scheduledIn.publishedBy.children'
  | 'scheduledIn.publishedBy.children.children'
  | 'scheduledIn.publishedBy.children.id'
  | 'scheduledIn.publishedBy.createdAt'
  | 'scheduledIn.publishedBy.id'
  | 'scheduledIn.publishedBy.internal.content'
  | 'scheduledIn.publishedBy.internal.contentDigest'
  | 'scheduledIn.publishedBy.internal.contentFilePath'
  | 'scheduledIn.publishedBy.internal.description'
  | 'scheduledIn.publishedBy.internal.fieldOwners'
  | 'scheduledIn.publishedBy.internal.ignoreType'
  | 'scheduledIn.publishedBy.internal.mediaType'
  | 'scheduledIn.publishedBy.internal.owner'
  | 'scheduledIn.publishedBy.internal.type'
  | 'scheduledIn.publishedBy.isActive'
  | 'scheduledIn.publishedBy.kind'
  | 'scheduledIn.publishedBy.name'
  | 'scheduledIn.publishedBy.parent.children'
  | 'scheduledIn.publishedBy.parent.id'
  | 'scheduledIn.publishedBy.picture'
  | 'scheduledIn.publishedBy.publishedAt'
  | 'scheduledIn.publishedBy.remoteId'
  | 'scheduledIn.publishedBy.remoteTypeName'
  | 'scheduledIn.publishedBy.stage'
  | 'scheduledIn.publishedBy.updatedAt'
  | 'scheduledIn.rawPayload'
  | 'scheduledIn.release.children'
  | 'scheduledIn.release.children.children'
  | 'scheduledIn.release.children.id'
  | 'scheduledIn.release.createdAt'
  | 'scheduledIn.release.createdBy.children'
  | 'scheduledIn.release.createdBy.createdAt'
  | 'scheduledIn.release.createdBy.id'
  | 'scheduledIn.release.createdBy.isActive'
  | 'scheduledIn.release.createdBy.kind'
  | 'scheduledIn.release.createdBy.name'
  | 'scheduledIn.release.createdBy.picture'
  | 'scheduledIn.release.createdBy.publishedAt'
  | 'scheduledIn.release.createdBy.remoteId'
  | 'scheduledIn.release.createdBy.remoteTypeName'
  | 'scheduledIn.release.createdBy.stage'
  | 'scheduledIn.release.createdBy.updatedAt'
  | 'scheduledIn.release.description'
  | 'scheduledIn.release.errorMessage'
  | 'scheduledIn.release.id'
  | 'scheduledIn.release.internal.content'
  | 'scheduledIn.release.internal.contentDigest'
  | 'scheduledIn.release.internal.contentFilePath'
  | 'scheduledIn.release.internal.description'
  | 'scheduledIn.release.internal.fieldOwners'
  | 'scheduledIn.release.internal.ignoreType'
  | 'scheduledIn.release.internal.mediaType'
  | 'scheduledIn.release.internal.owner'
  | 'scheduledIn.release.internal.type'
  | 'scheduledIn.release.isActive'
  | 'scheduledIn.release.isImplicit'
  | 'scheduledIn.release.operations'
  | 'scheduledIn.release.operations.children'
  | 'scheduledIn.release.operations.createdAt'
  | 'scheduledIn.release.operations.description'
  | 'scheduledIn.release.operations.errorMessage'
  | 'scheduledIn.release.operations.id'
  | 'scheduledIn.release.operations.publishedAt'
  | 'scheduledIn.release.operations.rawPayload'
  | 'scheduledIn.release.operations.remoteId'
  | 'scheduledIn.release.operations.remoteTypeName'
  | 'scheduledIn.release.operations.stage'
  | 'scheduledIn.release.operations.status'
  | 'scheduledIn.release.operations.updatedAt'
  | 'scheduledIn.release.parent.children'
  | 'scheduledIn.release.parent.id'
  | 'scheduledIn.release.publishedAt'
  | 'scheduledIn.release.publishedBy.children'
  | 'scheduledIn.release.publishedBy.createdAt'
  | 'scheduledIn.release.publishedBy.id'
  | 'scheduledIn.release.publishedBy.isActive'
  | 'scheduledIn.release.publishedBy.kind'
  | 'scheduledIn.release.publishedBy.name'
  | 'scheduledIn.release.publishedBy.picture'
  | 'scheduledIn.release.publishedBy.publishedAt'
  | 'scheduledIn.release.publishedBy.remoteId'
  | 'scheduledIn.release.publishedBy.remoteTypeName'
  | 'scheduledIn.release.publishedBy.stage'
  | 'scheduledIn.release.publishedBy.updatedAt'
  | 'scheduledIn.release.releaseAt'
  | 'scheduledIn.release.remoteId'
  | 'scheduledIn.release.remoteTypeName'
  | 'scheduledIn.release.stage'
  | 'scheduledIn.release.status'
  | 'scheduledIn.release.title'
  | 'scheduledIn.release.updatedAt'
  | 'scheduledIn.release.updatedBy.children'
  | 'scheduledIn.release.updatedBy.createdAt'
  | 'scheduledIn.release.updatedBy.id'
  | 'scheduledIn.release.updatedBy.isActive'
  | 'scheduledIn.release.updatedBy.kind'
  | 'scheduledIn.release.updatedBy.name'
  | 'scheduledIn.release.updatedBy.picture'
  | 'scheduledIn.release.updatedBy.publishedAt'
  | 'scheduledIn.release.updatedBy.remoteId'
  | 'scheduledIn.release.updatedBy.remoteTypeName'
  | 'scheduledIn.release.updatedBy.stage'
  | 'scheduledIn.release.updatedBy.updatedAt'
  | 'scheduledIn.remoteId'
  | 'scheduledIn.remoteTypeName'
  | 'scheduledIn.stage'
  | 'scheduledIn.status'
  | 'scheduledIn.updatedAt'
  | 'scheduledIn.updatedBy.children'
  | 'scheduledIn.updatedBy.children.children'
  | 'scheduledIn.updatedBy.children.id'
  | 'scheduledIn.updatedBy.createdAt'
  | 'scheduledIn.updatedBy.id'
  | 'scheduledIn.updatedBy.internal.content'
  | 'scheduledIn.updatedBy.internal.contentDigest'
  | 'scheduledIn.updatedBy.internal.contentFilePath'
  | 'scheduledIn.updatedBy.internal.description'
  | 'scheduledIn.updatedBy.internal.fieldOwners'
  | 'scheduledIn.updatedBy.internal.ignoreType'
  | 'scheduledIn.updatedBy.internal.mediaType'
  | 'scheduledIn.updatedBy.internal.owner'
  | 'scheduledIn.updatedBy.internal.type'
  | 'scheduledIn.updatedBy.isActive'
  | 'scheduledIn.updatedBy.kind'
  | 'scheduledIn.updatedBy.name'
  | 'scheduledIn.updatedBy.parent.children'
  | 'scheduledIn.updatedBy.parent.id'
  | 'scheduledIn.updatedBy.picture'
  | 'scheduledIn.updatedBy.publishedAt'
  | 'scheduledIn.updatedBy.remoteId'
  | 'scheduledIn.updatedBy.remoteTypeName'
  | 'scheduledIn.updatedBy.stage'
  | 'scheduledIn.updatedBy.updatedAt'
  | 'stage'
  | 'updatedAt'
  | 'updatedBy.children'
  | 'updatedBy.children.children'
  | 'updatedBy.children.children.children'
  | 'updatedBy.children.children.id'
  | 'updatedBy.children.id'
  | 'updatedBy.children.internal.content'
  | 'updatedBy.children.internal.contentDigest'
  | 'updatedBy.children.internal.contentFilePath'
  | 'updatedBy.children.internal.description'
  | 'updatedBy.children.internal.fieldOwners'
  | 'updatedBy.children.internal.ignoreType'
  | 'updatedBy.children.internal.mediaType'
  | 'updatedBy.children.internal.owner'
  | 'updatedBy.children.internal.type'
  | 'updatedBy.children.parent.children'
  | 'updatedBy.children.parent.id'
  | 'updatedBy.createdAt'
  | 'updatedBy.id'
  | 'updatedBy.internal.content'
  | 'updatedBy.internal.contentDigest'
  | 'updatedBy.internal.contentFilePath'
  | 'updatedBy.internal.description'
  | 'updatedBy.internal.fieldOwners'
  | 'updatedBy.internal.ignoreType'
  | 'updatedBy.internal.mediaType'
  | 'updatedBy.internal.owner'
  | 'updatedBy.internal.type'
  | 'updatedBy.isActive'
  | 'updatedBy.kind'
  | 'updatedBy.name'
  | 'updatedBy.parent.children'
  | 'updatedBy.parent.children.children'
  | 'updatedBy.parent.children.id'
  | 'updatedBy.parent.id'
  | 'updatedBy.parent.internal.content'
  | 'updatedBy.parent.internal.contentDigest'
  | 'updatedBy.parent.internal.contentFilePath'
  | 'updatedBy.parent.internal.description'
  | 'updatedBy.parent.internal.fieldOwners'
  | 'updatedBy.parent.internal.ignoreType'
  | 'updatedBy.parent.internal.mediaType'
  | 'updatedBy.parent.internal.owner'
  | 'updatedBy.parent.internal.type'
  | 'updatedBy.parent.parent.children'
  | 'updatedBy.parent.parent.id'
  | 'updatedBy.picture'
  | 'updatedBy.publishedAt'
  | 'updatedBy.remoteId'
  | 'updatedBy.remoteTypeName'
  | 'updatedBy.stage'
  | 'updatedBy.updatedAt';

type GraphCMS_ModelBusinessPlanFilterInput = {
  readonly capitalCosts: InputMaybe<GraphCMS_CapitalCostsFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly createdAt: InputMaybe<JSONQueryOperatorInput>;
  readonly createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly developmentOption: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly publishedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly remoteId: InputMaybe<IDQueryOperatorInput>;
  readonly remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  readonly scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  readonly stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  readonly updatedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};

type GraphCMS_ModelBusinessPlanGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_ModelBusinessPlanEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<GraphCMS_ModelBusinessPlanGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_ModelBusinessPlan>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_ModelBusinessPlanGroupConnection_distinctArgs = {
  field: GraphCMS_ModelBusinessPlanFieldsEnum;
};


type GraphCMS_ModelBusinessPlanGroupConnection_groupArgs = {
  field: GraphCMS_ModelBusinessPlanFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_ModelBusinessPlanGroupConnection_maxArgs = {
  field: GraphCMS_ModelBusinessPlanFieldsEnum;
};


type GraphCMS_ModelBusinessPlanGroupConnection_minArgs = {
  field: GraphCMS_ModelBusinessPlanFieldsEnum;
};


type GraphCMS_ModelBusinessPlanGroupConnection_sumArgs = {
  field: GraphCMS_ModelBusinessPlanFieldsEnum;
};

type GraphCMS_ModelBusinessPlanSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_ModelBusinessPlanFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type GraphCMS_ModelSwot = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly createdAt: Scalars['JSON'];
  readonly createdBy: Maybe<GraphCMS_User>;
  readonly developmentOption: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly locale: GraphCMS_Locale;
  readonly opportunities: GraphCMS_RichText;
  readonly parent: Maybe<Node>;
  readonly publishedAt: Maybe<Scalars['JSON']>;
  readonly publishedBy: Maybe<GraphCMS_User>;
  readonly remoteId: Scalars['ID'];
  readonly remoteTypeName: Scalars['String'];
  readonly scheduledIn: ReadonlyArray<GraphCMS_ScheduledOperation>;
  readonly stage: GraphCMS_Stage;
  readonly strengths: GraphCMS_RichText;
  readonly threats: GraphCMS_RichText;
  readonly updatedAt: Scalars['JSON'];
  readonly updatedBy: Maybe<GraphCMS_User>;
  readonly weaknesses: GraphCMS_RichText;
};

type GraphCMS_ModelSwotConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_ModelSwotEdge>;
  readonly group: ReadonlyArray<GraphCMS_ModelSwotGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_ModelSwot>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_ModelSwotConnection_distinctArgs = {
  field: GraphCMS_ModelSwotFieldsEnum;
};


type GraphCMS_ModelSwotConnection_groupArgs = {
  field: GraphCMS_ModelSwotFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_ModelSwotConnection_maxArgs = {
  field: GraphCMS_ModelSwotFieldsEnum;
};


type GraphCMS_ModelSwotConnection_minArgs = {
  field: GraphCMS_ModelSwotFieldsEnum;
};


type GraphCMS_ModelSwotConnection_sumArgs = {
  field: GraphCMS_ModelSwotFieldsEnum;
};

type GraphCMS_ModelSwotEdge = {
  readonly next: Maybe<GraphCMS_ModelSwot>;
  readonly node: GraphCMS_ModelSwot;
  readonly previous: Maybe<GraphCMS_ModelSwot>;
};

type GraphCMS_ModelSwotFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'createdAt'
  | 'createdBy.children'
  | 'createdBy.children.children'
  | 'createdBy.children.children.children'
  | 'createdBy.children.children.id'
  | 'createdBy.children.id'
  | 'createdBy.children.internal.content'
  | 'createdBy.children.internal.contentDigest'
  | 'createdBy.children.internal.contentFilePath'
  | 'createdBy.children.internal.description'
  | 'createdBy.children.internal.fieldOwners'
  | 'createdBy.children.internal.ignoreType'
  | 'createdBy.children.internal.mediaType'
  | 'createdBy.children.internal.owner'
  | 'createdBy.children.internal.type'
  | 'createdBy.children.parent.children'
  | 'createdBy.children.parent.id'
  | 'createdBy.createdAt'
  | 'createdBy.id'
  | 'createdBy.internal.content'
  | 'createdBy.internal.contentDigest'
  | 'createdBy.internal.contentFilePath'
  | 'createdBy.internal.description'
  | 'createdBy.internal.fieldOwners'
  | 'createdBy.internal.ignoreType'
  | 'createdBy.internal.mediaType'
  | 'createdBy.internal.owner'
  | 'createdBy.internal.type'
  | 'createdBy.isActive'
  | 'createdBy.kind'
  | 'createdBy.name'
  | 'createdBy.parent.children'
  | 'createdBy.parent.children.children'
  | 'createdBy.parent.children.id'
  | 'createdBy.parent.id'
  | 'createdBy.parent.internal.content'
  | 'createdBy.parent.internal.contentDigest'
  | 'createdBy.parent.internal.contentFilePath'
  | 'createdBy.parent.internal.description'
  | 'createdBy.parent.internal.fieldOwners'
  | 'createdBy.parent.internal.ignoreType'
  | 'createdBy.parent.internal.mediaType'
  | 'createdBy.parent.internal.owner'
  | 'createdBy.parent.internal.type'
  | 'createdBy.parent.parent.children'
  | 'createdBy.parent.parent.id'
  | 'createdBy.picture'
  | 'createdBy.publishedAt'
  | 'createdBy.remoteId'
  | 'createdBy.remoteTypeName'
  | 'createdBy.stage'
  | 'createdBy.updatedAt'
  | 'developmentOption'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'locale'
  | 'opportunities.html'
  | 'opportunities.markdown'
  | 'opportunities.raw'
  | 'opportunities.remoteTypeName'
  | 'opportunities.text'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'publishedAt'
  | 'publishedBy.children'
  | 'publishedBy.children.children'
  | 'publishedBy.children.children.children'
  | 'publishedBy.children.children.id'
  | 'publishedBy.children.id'
  | 'publishedBy.children.internal.content'
  | 'publishedBy.children.internal.contentDigest'
  | 'publishedBy.children.internal.contentFilePath'
  | 'publishedBy.children.internal.description'
  | 'publishedBy.children.internal.fieldOwners'
  | 'publishedBy.children.internal.ignoreType'
  | 'publishedBy.children.internal.mediaType'
  | 'publishedBy.children.internal.owner'
  | 'publishedBy.children.internal.type'
  | 'publishedBy.children.parent.children'
  | 'publishedBy.children.parent.id'
  | 'publishedBy.createdAt'
  | 'publishedBy.id'
  | 'publishedBy.internal.content'
  | 'publishedBy.internal.contentDigest'
  | 'publishedBy.internal.contentFilePath'
  | 'publishedBy.internal.description'
  | 'publishedBy.internal.fieldOwners'
  | 'publishedBy.internal.ignoreType'
  | 'publishedBy.internal.mediaType'
  | 'publishedBy.internal.owner'
  | 'publishedBy.internal.type'
  | 'publishedBy.isActive'
  | 'publishedBy.kind'
  | 'publishedBy.name'
  | 'publishedBy.parent.children'
  | 'publishedBy.parent.children.children'
  | 'publishedBy.parent.children.id'
  | 'publishedBy.parent.id'
  | 'publishedBy.parent.internal.content'
  | 'publishedBy.parent.internal.contentDigest'
  | 'publishedBy.parent.internal.contentFilePath'
  | 'publishedBy.parent.internal.description'
  | 'publishedBy.parent.internal.fieldOwners'
  | 'publishedBy.parent.internal.ignoreType'
  | 'publishedBy.parent.internal.mediaType'
  | 'publishedBy.parent.internal.owner'
  | 'publishedBy.parent.internal.type'
  | 'publishedBy.parent.parent.children'
  | 'publishedBy.parent.parent.id'
  | 'publishedBy.picture'
  | 'publishedBy.publishedAt'
  | 'publishedBy.remoteId'
  | 'publishedBy.remoteTypeName'
  | 'publishedBy.stage'
  | 'publishedBy.updatedAt'
  | 'remoteId'
  | 'remoteTypeName'
  | 'scheduledIn'
  | 'scheduledIn.children'
  | 'scheduledIn.children.children'
  | 'scheduledIn.children.children.children'
  | 'scheduledIn.children.children.id'
  | 'scheduledIn.children.id'
  | 'scheduledIn.children.internal.content'
  | 'scheduledIn.children.internal.contentDigest'
  | 'scheduledIn.children.internal.contentFilePath'
  | 'scheduledIn.children.internal.description'
  | 'scheduledIn.children.internal.fieldOwners'
  | 'scheduledIn.children.internal.ignoreType'
  | 'scheduledIn.children.internal.mediaType'
  | 'scheduledIn.children.internal.owner'
  | 'scheduledIn.children.internal.type'
  | 'scheduledIn.children.parent.children'
  | 'scheduledIn.children.parent.id'
  | 'scheduledIn.createdAt'
  | 'scheduledIn.createdBy.children'
  | 'scheduledIn.createdBy.children.children'
  | 'scheduledIn.createdBy.children.id'
  | 'scheduledIn.createdBy.createdAt'
  | 'scheduledIn.createdBy.id'
  | 'scheduledIn.createdBy.internal.content'
  | 'scheduledIn.createdBy.internal.contentDigest'
  | 'scheduledIn.createdBy.internal.contentFilePath'
  | 'scheduledIn.createdBy.internal.description'
  | 'scheduledIn.createdBy.internal.fieldOwners'
  | 'scheduledIn.createdBy.internal.ignoreType'
  | 'scheduledIn.createdBy.internal.mediaType'
  | 'scheduledIn.createdBy.internal.owner'
  | 'scheduledIn.createdBy.internal.type'
  | 'scheduledIn.createdBy.isActive'
  | 'scheduledIn.createdBy.kind'
  | 'scheduledIn.createdBy.name'
  | 'scheduledIn.createdBy.parent.children'
  | 'scheduledIn.createdBy.parent.id'
  | 'scheduledIn.createdBy.picture'
  | 'scheduledIn.createdBy.publishedAt'
  | 'scheduledIn.createdBy.remoteId'
  | 'scheduledIn.createdBy.remoteTypeName'
  | 'scheduledIn.createdBy.stage'
  | 'scheduledIn.createdBy.updatedAt'
  | 'scheduledIn.description'
  | 'scheduledIn.errorMessage'
  | 'scheduledIn.id'
  | 'scheduledIn.internal.content'
  | 'scheduledIn.internal.contentDigest'
  | 'scheduledIn.internal.contentFilePath'
  | 'scheduledIn.internal.description'
  | 'scheduledIn.internal.fieldOwners'
  | 'scheduledIn.internal.ignoreType'
  | 'scheduledIn.internal.mediaType'
  | 'scheduledIn.internal.owner'
  | 'scheduledIn.internal.type'
  | 'scheduledIn.parent.children'
  | 'scheduledIn.parent.children.children'
  | 'scheduledIn.parent.children.id'
  | 'scheduledIn.parent.id'
  | 'scheduledIn.parent.internal.content'
  | 'scheduledIn.parent.internal.contentDigest'
  | 'scheduledIn.parent.internal.contentFilePath'
  | 'scheduledIn.parent.internal.description'
  | 'scheduledIn.parent.internal.fieldOwners'
  | 'scheduledIn.parent.internal.ignoreType'
  | 'scheduledIn.parent.internal.mediaType'
  | 'scheduledIn.parent.internal.owner'
  | 'scheduledIn.parent.internal.type'
  | 'scheduledIn.parent.parent.children'
  | 'scheduledIn.parent.parent.id'
  | 'scheduledIn.publishedAt'
  | 'scheduledIn.publishedBy.children'
  | 'scheduledIn.publishedBy.children.children'
  | 'scheduledIn.publishedBy.children.id'
  | 'scheduledIn.publishedBy.createdAt'
  | 'scheduledIn.publishedBy.id'
  | 'scheduledIn.publishedBy.internal.content'
  | 'scheduledIn.publishedBy.internal.contentDigest'
  | 'scheduledIn.publishedBy.internal.contentFilePath'
  | 'scheduledIn.publishedBy.internal.description'
  | 'scheduledIn.publishedBy.internal.fieldOwners'
  | 'scheduledIn.publishedBy.internal.ignoreType'
  | 'scheduledIn.publishedBy.internal.mediaType'
  | 'scheduledIn.publishedBy.internal.owner'
  | 'scheduledIn.publishedBy.internal.type'
  | 'scheduledIn.publishedBy.isActive'
  | 'scheduledIn.publishedBy.kind'
  | 'scheduledIn.publishedBy.name'
  | 'scheduledIn.publishedBy.parent.children'
  | 'scheduledIn.publishedBy.parent.id'
  | 'scheduledIn.publishedBy.picture'
  | 'scheduledIn.publishedBy.publishedAt'
  | 'scheduledIn.publishedBy.remoteId'
  | 'scheduledIn.publishedBy.remoteTypeName'
  | 'scheduledIn.publishedBy.stage'
  | 'scheduledIn.publishedBy.updatedAt'
  | 'scheduledIn.rawPayload'
  | 'scheduledIn.release.children'
  | 'scheduledIn.release.children.children'
  | 'scheduledIn.release.children.id'
  | 'scheduledIn.release.createdAt'
  | 'scheduledIn.release.createdBy.children'
  | 'scheduledIn.release.createdBy.createdAt'
  | 'scheduledIn.release.createdBy.id'
  | 'scheduledIn.release.createdBy.isActive'
  | 'scheduledIn.release.createdBy.kind'
  | 'scheduledIn.release.createdBy.name'
  | 'scheduledIn.release.createdBy.picture'
  | 'scheduledIn.release.createdBy.publishedAt'
  | 'scheduledIn.release.createdBy.remoteId'
  | 'scheduledIn.release.createdBy.remoteTypeName'
  | 'scheduledIn.release.createdBy.stage'
  | 'scheduledIn.release.createdBy.updatedAt'
  | 'scheduledIn.release.description'
  | 'scheduledIn.release.errorMessage'
  | 'scheduledIn.release.id'
  | 'scheduledIn.release.internal.content'
  | 'scheduledIn.release.internal.contentDigest'
  | 'scheduledIn.release.internal.contentFilePath'
  | 'scheduledIn.release.internal.description'
  | 'scheduledIn.release.internal.fieldOwners'
  | 'scheduledIn.release.internal.ignoreType'
  | 'scheduledIn.release.internal.mediaType'
  | 'scheduledIn.release.internal.owner'
  | 'scheduledIn.release.internal.type'
  | 'scheduledIn.release.isActive'
  | 'scheduledIn.release.isImplicit'
  | 'scheduledIn.release.operations'
  | 'scheduledIn.release.operations.children'
  | 'scheduledIn.release.operations.createdAt'
  | 'scheduledIn.release.operations.description'
  | 'scheduledIn.release.operations.errorMessage'
  | 'scheduledIn.release.operations.id'
  | 'scheduledIn.release.operations.publishedAt'
  | 'scheduledIn.release.operations.rawPayload'
  | 'scheduledIn.release.operations.remoteId'
  | 'scheduledIn.release.operations.remoteTypeName'
  | 'scheduledIn.release.operations.stage'
  | 'scheduledIn.release.operations.status'
  | 'scheduledIn.release.operations.updatedAt'
  | 'scheduledIn.release.parent.children'
  | 'scheduledIn.release.parent.id'
  | 'scheduledIn.release.publishedAt'
  | 'scheduledIn.release.publishedBy.children'
  | 'scheduledIn.release.publishedBy.createdAt'
  | 'scheduledIn.release.publishedBy.id'
  | 'scheduledIn.release.publishedBy.isActive'
  | 'scheduledIn.release.publishedBy.kind'
  | 'scheduledIn.release.publishedBy.name'
  | 'scheduledIn.release.publishedBy.picture'
  | 'scheduledIn.release.publishedBy.publishedAt'
  | 'scheduledIn.release.publishedBy.remoteId'
  | 'scheduledIn.release.publishedBy.remoteTypeName'
  | 'scheduledIn.release.publishedBy.stage'
  | 'scheduledIn.release.publishedBy.updatedAt'
  | 'scheduledIn.release.releaseAt'
  | 'scheduledIn.release.remoteId'
  | 'scheduledIn.release.remoteTypeName'
  | 'scheduledIn.release.stage'
  | 'scheduledIn.release.status'
  | 'scheduledIn.release.title'
  | 'scheduledIn.release.updatedAt'
  | 'scheduledIn.release.updatedBy.children'
  | 'scheduledIn.release.updatedBy.createdAt'
  | 'scheduledIn.release.updatedBy.id'
  | 'scheduledIn.release.updatedBy.isActive'
  | 'scheduledIn.release.updatedBy.kind'
  | 'scheduledIn.release.updatedBy.name'
  | 'scheduledIn.release.updatedBy.picture'
  | 'scheduledIn.release.updatedBy.publishedAt'
  | 'scheduledIn.release.updatedBy.remoteId'
  | 'scheduledIn.release.updatedBy.remoteTypeName'
  | 'scheduledIn.release.updatedBy.stage'
  | 'scheduledIn.release.updatedBy.updatedAt'
  | 'scheduledIn.remoteId'
  | 'scheduledIn.remoteTypeName'
  | 'scheduledIn.stage'
  | 'scheduledIn.status'
  | 'scheduledIn.updatedAt'
  | 'scheduledIn.updatedBy.children'
  | 'scheduledIn.updatedBy.children.children'
  | 'scheduledIn.updatedBy.children.id'
  | 'scheduledIn.updatedBy.createdAt'
  | 'scheduledIn.updatedBy.id'
  | 'scheduledIn.updatedBy.internal.content'
  | 'scheduledIn.updatedBy.internal.contentDigest'
  | 'scheduledIn.updatedBy.internal.contentFilePath'
  | 'scheduledIn.updatedBy.internal.description'
  | 'scheduledIn.updatedBy.internal.fieldOwners'
  | 'scheduledIn.updatedBy.internal.ignoreType'
  | 'scheduledIn.updatedBy.internal.mediaType'
  | 'scheduledIn.updatedBy.internal.owner'
  | 'scheduledIn.updatedBy.internal.type'
  | 'scheduledIn.updatedBy.isActive'
  | 'scheduledIn.updatedBy.kind'
  | 'scheduledIn.updatedBy.name'
  | 'scheduledIn.updatedBy.parent.children'
  | 'scheduledIn.updatedBy.parent.id'
  | 'scheduledIn.updatedBy.picture'
  | 'scheduledIn.updatedBy.publishedAt'
  | 'scheduledIn.updatedBy.remoteId'
  | 'scheduledIn.updatedBy.remoteTypeName'
  | 'scheduledIn.updatedBy.stage'
  | 'scheduledIn.updatedBy.updatedAt'
  | 'stage'
  | 'strengths.html'
  | 'strengths.markdown'
  | 'strengths.raw'
  | 'strengths.remoteTypeName'
  | 'strengths.text'
  | 'threats.html'
  | 'threats.markdown'
  | 'threats.raw'
  | 'threats.remoteTypeName'
  | 'threats.text'
  | 'updatedAt'
  | 'updatedBy.children'
  | 'updatedBy.children.children'
  | 'updatedBy.children.children.children'
  | 'updatedBy.children.children.id'
  | 'updatedBy.children.id'
  | 'updatedBy.children.internal.content'
  | 'updatedBy.children.internal.contentDigest'
  | 'updatedBy.children.internal.contentFilePath'
  | 'updatedBy.children.internal.description'
  | 'updatedBy.children.internal.fieldOwners'
  | 'updatedBy.children.internal.ignoreType'
  | 'updatedBy.children.internal.mediaType'
  | 'updatedBy.children.internal.owner'
  | 'updatedBy.children.internal.type'
  | 'updatedBy.children.parent.children'
  | 'updatedBy.children.parent.id'
  | 'updatedBy.createdAt'
  | 'updatedBy.id'
  | 'updatedBy.internal.content'
  | 'updatedBy.internal.contentDigest'
  | 'updatedBy.internal.contentFilePath'
  | 'updatedBy.internal.description'
  | 'updatedBy.internal.fieldOwners'
  | 'updatedBy.internal.ignoreType'
  | 'updatedBy.internal.mediaType'
  | 'updatedBy.internal.owner'
  | 'updatedBy.internal.type'
  | 'updatedBy.isActive'
  | 'updatedBy.kind'
  | 'updatedBy.name'
  | 'updatedBy.parent.children'
  | 'updatedBy.parent.children.children'
  | 'updatedBy.parent.children.id'
  | 'updatedBy.parent.id'
  | 'updatedBy.parent.internal.content'
  | 'updatedBy.parent.internal.contentDigest'
  | 'updatedBy.parent.internal.contentFilePath'
  | 'updatedBy.parent.internal.description'
  | 'updatedBy.parent.internal.fieldOwners'
  | 'updatedBy.parent.internal.ignoreType'
  | 'updatedBy.parent.internal.mediaType'
  | 'updatedBy.parent.internal.owner'
  | 'updatedBy.parent.internal.type'
  | 'updatedBy.parent.parent.children'
  | 'updatedBy.parent.parent.id'
  | 'updatedBy.picture'
  | 'updatedBy.publishedAt'
  | 'updatedBy.remoteId'
  | 'updatedBy.remoteTypeName'
  | 'updatedBy.stage'
  | 'updatedBy.updatedAt'
  | 'weaknesses.html'
  | 'weaknesses.markdown'
  | 'weaknesses.raw'
  | 'weaknesses.remoteTypeName'
  | 'weaknesses.text';

type GraphCMS_ModelSwotFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly createdAt: InputMaybe<JSONQueryOperatorInput>;
  readonly createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly developmentOption: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  readonly opportunities: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly publishedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly remoteId: InputMaybe<IDQueryOperatorInput>;
  readonly remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  readonly scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  readonly stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  readonly strengths: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly threats: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly updatedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly weaknesses: InputMaybe<GraphCMS_RichTextFilterInput>;
};

type GraphCMS_ModelSwotGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_ModelSwotEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<GraphCMS_ModelSwotGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_ModelSwot>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_ModelSwotGroupConnection_distinctArgs = {
  field: GraphCMS_ModelSwotFieldsEnum;
};


type GraphCMS_ModelSwotGroupConnection_groupArgs = {
  field: GraphCMS_ModelSwotFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_ModelSwotGroupConnection_maxArgs = {
  field: GraphCMS_ModelSwotFieldsEnum;
};


type GraphCMS_ModelSwotGroupConnection_minArgs = {
  field: GraphCMS_ModelSwotFieldsEnum;
};


type GraphCMS_ModelSwotGroupConnection_sumArgs = {
  field: GraphCMS_ModelSwotFieldsEnum;
};

type GraphCMS_ModelSwotSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_ModelSwotFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type GraphCMS_PresentationTipsPage = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly createdAt: Scalars['JSON'];
  readonly createdBy: Maybe<GraphCMS_User>;
  readonly helpfulInfo: Maybe<GraphCMS_HelpfulInfo>;
  readonly id: Scalars['ID'];
  readonly info: Maybe<GraphCMS_RichText>;
  readonly internal: Internal;
  readonly intro: Maybe<Scalars['String']>;
  readonly locale: GraphCMS_Locale;
  readonly parent: Maybe<Node>;
  readonly publishedAt: Maybe<Scalars['JSON']>;
  readonly publishedBy: Maybe<GraphCMS_User>;
  readonly remoteId: Scalars['ID'];
  readonly remoteTypeName: Scalars['String'];
  readonly scheduledIn: ReadonlyArray<GraphCMS_ScheduledOperation>;
  readonly slug: Maybe<Scalars['String']>;
  readonly stage: GraphCMS_Stage;
  readonly stageNumber: Maybe<Scalars['Int']>;
  readonly tips: Maybe<GraphCMS_RichText>;
  readonly title: Maybe<Scalars['String']>;
  readonly updatedAt: Scalars['JSON'];
  readonly updatedBy: Maybe<GraphCMS_User>;
};

type GraphCMS_PresentationTipsPageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_PresentationTipsPageEdge>;
  readonly group: ReadonlyArray<GraphCMS_PresentationTipsPageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_PresentationTipsPage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_PresentationTipsPageConnection_distinctArgs = {
  field: GraphCMS_PresentationTipsPageFieldsEnum;
};


type GraphCMS_PresentationTipsPageConnection_groupArgs = {
  field: GraphCMS_PresentationTipsPageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_PresentationTipsPageConnection_maxArgs = {
  field: GraphCMS_PresentationTipsPageFieldsEnum;
};


type GraphCMS_PresentationTipsPageConnection_minArgs = {
  field: GraphCMS_PresentationTipsPageFieldsEnum;
};


type GraphCMS_PresentationTipsPageConnection_sumArgs = {
  field: GraphCMS_PresentationTipsPageFieldsEnum;
};

type GraphCMS_PresentationTipsPageEdge = {
  readonly next: Maybe<GraphCMS_PresentationTipsPage>;
  readonly node: GraphCMS_PresentationTipsPage;
  readonly previous: Maybe<GraphCMS_PresentationTipsPage>;
};

type GraphCMS_PresentationTipsPageFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'createdAt'
  | 'createdBy.children'
  | 'createdBy.children.children'
  | 'createdBy.children.children.children'
  | 'createdBy.children.children.id'
  | 'createdBy.children.id'
  | 'createdBy.children.internal.content'
  | 'createdBy.children.internal.contentDigest'
  | 'createdBy.children.internal.contentFilePath'
  | 'createdBy.children.internal.description'
  | 'createdBy.children.internal.fieldOwners'
  | 'createdBy.children.internal.ignoreType'
  | 'createdBy.children.internal.mediaType'
  | 'createdBy.children.internal.owner'
  | 'createdBy.children.internal.type'
  | 'createdBy.children.parent.children'
  | 'createdBy.children.parent.id'
  | 'createdBy.createdAt'
  | 'createdBy.id'
  | 'createdBy.internal.content'
  | 'createdBy.internal.contentDigest'
  | 'createdBy.internal.contentFilePath'
  | 'createdBy.internal.description'
  | 'createdBy.internal.fieldOwners'
  | 'createdBy.internal.ignoreType'
  | 'createdBy.internal.mediaType'
  | 'createdBy.internal.owner'
  | 'createdBy.internal.type'
  | 'createdBy.isActive'
  | 'createdBy.kind'
  | 'createdBy.name'
  | 'createdBy.parent.children'
  | 'createdBy.parent.children.children'
  | 'createdBy.parent.children.id'
  | 'createdBy.parent.id'
  | 'createdBy.parent.internal.content'
  | 'createdBy.parent.internal.contentDigest'
  | 'createdBy.parent.internal.contentFilePath'
  | 'createdBy.parent.internal.description'
  | 'createdBy.parent.internal.fieldOwners'
  | 'createdBy.parent.internal.ignoreType'
  | 'createdBy.parent.internal.mediaType'
  | 'createdBy.parent.internal.owner'
  | 'createdBy.parent.internal.type'
  | 'createdBy.parent.parent.children'
  | 'createdBy.parent.parent.id'
  | 'createdBy.picture'
  | 'createdBy.publishedAt'
  | 'createdBy.remoteId'
  | 'createdBy.remoteTypeName'
  | 'createdBy.stage'
  | 'createdBy.updatedAt'
  | 'helpfulInfo.children'
  | 'helpfulInfo.children.children'
  | 'helpfulInfo.children.children.children'
  | 'helpfulInfo.children.children.id'
  | 'helpfulInfo.children.id'
  | 'helpfulInfo.children.internal.content'
  | 'helpfulInfo.children.internal.contentDigest'
  | 'helpfulInfo.children.internal.contentFilePath'
  | 'helpfulInfo.children.internal.description'
  | 'helpfulInfo.children.internal.fieldOwners'
  | 'helpfulInfo.children.internal.ignoreType'
  | 'helpfulInfo.children.internal.mediaType'
  | 'helpfulInfo.children.internal.owner'
  | 'helpfulInfo.children.internal.type'
  | 'helpfulInfo.children.parent.children'
  | 'helpfulInfo.children.parent.id'
  | 'helpfulInfo.createdAt'
  | 'helpfulInfo.createdBy.children'
  | 'helpfulInfo.createdBy.children.children'
  | 'helpfulInfo.createdBy.children.id'
  | 'helpfulInfo.createdBy.createdAt'
  | 'helpfulInfo.createdBy.id'
  | 'helpfulInfo.createdBy.internal.content'
  | 'helpfulInfo.createdBy.internal.contentDigest'
  | 'helpfulInfo.createdBy.internal.contentFilePath'
  | 'helpfulInfo.createdBy.internal.description'
  | 'helpfulInfo.createdBy.internal.fieldOwners'
  | 'helpfulInfo.createdBy.internal.ignoreType'
  | 'helpfulInfo.createdBy.internal.mediaType'
  | 'helpfulInfo.createdBy.internal.owner'
  | 'helpfulInfo.createdBy.internal.type'
  | 'helpfulInfo.createdBy.isActive'
  | 'helpfulInfo.createdBy.kind'
  | 'helpfulInfo.createdBy.name'
  | 'helpfulInfo.createdBy.parent.children'
  | 'helpfulInfo.createdBy.parent.id'
  | 'helpfulInfo.createdBy.picture'
  | 'helpfulInfo.createdBy.publishedAt'
  | 'helpfulInfo.createdBy.remoteId'
  | 'helpfulInfo.createdBy.remoteTypeName'
  | 'helpfulInfo.createdBy.stage'
  | 'helpfulInfo.createdBy.updatedAt'
  | 'helpfulInfo.id'
  | 'helpfulInfo.info.html'
  | 'helpfulInfo.info.markdown'
  | 'helpfulInfo.info.raw'
  | 'helpfulInfo.info.remoteTypeName'
  | 'helpfulInfo.info.text'
  | 'helpfulInfo.internal.content'
  | 'helpfulInfo.internal.contentDigest'
  | 'helpfulInfo.internal.contentFilePath'
  | 'helpfulInfo.internal.description'
  | 'helpfulInfo.internal.fieldOwners'
  | 'helpfulInfo.internal.ignoreType'
  | 'helpfulInfo.internal.mediaType'
  | 'helpfulInfo.internal.owner'
  | 'helpfulInfo.internal.type'
  | 'helpfulInfo.locale'
  | 'helpfulInfo.parent.children'
  | 'helpfulInfo.parent.children.children'
  | 'helpfulInfo.parent.children.id'
  | 'helpfulInfo.parent.id'
  | 'helpfulInfo.parent.internal.content'
  | 'helpfulInfo.parent.internal.contentDigest'
  | 'helpfulInfo.parent.internal.contentFilePath'
  | 'helpfulInfo.parent.internal.description'
  | 'helpfulInfo.parent.internal.fieldOwners'
  | 'helpfulInfo.parent.internal.ignoreType'
  | 'helpfulInfo.parent.internal.mediaType'
  | 'helpfulInfo.parent.internal.owner'
  | 'helpfulInfo.parent.internal.type'
  | 'helpfulInfo.parent.parent.children'
  | 'helpfulInfo.parent.parent.id'
  | 'helpfulInfo.publishedAt'
  | 'helpfulInfo.publishedBy.children'
  | 'helpfulInfo.publishedBy.children.children'
  | 'helpfulInfo.publishedBy.children.id'
  | 'helpfulInfo.publishedBy.createdAt'
  | 'helpfulInfo.publishedBy.id'
  | 'helpfulInfo.publishedBy.internal.content'
  | 'helpfulInfo.publishedBy.internal.contentDigest'
  | 'helpfulInfo.publishedBy.internal.contentFilePath'
  | 'helpfulInfo.publishedBy.internal.description'
  | 'helpfulInfo.publishedBy.internal.fieldOwners'
  | 'helpfulInfo.publishedBy.internal.ignoreType'
  | 'helpfulInfo.publishedBy.internal.mediaType'
  | 'helpfulInfo.publishedBy.internal.owner'
  | 'helpfulInfo.publishedBy.internal.type'
  | 'helpfulInfo.publishedBy.isActive'
  | 'helpfulInfo.publishedBy.kind'
  | 'helpfulInfo.publishedBy.name'
  | 'helpfulInfo.publishedBy.parent.children'
  | 'helpfulInfo.publishedBy.parent.id'
  | 'helpfulInfo.publishedBy.picture'
  | 'helpfulInfo.publishedBy.publishedAt'
  | 'helpfulInfo.publishedBy.remoteId'
  | 'helpfulInfo.publishedBy.remoteTypeName'
  | 'helpfulInfo.publishedBy.stage'
  | 'helpfulInfo.publishedBy.updatedAt'
  | 'helpfulInfo.remoteId'
  | 'helpfulInfo.remoteTypeName'
  | 'helpfulInfo.scheduledIn'
  | 'helpfulInfo.scheduledIn.children'
  | 'helpfulInfo.scheduledIn.children.children'
  | 'helpfulInfo.scheduledIn.children.id'
  | 'helpfulInfo.scheduledIn.createdAt'
  | 'helpfulInfo.scheduledIn.createdBy.children'
  | 'helpfulInfo.scheduledIn.createdBy.createdAt'
  | 'helpfulInfo.scheduledIn.createdBy.id'
  | 'helpfulInfo.scheduledIn.createdBy.isActive'
  | 'helpfulInfo.scheduledIn.createdBy.kind'
  | 'helpfulInfo.scheduledIn.createdBy.name'
  | 'helpfulInfo.scheduledIn.createdBy.picture'
  | 'helpfulInfo.scheduledIn.createdBy.publishedAt'
  | 'helpfulInfo.scheduledIn.createdBy.remoteId'
  | 'helpfulInfo.scheduledIn.createdBy.remoteTypeName'
  | 'helpfulInfo.scheduledIn.createdBy.stage'
  | 'helpfulInfo.scheduledIn.createdBy.updatedAt'
  | 'helpfulInfo.scheduledIn.description'
  | 'helpfulInfo.scheduledIn.errorMessage'
  | 'helpfulInfo.scheduledIn.id'
  | 'helpfulInfo.scheduledIn.internal.content'
  | 'helpfulInfo.scheduledIn.internal.contentDigest'
  | 'helpfulInfo.scheduledIn.internal.contentFilePath'
  | 'helpfulInfo.scheduledIn.internal.description'
  | 'helpfulInfo.scheduledIn.internal.fieldOwners'
  | 'helpfulInfo.scheduledIn.internal.ignoreType'
  | 'helpfulInfo.scheduledIn.internal.mediaType'
  | 'helpfulInfo.scheduledIn.internal.owner'
  | 'helpfulInfo.scheduledIn.internal.type'
  | 'helpfulInfo.scheduledIn.parent.children'
  | 'helpfulInfo.scheduledIn.parent.id'
  | 'helpfulInfo.scheduledIn.publishedAt'
  | 'helpfulInfo.scheduledIn.publishedBy.children'
  | 'helpfulInfo.scheduledIn.publishedBy.createdAt'
  | 'helpfulInfo.scheduledIn.publishedBy.id'
  | 'helpfulInfo.scheduledIn.publishedBy.isActive'
  | 'helpfulInfo.scheduledIn.publishedBy.kind'
  | 'helpfulInfo.scheduledIn.publishedBy.name'
  | 'helpfulInfo.scheduledIn.publishedBy.picture'
  | 'helpfulInfo.scheduledIn.publishedBy.publishedAt'
  | 'helpfulInfo.scheduledIn.publishedBy.remoteId'
  | 'helpfulInfo.scheduledIn.publishedBy.remoteTypeName'
  | 'helpfulInfo.scheduledIn.publishedBy.stage'
  | 'helpfulInfo.scheduledIn.publishedBy.updatedAt'
  | 'helpfulInfo.scheduledIn.rawPayload'
  | 'helpfulInfo.scheduledIn.release.children'
  | 'helpfulInfo.scheduledIn.release.createdAt'
  | 'helpfulInfo.scheduledIn.release.description'
  | 'helpfulInfo.scheduledIn.release.errorMessage'
  | 'helpfulInfo.scheduledIn.release.id'
  | 'helpfulInfo.scheduledIn.release.isActive'
  | 'helpfulInfo.scheduledIn.release.isImplicit'
  | 'helpfulInfo.scheduledIn.release.operations'
  | 'helpfulInfo.scheduledIn.release.publishedAt'
  | 'helpfulInfo.scheduledIn.release.releaseAt'
  | 'helpfulInfo.scheduledIn.release.remoteId'
  | 'helpfulInfo.scheduledIn.release.remoteTypeName'
  | 'helpfulInfo.scheduledIn.release.stage'
  | 'helpfulInfo.scheduledIn.release.status'
  | 'helpfulInfo.scheduledIn.release.title'
  | 'helpfulInfo.scheduledIn.release.updatedAt'
  | 'helpfulInfo.scheduledIn.remoteId'
  | 'helpfulInfo.scheduledIn.remoteTypeName'
  | 'helpfulInfo.scheduledIn.stage'
  | 'helpfulInfo.scheduledIn.status'
  | 'helpfulInfo.scheduledIn.updatedAt'
  | 'helpfulInfo.scheduledIn.updatedBy.children'
  | 'helpfulInfo.scheduledIn.updatedBy.createdAt'
  | 'helpfulInfo.scheduledIn.updatedBy.id'
  | 'helpfulInfo.scheduledIn.updatedBy.isActive'
  | 'helpfulInfo.scheduledIn.updatedBy.kind'
  | 'helpfulInfo.scheduledIn.updatedBy.name'
  | 'helpfulInfo.scheduledIn.updatedBy.picture'
  | 'helpfulInfo.scheduledIn.updatedBy.publishedAt'
  | 'helpfulInfo.scheduledIn.updatedBy.remoteId'
  | 'helpfulInfo.scheduledIn.updatedBy.remoteTypeName'
  | 'helpfulInfo.scheduledIn.updatedBy.stage'
  | 'helpfulInfo.scheduledIn.updatedBy.updatedAt'
  | 'helpfulInfo.stage'
  | 'helpfulInfo.stageNumber'
  | 'helpfulInfo.updatedAt'
  | 'helpfulInfo.updatedBy.children'
  | 'helpfulInfo.updatedBy.children.children'
  | 'helpfulInfo.updatedBy.children.id'
  | 'helpfulInfo.updatedBy.createdAt'
  | 'helpfulInfo.updatedBy.id'
  | 'helpfulInfo.updatedBy.internal.content'
  | 'helpfulInfo.updatedBy.internal.contentDigest'
  | 'helpfulInfo.updatedBy.internal.contentFilePath'
  | 'helpfulInfo.updatedBy.internal.description'
  | 'helpfulInfo.updatedBy.internal.fieldOwners'
  | 'helpfulInfo.updatedBy.internal.ignoreType'
  | 'helpfulInfo.updatedBy.internal.mediaType'
  | 'helpfulInfo.updatedBy.internal.owner'
  | 'helpfulInfo.updatedBy.internal.type'
  | 'helpfulInfo.updatedBy.isActive'
  | 'helpfulInfo.updatedBy.kind'
  | 'helpfulInfo.updatedBy.name'
  | 'helpfulInfo.updatedBy.parent.children'
  | 'helpfulInfo.updatedBy.parent.id'
  | 'helpfulInfo.updatedBy.picture'
  | 'helpfulInfo.updatedBy.publishedAt'
  | 'helpfulInfo.updatedBy.remoteId'
  | 'helpfulInfo.updatedBy.remoteTypeName'
  | 'helpfulInfo.updatedBy.stage'
  | 'helpfulInfo.updatedBy.updatedAt'
  | 'id'
  | 'info.html'
  | 'info.markdown'
  | 'info.raw'
  | 'info.remoteTypeName'
  | 'info.text'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'intro'
  | 'locale'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'publishedAt'
  | 'publishedBy.children'
  | 'publishedBy.children.children'
  | 'publishedBy.children.children.children'
  | 'publishedBy.children.children.id'
  | 'publishedBy.children.id'
  | 'publishedBy.children.internal.content'
  | 'publishedBy.children.internal.contentDigest'
  | 'publishedBy.children.internal.contentFilePath'
  | 'publishedBy.children.internal.description'
  | 'publishedBy.children.internal.fieldOwners'
  | 'publishedBy.children.internal.ignoreType'
  | 'publishedBy.children.internal.mediaType'
  | 'publishedBy.children.internal.owner'
  | 'publishedBy.children.internal.type'
  | 'publishedBy.children.parent.children'
  | 'publishedBy.children.parent.id'
  | 'publishedBy.createdAt'
  | 'publishedBy.id'
  | 'publishedBy.internal.content'
  | 'publishedBy.internal.contentDigest'
  | 'publishedBy.internal.contentFilePath'
  | 'publishedBy.internal.description'
  | 'publishedBy.internal.fieldOwners'
  | 'publishedBy.internal.ignoreType'
  | 'publishedBy.internal.mediaType'
  | 'publishedBy.internal.owner'
  | 'publishedBy.internal.type'
  | 'publishedBy.isActive'
  | 'publishedBy.kind'
  | 'publishedBy.name'
  | 'publishedBy.parent.children'
  | 'publishedBy.parent.children.children'
  | 'publishedBy.parent.children.id'
  | 'publishedBy.parent.id'
  | 'publishedBy.parent.internal.content'
  | 'publishedBy.parent.internal.contentDigest'
  | 'publishedBy.parent.internal.contentFilePath'
  | 'publishedBy.parent.internal.description'
  | 'publishedBy.parent.internal.fieldOwners'
  | 'publishedBy.parent.internal.ignoreType'
  | 'publishedBy.parent.internal.mediaType'
  | 'publishedBy.parent.internal.owner'
  | 'publishedBy.parent.internal.type'
  | 'publishedBy.parent.parent.children'
  | 'publishedBy.parent.parent.id'
  | 'publishedBy.picture'
  | 'publishedBy.publishedAt'
  | 'publishedBy.remoteId'
  | 'publishedBy.remoteTypeName'
  | 'publishedBy.stage'
  | 'publishedBy.updatedAt'
  | 'remoteId'
  | 'remoteTypeName'
  | 'scheduledIn'
  | 'scheduledIn.children'
  | 'scheduledIn.children.children'
  | 'scheduledIn.children.children.children'
  | 'scheduledIn.children.children.id'
  | 'scheduledIn.children.id'
  | 'scheduledIn.children.internal.content'
  | 'scheduledIn.children.internal.contentDigest'
  | 'scheduledIn.children.internal.contentFilePath'
  | 'scheduledIn.children.internal.description'
  | 'scheduledIn.children.internal.fieldOwners'
  | 'scheduledIn.children.internal.ignoreType'
  | 'scheduledIn.children.internal.mediaType'
  | 'scheduledIn.children.internal.owner'
  | 'scheduledIn.children.internal.type'
  | 'scheduledIn.children.parent.children'
  | 'scheduledIn.children.parent.id'
  | 'scheduledIn.createdAt'
  | 'scheduledIn.createdBy.children'
  | 'scheduledIn.createdBy.children.children'
  | 'scheduledIn.createdBy.children.id'
  | 'scheduledIn.createdBy.createdAt'
  | 'scheduledIn.createdBy.id'
  | 'scheduledIn.createdBy.internal.content'
  | 'scheduledIn.createdBy.internal.contentDigest'
  | 'scheduledIn.createdBy.internal.contentFilePath'
  | 'scheduledIn.createdBy.internal.description'
  | 'scheduledIn.createdBy.internal.fieldOwners'
  | 'scheduledIn.createdBy.internal.ignoreType'
  | 'scheduledIn.createdBy.internal.mediaType'
  | 'scheduledIn.createdBy.internal.owner'
  | 'scheduledIn.createdBy.internal.type'
  | 'scheduledIn.createdBy.isActive'
  | 'scheduledIn.createdBy.kind'
  | 'scheduledIn.createdBy.name'
  | 'scheduledIn.createdBy.parent.children'
  | 'scheduledIn.createdBy.parent.id'
  | 'scheduledIn.createdBy.picture'
  | 'scheduledIn.createdBy.publishedAt'
  | 'scheduledIn.createdBy.remoteId'
  | 'scheduledIn.createdBy.remoteTypeName'
  | 'scheduledIn.createdBy.stage'
  | 'scheduledIn.createdBy.updatedAt'
  | 'scheduledIn.description'
  | 'scheduledIn.errorMessage'
  | 'scheduledIn.id'
  | 'scheduledIn.internal.content'
  | 'scheduledIn.internal.contentDigest'
  | 'scheduledIn.internal.contentFilePath'
  | 'scheduledIn.internal.description'
  | 'scheduledIn.internal.fieldOwners'
  | 'scheduledIn.internal.ignoreType'
  | 'scheduledIn.internal.mediaType'
  | 'scheduledIn.internal.owner'
  | 'scheduledIn.internal.type'
  | 'scheduledIn.parent.children'
  | 'scheduledIn.parent.children.children'
  | 'scheduledIn.parent.children.id'
  | 'scheduledIn.parent.id'
  | 'scheduledIn.parent.internal.content'
  | 'scheduledIn.parent.internal.contentDigest'
  | 'scheduledIn.parent.internal.contentFilePath'
  | 'scheduledIn.parent.internal.description'
  | 'scheduledIn.parent.internal.fieldOwners'
  | 'scheduledIn.parent.internal.ignoreType'
  | 'scheduledIn.parent.internal.mediaType'
  | 'scheduledIn.parent.internal.owner'
  | 'scheduledIn.parent.internal.type'
  | 'scheduledIn.parent.parent.children'
  | 'scheduledIn.parent.parent.id'
  | 'scheduledIn.publishedAt'
  | 'scheduledIn.publishedBy.children'
  | 'scheduledIn.publishedBy.children.children'
  | 'scheduledIn.publishedBy.children.id'
  | 'scheduledIn.publishedBy.createdAt'
  | 'scheduledIn.publishedBy.id'
  | 'scheduledIn.publishedBy.internal.content'
  | 'scheduledIn.publishedBy.internal.contentDigest'
  | 'scheduledIn.publishedBy.internal.contentFilePath'
  | 'scheduledIn.publishedBy.internal.description'
  | 'scheduledIn.publishedBy.internal.fieldOwners'
  | 'scheduledIn.publishedBy.internal.ignoreType'
  | 'scheduledIn.publishedBy.internal.mediaType'
  | 'scheduledIn.publishedBy.internal.owner'
  | 'scheduledIn.publishedBy.internal.type'
  | 'scheduledIn.publishedBy.isActive'
  | 'scheduledIn.publishedBy.kind'
  | 'scheduledIn.publishedBy.name'
  | 'scheduledIn.publishedBy.parent.children'
  | 'scheduledIn.publishedBy.parent.id'
  | 'scheduledIn.publishedBy.picture'
  | 'scheduledIn.publishedBy.publishedAt'
  | 'scheduledIn.publishedBy.remoteId'
  | 'scheduledIn.publishedBy.remoteTypeName'
  | 'scheduledIn.publishedBy.stage'
  | 'scheduledIn.publishedBy.updatedAt'
  | 'scheduledIn.rawPayload'
  | 'scheduledIn.release.children'
  | 'scheduledIn.release.children.children'
  | 'scheduledIn.release.children.id'
  | 'scheduledIn.release.createdAt'
  | 'scheduledIn.release.createdBy.children'
  | 'scheduledIn.release.createdBy.createdAt'
  | 'scheduledIn.release.createdBy.id'
  | 'scheduledIn.release.createdBy.isActive'
  | 'scheduledIn.release.createdBy.kind'
  | 'scheduledIn.release.createdBy.name'
  | 'scheduledIn.release.createdBy.picture'
  | 'scheduledIn.release.createdBy.publishedAt'
  | 'scheduledIn.release.createdBy.remoteId'
  | 'scheduledIn.release.createdBy.remoteTypeName'
  | 'scheduledIn.release.createdBy.stage'
  | 'scheduledIn.release.createdBy.updatedAt'
  | 'scheduledIn.release.description'
  | 'scheduledIn.release.errorMessage'
  | 'scheduledIn.release.id'
  | 'scheduledIn.release.internal.content'
  | 'scheduledIn.release.internal.contentDigest'
  | 'scheduledIn.release.internal.contentFilePath'
  | 'scheduledIn.release.internal.description'
  | 'scheduledIn.release.internal.fieldOwners'
  | 'scheduledIn.release.internal.ignoreType'
  | 'scheduledIn.release.internal.mediaType'
  | 'scheduledIn.release.internal.owner'
  | 'scheduledIn.release.internal.type'
  | 'scheduledIn.release.isActive'
  | 'scheduledIn.release.isImplicit'
  | 'scheduledIn.release.operations'
  | 'scheduledIn.release.operations.children'
  | 'scheduledIn.release.operations.createdAt'
  | 'scheduledIn.release.operations.description'
  | 'scheduledIn.release.operations.errorMessage'
  | 'scheduledIn.release.operations.id'
  | 'scheduledIn.release.operations.publishedAt'
  | 'scheduledIn.release.operations.rawPayload'
  | 'scheduledIn.release.operations.remoteId'
  | 'scheduledIn.release.operations.remoteTypeName'
  | 'scheduledIn.release.operations.stage'
  | 'scheduledIn.release.operations.status'
  | 'scheduledIn.release.operations.updatedAt'
  | 'scheduledIn.release.parent.children'
  | 'scheduledIn.release.parent.id'
  | 'scheduledIn.release.publishedAt'
  | 'scheduledIn.release.publishedBy.children'
  | 'scheduledIn.release.publishedBy.createdAt'
  | 'scheduledIn.release.publishedBy.id'
  | 'scheduledIn.release.publishedBy.isActive'
  | 'scheduledIn.release.publishedBy.kind'
  | 'scheduledIn.release.publishedBy.name'
  | 'scheduledIn.release.publishedBy.picture'
  | 'scheduledIn.release.publishedBy.publishedAt'
  | 'scheduledIn.release.publishedBy.remoteId'
  | 'scheduledIn.release.publishedBy.remoteTypeName'
  | 'scheduledIn.release.publishedBy.stage'
  | 'scheduledIn.release.publishedBy.updatedAt'
  | 'scheduledIn.release.releaseAt'
  | 'scheduledIn.release.remoteId'
  | 'scheduledIn.release.remoteTypeName'
  | 'scheduledIn.release.stage'
  | 'scheduledIn.release.status'
  | 'scheduledIn.release.title'
  | 'scheduledIn.release.updatedAt'
  | 'scheduledIn.release.updatedBy.children'
  | 'scheduledIn.release.updatedBy.createdAt'
  | 'scheduledIn.release.updatedBy.id'
  | 'scheduledIn.release.updatedBy.isActive'
  | 'scheduledIn.release.updatedBy.kind'
  | 'scheduledIn.release.updatedBy.name'
  | 'scheduledIn.release.updatedBy.picture'
  | 'scheduledIn.release.updatedBy.publishedAt'
  | 'scheduledIn.release.updatedBy.remoteId'
  | 'scheduledIn.release.updatedBy.remoteTypeName'
  | 'scheduledIn.release.updatedBy.stage'
  | 'scheduledIn.release.updatedBy.updatedAt'
  | 'scheduledIn.remoteId'
  | 'scheduledIn.remoteTypeName'
  | 'scheduledIn.stage'
  | 'scheduledIn.status'
  | 'scheduledIn.updatedAt'
  | 'scheduledIn.updatedBy.children'
  | 'scheduledIn.updatedBy.children.children'
  | 'scheduledIn.updatedBy.children.id'
  | 'scheduledIn.updatedBy.createdAt'
  | 'scheduledIn.updatedBy.id'
  | 'scheduledIn.updatedBy.internal.content'
  | 'scheduledIn.updatedBy.internal.contentDigest'
  | 'scheduledIn.updatedBy.internal.contentFilePath'
  | 'scheduledIn.updatedBy.internal.description'
  | 'scheduledIn.updatedBy.internal.fieldOwners'
  | 'scheduledIn.updatedBy.internal.ignoreType'
  | 'scheduledIn.updatedBy.internal.mediaType'
  | 'scheduledIn.updatedBy.internal.owner'
  | 'scheduledIn.updatedBy.internal.type'
  | 'scheduledIn.updatedBy.isActive'
  | 'scheduledIn.updatedBy.kind'
  | 'scheduledIn.updatedBy.name'
  | 'scheduledIn.updatedBy.parent.children'
  | 'scheduledIn.updatedBy.parent.id'
  | 'scheduledIn.updatedBy.picture'
  | 'scheduledIn.updatedBy.publishedAt'
  | 'scheduledIn.updatedBy.remoteId'
  | 'scheduledIn.updatedBy.remoteTypeName'
  | 'scheduledIn.updatedBy.stage'
  | 'scheduledIn.updatedBy.updatedAt'
  | 'slug'
  | 'stage'
  | 'stageNumber'
  | 'tips.html'
  | 'tips.markdown'
  | 'tips.raw'
  | 'tips.remoteTypeName'
  | 'tips.text'
  | 'title'
  | 'updatedAt'
  | 'updatedBy.children'
  | 'updatedBy.children.children'
  | 'updatedBy.children.children.children'
  | 'updatedBy.children.children.id'
  | 'updatedBy.children.id'
  | 'updatedBy.children.internal.content'
  | 'updatedBy.children.internal.contentDigest'
  | 'updatedBy.children.internal.contentFilePath'
  | 'updatedBy.children.internal.description'
  | 'updatedBy.children.internal.fieldOwners'
  | 'updatedBy.children.internal.ignoreType'
  | 'updatedBy.children.internal.mediaType'
  | 'updatedBy.children.internal.owner'
  | 'updatedBy.children.internal.type'
  | 'updatedBy.children.parent.children'
  | 'updatedBy.children.parent.id'
  | 'updatedBy.createdAt'
  | 'updatedBy.id'
  | 'updatedBy.internal.content'
  | 'updatedBy.internal.contentDigest'
  | 'updatedBy.internal.contentFilePath'
  | 'updatedBy.internal.description'
  | 'updatedBy.internal.fieldOwners'
  | 'updatedBy.internal.ignoreType'
  | 'updatedBy.internal.mediaType'
  | 'updatedBy.internal.owner'
  | 'updatedBy.internal.type'
  | 'updatedBy.isActive'
  | 'updatedBy.kind'
  | 'updatedBy.name'
  | 'updatedBy.parent.children'
  | 'updatedBy.parent.children.children'
  | 'updatedBy.parent.children.id'
  | 'updatedBy.parent.id'
  | 'updatedBy.parent.internal.content'
  | 'updatedBy.parent.internal.contentDigest'
  | 'updatedBy.parent.internal.contentFilePath'
  | 'updatedBy.parent.internal.description'
  | 'updatedBy.parent.internal.fieldOwners'
  | 'updatedBy.parent.internal.ignoreType'
  | 'updatedBy.parent.internal.mediaType'
  | 'updatedBy.parent.internal.owner'
  | 'updatedBy.parent.internal.type'
  | 'updatedBy.parent.parent.children'
  | 'updatedBy.parent.parent.id'
  | 'updatedBy.picture'
  | 'updatedBy.publishedAt'
  | 'updatedBy.remoteId'
  | 'updatedBy.remoteTypeName'
  | 'updatedBy.stage'
  | 'updatedBy.updatedAt';

type GraphCMS_PresentationTipsPageFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly createdAt: InputMaybe<JSONQueryOperatorInput>;
  readonly createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly helpfulInfo: InputMaybe<GraphCMS_HelpfulInfoFilterInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly info: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly intro: InputMaybe<StringQueryOperatorInput>;
  readonly locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly publishedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly remoteId: InputMaybe<IDQueryOperatorInput>;
  readonly remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  readonly scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  readonly stageNumber: InputMaybe<IntQueryOperatorInput>;
  readonly tips: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly updatedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};

type GraphCMS_PresentationTipsPageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_PresentationTipsPageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<GraphCMS_PresentationTipsPageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_PresentationTipsPage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_PresentationTipsPageGroupConnection_distinctArgs = {
  field: GraphCMS_PresentationTipsPageFieldsEnum;
};


type GraphCMS_PresentationTipsPageGroupConnection_groupArgs = {
  field: GraphCMS_PresentationTipsPageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_PresentationTipsPageGroupConnection_maxArgs = {
  field: GraphCMS_PresentationTipsPageFieldsEnum;
};


type GraphCMS_PresentationTipsPageGroupConnection_minArgs = {
  field: GraphCMS_PresentationTipsPageFieldsEnum;
};


type GraphCMS_PresentationTipsPageGroupConnection_sumArgs = {
  field: GraphCMS_PresentationTipsPageFieldsEnum;
};

type GraphCMS_PresentationTipsPageSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_PresentationTipsPageFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type GraphCMS_RichText = {
  readonly html: Scalars['String'];
  readonly markdown: Scalars['String'];
  readonly raw: Scalars['JSON'];
  readonly remoteTypeName: Scalars['String'];
  readonly text: Scalars['String'];
};

type GraphCMS_RichTextFilterInput = {
  readonly html: InputMaybe<StringQueryOperatorInput>;
  readonly markdown: InputMaybe<StringQueryOperatorInput>;
  readonly raw: InputMaybe<JSONQueryOperatorInput>;
  readonly remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  readonly text: InputMaybe<StringQueryOperatorInput>;
};

type GraphCMS_RichTextFilterListInput = {
  readonly elemMatch: InputMaybe<GraphCMS_RichTextFilterInput>;
};

type GraphCMS_ScheduledOperation = Node & {
  readonly affectedDocuments: ReadonlyArray<GraphCMS_ScheduledOperationAffectedDocument>;
  readonly children: ReadonlyArray<Node>;
  readonly createdAt: Scalars['JSON'];
  readonly createdBy: Maybe<GraphCMS_User>;
  readonly description: Maybe<Scalars['String']>;
  readonly errorMessage: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly publishedAt: Maybe<Scalars['JSON']>;
  readonly publishedBy: Maybe<GraphCMS_User>;
  readonly rawPayload: Scalars['JSON'];
  readonly release: Maybe<GraphCMS_ScheduledRelease>;
  readonly remoteId: Scalars['ID'];
  readonly remoteTypeName: Scalars['String'];
  readonly stage: GraphCMS_Stage;
  readonly status: GraphCMS_ScheduledOperationStatus;
  readonly updatedAt: Scalars['JSON'];
  readonly updatedBy: Maybe<GraphCMS_User>;
};

type GraphCMS_ScheduledOperationAffectedDocument = GraphCMS_Asset | GraphCMS_DevelopmentOption | GraphCMS_HelpfulInfo | GraphCMS_Info | GraphCMS_ModelBusinessPlan | GraphCMS_ModelSwot | GraphCMS_PresentationTipsPage | GraphCMS_StageLandingPage | GraphCMS_StageTask | GraphCMS_StageTaskPage | GraphCMS_TaskToComplete;

type GraphCMS_ScheduledOperationConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_ScheduledOperationEdge>;
  readonly group: ReadonlyArray<GraphCMS_ScheduledOperationGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_ScheduledOperation>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_ScheduledOperationConnection_distinctArgs = {
  field: GraphCMS_ScheduledOperationFieldsEnum;
};


type GraphCMS_ScheduledOperationConnection_groupArgs = {
  field: GraphCMS_ScheduledOperationFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_ScheduledOperationConnection_maxArgs = {
  field: GraphCMS_ScheduledOperationFieldsEnum;
};


type GraphCMS_ScheduledOperationConnection_minArgs = {
  field: GraphCMS_ScheduledOperationFieldsEnum;
};


type GraphCMS_ScheduledOperationConnection_sumArgs = {
  field: GraphCMS_ScheduledOperationFieldsEnum;
};

type GraphCMS_ScheduledOperationEdge = {
  readonly next: Maybe<GraphCMS_ScheduledOperation>;
  readonly node: GraphCMS_ScheduledOperation;
  readonly previous: Maybe<GraphCMS_ScheduledOperation>;
};

type GraphCMS_ScheduledOperationFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'createdAt'
  | 'createdBy.children'
  | 'createdBy.children.children'
  | 'createdBy.children.children.children'
  | 'createdBy.children.children.id'
  | 'createdBy.children.id'
  | 'createdBy.children.internal.content'
  | 'createdBy.children.internal.contentDigest'
  | 'createdBy.children.internal.contentFilePath'
  | 'createdBy.children.internal.description'
  | 'createdBy.children.internal.fieldOwners'
  | 'createdBy.children.internal.ignoreType'
  | 'createdBy.children.internal.mediaType'
  | 'createdBy.children.internal.owner'
  | 'createdBy.children.internal.type'
  | 'createdBy.children.parent.children'
  | 'createdBy.children.parent.id'
  | 'createdBy.createdAt'
  | 'createdBy.id'
  | 'createdBy.internal.content'
  | 'createdBy.internal.contentDigest'
  | 'createdBy.internal.contentFilePath'
  | 'createdBy.internal.description'
  | 'createdBy.internal.fieldOwners'
  | 'createdBy.internal.ignoreType'
  | 'createdBy.internal.mediaType'
  | 'createdBy.internal.owner'
  | 'createdBy.internal.type'
  | 'createdBy.isActive'
  | 'createdBy.kind'
  | 'createdBy.name'
  | 'createdBy.parent.children'
  | 'createdBy.parent.children.children'
  | 'createdBy.parent.children.id'
  | 'createdBy.parent.id'
  | 'createdBy.parent.internal.content'
  | 'createdBy.parent.internal.contentDigest'
  | 'createdBy.parent.internal.contentFilePath'
  | 'createdBy.parent.internal.description'
  | 'createdBy.parent.internal.fieldOwners'
  | 'createdBy.parent.internal.ignoreType'
  | 'createdBy.parent.internal.mediaType'
  | 'createdBy.parent.internal.owner'
  | 'createdBy.parent.internal.type'
  | 'createdBy.parent.parent.children'
  | 'createdBy.parent.parent.id'
  | 'createdBy.picture'
  | 'createdBy.publishedAt'
  | 'createdBy.remoteId'
  | 'createdBy.remoteTypeName'
  | 'createdBy.stage'
  | 'createdBy.updatedAt'
  | 'description'
  | 'errorMessage'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'publishedAt'
  | 'publishedBy.children'
  | 'publishedBy.children.children'
  | 'publishedBy.children.children.children'
  | 'publishedBy.children.children.id'
  | 'publishedBy.children.id'
  | 'publishedBy.children.internal.content'
  | 'publishedBy.children.internal.contentDigest'
  | 'publishedBy.children.internal.contentFilePath'
  | 'publishedBy.children.internal.description'
  | 'publishedBy.children.internal.fieldOwners'
  | 'publishedBy.children.internal.ignoreType'
  | 'publishedBy.children.internal.mediaType'
  | 'publishedBy.children.internal.owner'
  | 'publishedBy.children.internal.type'
  | 'publishedBy.children.parent.children'
  | 'publishedBy.children.parent.id'
  | 'publishedBy.createdAt'
  | 'publishedBy.id'
  | 'publishedBy.internal.content'
  | 'publishedBy.internal.contentDigest'
  | 'publishedBy.internal.contentFilePath'
  | 'publishedBy.internal.description'
  | 'publishedBy.internal.fieldOwners'
  | 'publishedBy.internal.ignoreType'
  | 'publishedBy.internal.mediaType'
  | 'publishedBy.internal.owner'
  | 'publishedBy.internal.type'
  | 'publishedBy.isActive'
  | 'publishedBy.kind'
  | 'publishedBy.name'
  | 'publishedBy.parent.children'
  | 'publishedBy.parent.children.children'
  | 'publishedBy.parent.children.id'
  | 'publishedBy.parent.id'
  | 'publishedBy.parent.internal.content'
  | 'publishedBy.parent.internal.contentDigest'
  | 'publishedBy.parent.internal.contentFilePath'
  | 'publishedBy.parent.internal.description'
  | 'publishedBy.parent.internal.fieldOwners'
  | 'publishedBy.parent.internal.ignoreType'
  | 'publishedBy.parent.internal.mediaType'
  | 'publishedBy.parent.internal.owner'
  | 'publishedBy.parent.internal.type'
  | 'publishedBy.parent.parent.children'
  | 'publishedBy.parent.parent.id'
  | 'publishedBy.picture'
  | 'publishedBy.publishedAt'
  | 'publishedBy.remoteId'
  | 'publishedBy.remoteTypeName'
  | 'publishedBy.stage'
  | 'publishedBy.updatedAt'
  | 'rawPayload'
  | 'release.children'
  | 'release.children.children'
  | 'release.children.children.children'
  | 'release.children.children.id'
  | 'release.children.id'
  | 'release.children.internal.content'
  | 'release.children.internal.contentDigest'
  | 'release.children.internal.contentFilePath'
  | 'release.children.internal.description'
  | 'release.children.internal.fieldOwners'
  | 'release.children.internal.ignoreType'
  | 'release.children.internal.mediaType'
  | 'release.children.internal.owner'
  | 'release.children.internal.type'
  | 'release.children.parent.children'
  | 'release.children.parent.id'
  | 'release.createdAt'
  | 'release.createdBy.children'
  | 'release.createdBy.children.children'
  | 'release.createdBy.children.id'
  | 'release.createdBy.createdAt'
  | 'release.createdBy.id'
  | 'release.createdBy.internal.content'
  | 'release.createdBy.internal.contentDigest'
  | 'release.createdBy.internal.contentFilePath'
  | 'release.createdBy.internal.description'
  | 'release.createdBy.internal.fieldOwners'
  | 'release.createdBy.internal.ignoreType'
  | 'release.createdBy.internal.mediaType'
  | 'release.createdBy.internal.owner'
  | 'release.createdBy.internal.type'
  | 'release.createdBy.isActive'
  | 'release.createdBy.kind'
  | 'release.createdBy.name'
  | 'release.createdBy.parent.children'
  | 'release.createdBy.parent.id'
  | 'release.createdBy.picture'
  | 'release.createdBy.publishedAt'
  | 'release.createdBy.remoteId'
  | 'release.createdBy.remoteTypeName'
  | 'release.createdBy.stage'
  | 'release.createdBy.updatedAt'
  | 'release.description'
  | 'release.errorMessage'
  | 'release.id'
  | 'release.internal.content'
  | 'release.internal.contentDigest'
  | 'release.internal.contentFilePath'
  | 'release.internal.description'
  | 'release.internal.fieldOwners'
  | 'release.internal.ignoreType'
  | 'release.internal.mediaType'
  | 'release.internal.owner'
  | 'release.internal.type'
  | 'release.isActive'
  | 'release.isImplicit'
  | 'release.operations'
  | 'release.operations.children'
  | 'release.operations.children.children'
  | 'release.operations.children.id'
  | 'release.operations.createdAt'
  | 'release.operations.createdBy.children'
  | 'release.operations.createdBy.createdAt'
  | 'release.operations.createdBy.id'
  | 'release.operations.createdBy.isActive'
  | 'release.operations.createdBy.kind'
  | 'release.operations.createdBy.name'
  | 'release.operations.createdBy.picture'
  | 'release.operations.createdBy.publishedAt'
  | 'release.operations.createdBy.remoteId'
  | 'release.operations.createdBy.remoteTypeName'
  | 'release.operations.createdBy.stage'
  | 'release.operations.createdBy.updatedAt'
  | 'release.operations.description'
  | 'release.operations.errorMessage'
  | 'release.operations.id'
  | 'release.operations.internal.content'
  | 'release.operations.internal.contentDigest'
  | 'release.operations.internal.contentFilePath'
  | 'release.operations.internal.description'
  | 'release.operations.internal.fieldOwners'
  | 'release.operations.internal.ignoreType'
  | 'release.operations.internal.mediaType'
  | 'release.operations.internal.owner'
  | 'release.operations.internal.type'
  | 'release.operations.parent.children'
  | 'release.operations.parent.id'
  | 'release.operations.publishedAt'
  | 'release.operations.publishedBy.children'
  | 'release.operations.publishedBy.createdAt'
  | 'release.operations.publishedBy.id'
  | 'release.operations.publishedBy.isActive'
  | 'release.operations.publishedBy.kind'
  | 'release.operations.publishedBy.name'
  | 'release.operations.publishedBy.picture'
  | 'release.operations.publishedBy.publishedAt'
  | 'release.operations.publishedBy.remoteId'
  | 'release.operations.publishedBy.remoteTypeName'
  | 'release.operations.publishedBy.stage'
  | 'release.operations.publishedBy.updatedAt'
  | 'release.operations.rawPayload'
  | 'release.operations.release.children'
  | 'release.operations.release.createdAt'
  | 'release.operations.release.description'
  | 'release.operations.release.errorMessage'
  | 'release.operations.release.id'
  | 'release.operations.release.isActive'
  | 'release.operations.release.isImplicit'
  | 'release.operations.release.operations'
  | 'release.operations.release.publishedAt'
  | 'release.operations.release.releaseAt'
  | 'release.operations.release.remoteId'
  | 'release.operations.release.remoteTypeName'
  | 'release.operations.release.stage'
  | 'release.operations.release.status'
  | 'release.operations.release.title'
  | 'release.operations.release.updatedAt'
  | 'release.operations.remoteId'
  | 'release.operations.remoteTypeName'
  | 'release.operations.stage'
  | 'release.operations.status'
  | 'release.operations.updatedAt'
  | 'release.operations.updatedBy.children'
  | 'release.operations.updatedBy.createdAt'
  | 'release.operations.updatedBy.id'
  | 'release.operations.updatedBy.isActive'
  | 'release.operations.updatedBy.kind'
  | 'release.operations.updatedBy.name'
  | 'release.operations.updatedBy.picture'
  | 'release.operations.updatedBy.publishedAt'
  | 'release.operations.updatedBy.remoteId'
  | 'release.operations.updatedBy.remoteTypeName'
  | 'release.operations.updatedBy.stage'
  | 'release.operations.updatedBy.updatedAt'
  | 'release.parent.children'
  | 'release.parent.children.children'
  | 'release.parent.children.id'
  | 'release.parent.id'
  | 'release.parent.internal.content'
  | 'release.parent.internal.contentDigest'
  | 'release.parent.internal.contentFilePath'
  | 'release.parent.internal.description'
  | 'release.parent.internal.fieldOwners'
  | 'release.parent.internal.ignoreType'
  | 'release.parent.internal.mediaType'
  | 'release.parent.internal.owner'
  | 'release.parent.internal.type'
  | 'release.parent.parent.children'
  | 'release.parent.parent.id'
  | 'release.publishedAt'
  | 'release.publishedBy.children'
  | 'release.publishedBy.children.children'
  | 'release.publishedBy.children.id'
  | 'release.publishedBy.createdAt'
  | 'release.publishedBy.id'
  | 'release.publishedBy.internal.content'
  | 'release.publishedBy.internal.contentDigest'
  | 'release.publishedBy.internal.contentFilePath'
  | 'release.publishedBy.internal.description'
  | 'release.publishedBy.internal.fieldOwners'
  | 'release.publishedBy.internal.ignoreType'
  | 'release.publishedBy.internal.mediaType'
  | 'release.publishedBy.internal.owner'
  | 'release.publishedBy.internal.type'
  | 'release.publishedBy.isActive'
  | 'release.publishedBy.kind'
  | 'release.publishedBy.name'
  | 'release.publishedBy.parent.children'
  | 'release.publishedBy.parent.id'
  | 'release.publishedBy.picture'
  | 'release.publishedBy.publishedAt'
  | 'release.publishedBy.remoteId'
  | 'release.publishedBy.remoteTypeName'
  | 'release.publishedBy.stage'
  | 'release.publishedBy.updatedAt'
  | 'release.releaseAt'
  | 'release.remoteId'
  | 'release.remoteTypeName'
  | 'release.stage'
  | 'release.status'
  | 'release.title'
  | 'release.updatedAt'
  | 'release.updatedBy.children'
  | 'release.updatedBy.children.children'
  | 'release.updatedBy.children.id'
  | 'release.updatedBy.createdAt'
  | 'release.updatedBy.id'
  | 'release.updatedBy.internal.content'
  | 'release.updatedBy.internal.contentDigest'
  | 'release.updatedBy.internal.contentFilePath'
  | 'release.updatedBy.internal.description'
  | 'release.updatedBy.internal.fieldOwners'
  | 'release.updatedBy.internal.ignoreType'
  | 'release.updatedBy.internal.mediaType'
  | 'release.updatedBy.internal.owner'
  | 'release.updatedBy.internal.type'
  | 'release.updatedBy.isActive'
  | 'release.updatedBy.kind'
  | 'release.updatedBy.name'
  | 'release.updatedBy.parent.children'
  | 'release.updatedBy.parent.id'
  | 'release.updatedBy.picture'
  | 'release.updatedBy.publishedAt'
  | 'release.updatedBy.remoteId'
  | 'release.updatedBy.remoteTypeName'
  | 'release.updatedBy.stage'
  | 'release.updatedBy.updatedAt'
  | 'remoteId'
  | 'remoteTypeName'
  | 'stage'
  | 'status'
  | 'updatedAt'
  | 'updatedBy.children'
  | 'updatedBy.children.children'
  | 'updatedBy.children.children.children'
  | 'updatedBy.children.children.id'
  | 'updatedBy.children.id'
  | 'updatedBy.children.internal.content'
  | 'updatedBy.children.internal.contentDigest'
  | 'updatedBy.children.internal.contentFilePath'
  | 'updatedBy.children.internal.description'
  | 'updatedBy.children.internal.fieldOwners'
  | 'updatedBy.children.internal.ignoreType'
  | 'updatedBy.children.internal.mediaType'
  | 'updatedBy.children.internal.owner'
  | 'updatedBy.children.internal.type'
  | 'updatedBy.children.parent.children'
  | 'updatedBy.children.parent.id'
  | 'updatedBy.createdAt'
  | 'updatedBy.id'
  | 'updatedBy.internal.content'
  | 'updatedBy.internal.contentDigest'
  | 'updatedBy.internal.contentFilePath'
  | 'updatedBy.internal.description'
  | 'updatedBy.internal.fieldOwners'
  | 'updatedBy.internal.ignoreType'
  | 'updatedBy.internal.mediaType'
  | 'updatedBy.internal.owner'
  | 'updatedBy.internal.type'
  | 'updatedBy.isActive'
  | 'updatedBy.kind'
  | 'updatedBy.name'
  | 'updatedBy.parent.children'
  | 'updatedBy.parent.children.children'
  | 'updatedBy.parent.children.id'
  | 'updatedBy.parent.id'
  | 'updatedBy.parent.internal.content'
  | 'updatedBy.parent.internal.contentDigest'
  | 'updatedBy.parent.internal.contentFilePath'
  | 'updatedBy.parent.internal.description'
  | 'updatedBy.parent.internal.fieldOwners'
  | 'updatedBy.parent.internal.ignoreType'
  | 'updatedBy.parent.internal.mediaType'
  | 'updatedBy.parent.internal.owner'
  | 'updatedBy.parent.internal.type'
  | 'updatedBy.parent.parent.children'
  | 'updatedBy.parent.parent.id'
  | 'updatedBy.picture'
  | 'updatedBy.publishedAt'
  | 'updatedBy.remoteId'
  | 'updatedBy.remoteTypeName'
  | 'updatedBy.stage'
  | 'updatedBy.updatedAt';

type GraphCMS_ScheduledOperationFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly createdAt: InputMaybe<JSONQueryOperatorInput>;
  readonly createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly errorMessage: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly publishedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly rawPayload: InputMaybe<JSONQueryOperatorInput>;
  readonly release: InputMaybe<GraphCMS_ScheduledReleaseFilterInput>;
  readonly remoteId: InputMaybe<IDQueryOperatorInput>;
  readonly remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  readonly stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  readonly status: InputMaybe<GraphCMS_ScheduledOperationStatusQueryOperatorInput>;
  readonly updatedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};

type GraphCMS_ScheduledOperationFilterListInput = {
  readonly elemMatch: InputMaybe<GraphCMS_ScheduledOperationFilterInput>;
};

type GraphCMS_ScheduledOperationGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_ScheduledOperationEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<GraphCMS_ScheduledOperationGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_ScheduledOperation>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_ScheduledOperationGroupConnection_distinctArgs = {
  field: GraphCMS_ScheduledOperationFieldsEnum;
};


type GraphCMS_ScheduledOperationGroupConnection_groupArgs = {
  field: GraphCMS_ScheduledOperationFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_ScheduledOperationGroupConnection_maxArgs = {
  field: GraphCMS_ScheduledOperationFieldsEnum;
};


type GraphCMS_ScheduledOperationGroupConnection_minArgs = {
  field: GraphCMS_ScheduledOperationFieldsEnum;
};


type GraphCMS_ScheduledOperationGroupConnection_sumArgs = {
  field: GraphCMS_ScheduledOperationFieldsEnum;
};

type GraphCMS_ScheduledOperationSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_ScheduledOperationFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type GraphCMS_ScheduledOperationStatus =
  | 'CANCELED'
  | 'COMPLETED'
  | 'FAILED'
  | 'IN_PROGRESS'
  | 'PENDING';

type GraphCMS_ScheduledOperationStatusQueryOperatorInput = {
  readonly eq: InputMaybe<GraphCMS_ScheduledOperationStatus>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_ScheduledOperationStatus>>>;
  readonly ne: InputMaybe<GraphCMS_ScheduledOperationStatus>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_ScheduledOperationStatus>>>;
};

type GraphCMS_ScheduledRelease = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly createdAt: Scalars['JSON'];
  readonly createdBy: Maybe<GraphCMS_User>;
  readonly description: Maybe<Scalars['String']>;
  readonly errorMessage: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly isActive: Scalars['Boolean'];
  readonly isImplicit: Scalars['Boolean'];
  readonly operations: ReadonlyArray<GraphCMS_ScheduledOperation>;
  readonly parent: Maybe<Node>;
  readonly publishedAt: Maybe<Scalars['JSON']>;
  readonly publishedBy: Maybe<GraphCMS_User>;
  readonly releaseAt: Maybe<Scalars['JSON']>;
  readonly remoteId: Scalars['ID'];
  readonly remoteTypeName: Scalars['String'];
  readonly stage: GraphCMS_Stage;
  readonly status: GraphCMS_ScheduledReleaseStatus;
  readonly title: Maybe<Scalars['String']>;
  readonly updatedAt: Scalars['JSON'];
  readonly updatedBy: Maybe<GraphCMS_User>;
};

type GraphCMS_ScheduledReleaseConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_ScheduledReleaseEdge>;
  readonly group: ReadonlyArray<GraphCMS_ScheduledReleaseGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_ScheduledRelease>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_ScheduledReleaseConnection_distinctArgs = {
  field: GraphCMS_ScheduledReleaseFieldsEnum;
};


type GraphCMS_ScheduledReleaseConnection_groupArgs = {
  field: GraphCMS_ScheduledReleaseFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_ScheduledReleaseConnection_maxArgs = {
  field: GraphCMS_ScheduledReleaseFieldsEnum;
};


type GraphCMS_ScheduledReleaseConnection_minArgs = {
  field: GraphCMS_ScheduledReleaseFieldsEnum;
};


type GraphCMS_ScheduledReleaseConnection_sumArgs = {
  field: GraphCMS_ScheduledReleaseFieldsEnum;
};

type GraphCMS_ScheduledReleaseEdge = {
  readonly next: Maybe<GraphCMS_ScheduledRelease>;
  readonly node: GraphCMS_ScheduledRelease;
  readonly previous: Maybe<GraphCMS_ScheduledRelease>;
};

type GraphCMS_ScheduledReleaseFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'createdAt'
  | 'createdBy.children'
  | 'createdBy.children.children'
  | 'createdBy.children.children.children'
  | 'createdBy.children.children.id'
  | 'createdBy.children.id'
  | 'createdBy.children.internal.content'
  | 'createdBy.children.internal.contentDigest'
  | 'createdBy.children.internal.contentFilePath'
  | 'createdBy.children.internal.description'
  | 'createdBy.children.internal.fieldOwners'
  | 'createdBy.children.internal.ignoreType'
  | 'createdBy.children.internal.mediaType'
  | 'createdBy.children.internal.owner'
  | 'createdBy.children.internal.type'
  | 'createdBy.children.parent.children'
  | 'createdBy.children.parent.id'
  | 'createdBy.createdAt'
  | 'createdBy.id'
  | 'createdBy.internal.content'
  | 'createdBy.internal.contentDigest'
  | 'createdBy.internal.contentFilePath'
  | 'createdBy.internal.description'
  | 'createdBy.internal.fieldOwners'
  | 'createdBy.internal.ignoreType'
  | 'createdBy.internal.mediaType'
  | 'createdBy.internal.owner'
  | 'createdBy.internal.type'
  | 'createdBy.isActive'
  | 'createdBy.kind'
  | 'createdBy.name'
  | 'createdBy.parent.children'
  | 'createdBy.parent.children.children'
  | 'createdBy.parent.children.id'
  | 'createdBy.parent.id'
  | 'createdBy.parent.internal.content'
  | 'createdBy.parent.internal.contentDigest'
  | 'createdBy.parent.internal.contentFilePath'
  | 'createdBy.parent.internal.description'
  | 'createdBy.parent.internal.fieldOwners'
  | 'createdBy.parent.internal.ignoreType'
  | 'createdBy.parent.internal.mediaType'
  | 'createdBy.parent.internal.owner'
  | 'createdBy.parent.internal.type'
  | 'createdBy.parent.parent.children'
  | 'createdBy.parent.parent.id'
  | 'createdBy.picture'
  | 'createdBy.publishedAt'
  | 'createdBy.remoteId'
  | 'createdBy.remoteTypeName'
  | 'createdBy.stage'
  | 'createdBy.updatedAt'
  | 'description'
  | 'errorMessage'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'isActive'
  | 'isImplicit'
  | 'operations'
  | 'operations.children'
  | 'operations.children.children'
  | 'operations.children.children.children'
  | 'operations.children.children.id'
  | 'operations.children.id'
  | 'operations.children.internal.content'
  | 'operations.children.internal.contentDigest'
  | 'operations.children.internal.contentFilePath'
  | 'operations.children.internal.description'
  | 'operations.children.internal.fieldOwners'
  | 'operations.children.internal.ignoreType'
  | 'operations.children.internal.mediaType'
  | 'operations.children.internal.owner'
  | 'operations.children.internal.type'
  | 'operations.children.parent.children'
  | 'operations.children.parent.id'
  | 'operations.createdAt'
  | 'operations.createdBy.children'
  | 'operations.createdBy.children.children'
  | 'operations.createdBy.children.id'
  | 'operations.createdBy.createdAt'
  | 'operations.createdBy.id'
  | 'operations.createdBy.internal.content'
  | 'operations.createdBy.internal.contentDigest'
  | 'operations.createdBy.internal.contentFilePath'
  | 'operations.createdBy.internal.description'
  | 'operations.createdBy.internal.fieldOwners'
  | 'operations.createdBy.internal.ignoreType'
  | 'operations.createdBy.internal.mediaType'
  | 'operations.createdBy.internal.owner'
  | 'operations.createdBy.internal.type'
  | 'operations.createdBy.isActive'
  | 'operations.createdBy.kind'
  | 'operations.createdBy.name'
  | 'operations.createdBy.parent.children'
  | 'operations.createdBy.parent.id'
  | 'operations.createdBy.picture'
  | 'operations.createdBy.publishedAt'
  | 'operations.createdBy.remoteId'
  | 'operations.createdBy.remoteTypeName'
  | 'operations.createdBy.stage'
  | 'operations.createdBy.updatedAt'
  | 'operations.description'
  | 'operations.errorMessage'
  | 'operations.id'
  | 'operations.internal.content'
  | 'operations.internal.contentDigest'
  | 'operations.internal.contentFilePath'
  | 'operations.internal.description'
  | 'operations.internal.fieldOwners'
  | 'operations.internal.ignoreType'
  | 'operations.internal.mediaType'
  | 'operations.internal.owner'
  | 'operations.internal.type'
  | 'operations.parent.children'
  | 'operations.parent.children.children'
  | 'operations.parent.children.id'
  | 'operations.parent.id'
  | 'operations.parent.internal.content'
  | 'operations.parent.internal.contentDigest'
  | 'operations.parent.internal.contentFilePath'
  | 'operations.parent.internal.description'
  | 'operations.parent.internal.fieldOwners'
  | 'operations.parent.internal.ignoreType'
  | 'operations.parent.internal.mediaType'
  | 'operations.parent.internal.owner'
  | 'operations.parent.internal.type'
  | 'operations.parent.parent.children'
  | 'operations.parent.parent.id'
  | 'operations.publishedAt'
  | 'operations.publishedBy.children'
  | 'operations.publishedBy.children.children'
  | 'operations.publishedBy.children.id'
  | 'operations.publishedBy.createdAt'
  | 'operations.publishedBy.id'
  | 'operations.publishedBy.internal.content'
  | 'operations.publishedBy.internal.contentDigest'
  | 'operations.publishedBy.internal.contentFilePath'
  | 'operations.publishedBy.internal.description'
  | 'operations.publishedBy.internal.fieldOwners'
  | 'operations.publishedBy.internal.ignoreType'
  | 'operations.publishedBy.internal.mediaType'
  | 'operations.publishedBy.internal.owner'
  | 'operations.publishedBy.internal.type'
  | 'operations.publishedBy.isActive'
  | 'operations.publishedBy.kind'
  | 'operations.publishedBy.name'
  | 'operations.publishedBy.parent.children'
  | 'operations.publishedBy.parent.id'
  | 'operations.publishedBy.picture'
  | 'operations.publishedBy.publishedAt'
  | 'operations.publishedBy.remoteId'
  | 'operations.publishedBy.remoteTypeName'
  | 'operations.publishedBy.stage'
  | 'operations.publishedBy.updatedAt'
  | 'operations.rawPayload'
  | 'operations.release.children'
  | 'operations.release.children.children'
  | 'operations.release.children.id'
  | 'operations.release.createdAt'
  | 'operations.release.createdBy.children'
  | 'operations.release.createdBy.createdAt'
  | 'operations.release.createdBy.id'
  | 'operations.release.createdBy.isActive'
  | 'operations.release.createdBy.kind'
  | 'operations.release.createdBy.name'
  | 'operations.release.createdBy.picture'
  | 'operations.release.createdBy.publishedAt'
  | 'operations.release.createdBy.remoteId'
  | 'operations.release.createdBy.remoteTypeName'
  | 'operations.release.createdBy.stage'
  | 'operations.release.createdBy.updatedAt'
  | 'operations.release.description'
  | 'operations.release.errorMessage'
  | 'operations.release.id'
  | 'operations.release.internal.content'
  | 'operations.release.internal.contentDigest'
  | 'operations.release.internal.contentFilePath'
  | 'operations.release.internal.description'
  | 'operations.release.internal.fieldOwners'
  | 'operations.release.internal.ignoreType'
  | 'operations.release.internal.mediaType'
  | 'operations.release.internal.owner'
  | 'operations.release.internal.type'
  | 'operations.release.isActive'
  | 'operations.release.isImplicit'
  | 'operations.release.operations'
  | 'operations.release.operations.children'
  | 'operations.release.operations.createdAt'
  | 'operations.release.operations.description'
  | 'operations.release.operations.errorMessage'
  | 'operations.release.operations.id'
  | 'operations.release.operations.publishedAt'
  | 'operations.release.operations.rawPayload'
  | 'operations.release.operations.remoteId'
  | 'operations.release.operations.remoteTypeName'
  | 'operations.release.operations.stage'
  | 'operations.release.operations.status'
  | 'operations.release.operations.updatedAt'
  | 'operations.release.parent.children'
  | 'operations.release.parent.id'
  | 'operations.release.publishedAt'
  | 'operations.release.publishedBy.children'
  | 'operations.release.publishedBy.createdAt'
  | 'operations.release.publishedBy.id'
  | 'operations.release.publishedBy.isActive'
  | 'operations.release.publishedBy.kind'
  | 'operations.release.publishedBy.name'
  | 'operations.release.publishedBy.picture'
  | 'operations.release.publishedBy.publishedAt'
  | 'operations.release.publishedBy.remoteId'
  | 'operations.release.publishedBy.remoteTypeName'
  | 'operations.release.publishedBy.stage'
  | 'operations.release.publishedBy.updatedAt'
  | 'operations.release.releaseAt'
  | 'operations.release.remoteId'
  | 'operations.release.remoteTypeName'
  | 'operations.release.stage'
  | 'operations.release.status'
  | 'operations.release.title'
  | 'operations.release.updatedAt'
  | 'operations.release.updatedBy.children'
  | 'operations.release.updatedBy.createdAt'
  | 'operations.release.updatedBy.id'
  | 'operations.release.updatedBy.isActive'
  | 'operations.release.updatedBy.kind'
  | 'operations.release.updatedBy.name'
  | 'operations.release.updatedBy.picture'
  | 'operations.release.updatedBy.publishedAt'
  | 'operations.release.updatedBy.remoteId'
  | 'operations.release.updatedBy.remoteTypeName'
  | 'operations.release.updatedBy.stage'
  | 'operations.release.updatedBy.updatedAt'
  | 'operations.remoteId'
  | 'operations.remoteTypeName'
  | 'operations.stage'
  | 'operations.status'
  | 'operations.updatedAt'
  | 'operations.updatedBy.children'
  | 'operations.updatedBy.children.children'
  | 'operations.updatedBy.children.id'
  | 'operations.updatedBy.createdAt'
  | 'operations.updatedBy.id'
  | 'operations.updatedBy.internal.content'
  | 'operations.updatedBy.internal.contentDigest'
  | 'operations.updatedBy.internal.contentFilePath'
  | 'operations.updatedBy.internal.description'
  | 'operations.updatedBy.internal.fieldOwners'
  | 'operations.updatedBy.internal.ignoreType'
  | 'operations.updatedBy.internal.mediaType'
  | 'operations.updatedBy.internal.owner'
  | 'operations.updatedBy.internal.type'
  | 'operations.updatedBy.isActive'
  | 'operations.updatedBy.kind'
  | 'operations.updatedBy.name'
  | 'operations.updatedBy.parent.children'
  | 'operations.updatedBy.parent.id'
  | 'operations.updatedBy.picture'
  | 'operations.updatedBy.publishedAt'
  | 'operations.updatedBy.remoteId'
  | 'operations.updatedBy.remoteTypeName'
  | 'operations.updatedBy.stage'
  | 'operations.updatedBy.updatedAt'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'publishedAt'
  | 'publishedBy.children'
  | 'publishedBy.children.children'
  | 'publishedBy.children.children.children'
  | 'publishedBy.children.children.id'
  | 'publishedBy.children.id'
  | 'publishedBy.children.internal.content'
  | 'publishedBy.children.internal.contentDigest'
  | 'publishedBy.children.internal.contentFilePath'
  | 'publishedBy.children.internal.description'
  | 'publishedBy.children.internal.fieldOwners'
  | 'publishedBy.children.internal.ignoreType'
  | 'publishedBy.children.internal.mediaType'
  | 'publishedBy.children.internal.owner'
  | 'publishedBy.children.internal.type'
  | 'publishedBy.children.parent.children'
  | 'publishedBy.children.parent.id'
  | 'publishedBy.createdAt'
  | 'publishedBy.id'
  | 'publishedBy.internal.content'
  | 'publishedBy.internal.contentDigest'
  | 'publishedBy.internal.contentFilePath'
  | 'publishedBy.internal.description'
  | 'publishedBy.internal.fieldOwners'
  | 'publishedBy.internal.ignoreType'
  | 'publishedBy.internal.mediaType'
  | 'publishedBy.internal.owner'
  | 'publishedBy.internal.type'
  | 'publishedBy.isActive'
  | 'publishedBy.kind'
  | 'publishedBy.name'
  | 'publishedBy.parent.children'
  | 'publishedBy.parent.children.children'
  | 'publishedBy.parent.children.id'
  | 'publishedBy.parent.id'
  | 'publishedBy.parent.internal.content'
  | 'publishedBy.parent.internal.contentDigest'
  | 'publishedBy.parent.internal.contentFilePath'
  | 'publishedBy.parent.internal.description'
  | 'publishedBy.parent.internal.fieldOwners'
  | 'publishedBy.parent.internal.ignoreType'
  | 'publishedBy.parent.internal.mediaType'
  | 'publishedBy.parent.internal.owner'
  | 'publishedBy.parent.internal.type'
  | 'publishedBy.parent.parent.children'
  | 'publishedBy.parent.parent.id'
  | 'publishedBy.picture'
  | 'publishedBy.publishedAt'
  | 'publishedBy.remoteId'
  | 'publishedBy.remoteTypeName'
  | 'publishedBy.stage'
  | 'publishedBy.updatedAt'
  | 'releaseAt'
  | 'remoteId'
  | 'remoteTypeName'
  | 'stage'
  | 'status'
  | 'title'
  | 'updatedAt'
  | 'updatedBy.children'
  | 'updatedBy.children.children'
  | 'updatedBy.children.children.children'
  | 'updatedBy.children.children.id'
  | 'updatedBy.children.id'
  | 'updatedBy.children.internal.content'
  | 'updatedBy.children.internal.contentDigest'
  | 'updatedBy.children.internal.contentFilePath'
  | 'updatedBy.children.internal.description'
  | 'updatedBy.children.internal.fieldOwners'
  | 'updatedBy.children.internal.ignoreType'
  | 'updatedBy.children.internal.mediaType'
  | 'updatedBy.children.internal.owner'
  | 'updatedBy.children.internal.type'
  | 'updatedBy.children.parent.children'
  | 'updatedBy.children.parent.id'
  | 'updatedBy.createdAt'
  | 'updatedBy.id'
  | 'updatedBy.internal.content'
  | 'updatedBy.internal.contentDigest'
  | 'updatedBy.internal.contentFilePath'
  | 'updatedBy.internal.description'
  | 'updatedBy.internal.fieldOwners'
  | 'updatedBy.internal.ignoreType'
  | 'updatedBy.internal.mediaType'
  | 'updatedBy.internal.owner'
  | 'updatedBy.internal.type'
  | 'updatedBy.isActive'
  | 'updatedBy.kind'
  | 'updatedBy.name'
  | 'updatedBy.parent.children'
  | 'updatedBy.parent.children.children'
  | 'updatedBy.parent.children.id'
  | 'updatedBy.parent.id'
  | 'updatedBy.parent.internal.content'
  | 'updatedBy.parent.internal.contentDigest'
  | 'updatedBy.parent.internal.contentFilePath'
  | 'updatedBy.parent.internal.description'
  | 'updatedBy.parent.internal.fieldOwners'
  | 'updatedBy.parent.internal.ignoreType'
  | 'updatedBy.parent.internal.mediaType'
  | 'updatedBy.parent.internal.owner'
  | 'updatedBy.parent.internal.type'
  | 'updatedBy.parent.parent.children'
  | 'updatedBy.parent.parent.id'
  | 'updatedBy.picture'
  | 'updatedBy.publishedAt'
  | 'updatedBy.remoteId'
  | 'updatedBy.remoteTypeName'
  | 'updatedBy.stage'
  | 'updatedBy.updatedAt';

type GraphCMS_ScheduledReleaseFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly createdAt: InputMaybe<JSONQueryOperatorInput>;
  readonly createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly errorMessage: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly isActive: InputMaybe<BooleanQueryOperatorInput>;
  readonly isImplicit: InputMaybe<BooleanQueryOperatorInput>;
  readonly operations: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly publishedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly releaseAt: InputMaybe<JSONQueryOperatorInput>;
  readonly remoteId: InputMaybe<IDQueryOperatorInput>;
  readonly remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  readonly stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  readonly status: InputMaybe<GraphCMS_ScheduledReleaseStatusQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly updatedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};

type GraphCMS_ScheduledReleaseGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_ScheduledReleaseEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<GraphCMS_ScheduledReleaseGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_ScheduledRelease>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_ScheduledReleaseGroupConnection_distinctArgs = {
  field: GraphCMS_ScheduledReleaseFieldsEnum;
};


type GraphCMS_ScheduledReleaseGroupConnection_groupArgs = {
  field: GraphCMS_ScheduledReleaseFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_ScheduledReleaseGroupConnection_maxArgs = {
  field: GraphCMS_ScheduledReleaseFieldsEnum;
};


type GraphCMS_ScheduledReleaseGroupConnection_minArgs = {
  field: GraphCMS_ScheduledReleaseFieldsEnum;
};


type GraphCMS_ScheduledReleaseGroupConnection_sumArgs = {
  field: GraphCMS_ScheduledReleaseFieldsEnum;
};

type GraphCMS_ScheduledReleaseSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_ScheduledReleaseFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type GraphCMS_ScheduledReleaseStatus =
  | 'COMPLETED'
  | 'FAILED'
  | 'IN_PROGRESS'
  | 'PENDING';

type GraphCMS_ScheduledReleaseStatusQueryOperatorInput = {
  readonly eq: InputMaybe<GraphCMS_ScheduledReleaseStatus>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_ScheduledReleaseStatus>>>;
  readonly ne: InputMaybe<GraphCMS_ScheduledReleaseStatus>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_ScheduledReleaseStatus>>>;
};

type GraphCMS_Stage =
  | 'DRAFT'
  | 'PUBLISHED';

type GraphCMS_StageLandingPage = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly createdAt: Scalars['JSON'];
  readonly createdBy: Maybe<GraphCMS_User>;
  readonly helpfulInfo: Maybe<GraphCMS_HelpfulInfo>;
  readonly id: Scalars['ID'];
  readonly infoLink: ReadonlyArray<GraphCMS_RichText>;
  readonly internal: Internal;
  readonly locale: GraphCMS_Locale;
  readonly parent: Maybe<Node>;
  readonly publishedAt: Maybe<Scalars['JSON']>;
  readonly publishedBy: Maybe<GraphCMS_User>;
  readonly remoteId: Scalars['ID'];
  readonly remoteTypeName: Scalars['String'];
  readonly scheduledIn: ReadonlyArray<GraphCMS_ScheduledOperation>;
  readonly slug: Maybe<Scalars['String']>;
  readonly stage: GraphCMS_Stage;
  readonly stageInfo: Maybe<GraphCMS_RichText>;
  readonly stageIntro: Scalars['String'];
  readonly stageIntroRich: Maybe<GraphCMS_RichText>;
  readonly stageNumber: Scalars['Int'];
  readonly stageTitle: Scalars['String'];
  readonly tasksToComplete: ReadonlyArray<GraphCMS_TaskToComplete>;
  readonly updatedAt: Scalars['JSON'];
  readonly updatedBy: Maybe<GraphCMS_User>;
};

type GraphCMS_StageLandingPageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_StageLandingPageEdge>;
  readonly group: ReadonlyArray<GraphCMS_StageLandingPageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_StageLandingPage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_StageLandingPageConnection_distinctArgs = {
  field: GraphCMS_StageLandingPageFieldsEnum;
};


type GraphCMS_StageLandingPageConnection_groupArgs = {
  field: GraphCMS_StageLandingPageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_StageLandingPageConnection_maxArgs = {
  field: GraphCMS_StageLandingPageFieldsEnum;
};


type GraphCMS_StageLandingPageConnection_minArgs = {
  field: GraphCMS_StageLandingPageFieldsEnum;
};


type GraphCMS_StageLandingPageConnection_sumArgs = {
  field: GraphCMS_StageLandingPageFieldsEnum;
};

type GraphCMS_StageLandingPageEdge = {
  readonly next: Maybe<GraphCMS_StageLandingPage>;
  readonly node: GraphCMS_StageLandingPage;
  readonly previous: Maybe<GraphCMS_StageLandingPage>;
};

type GraphCMS_StageLandingPageFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'createdAt'
  | 'createdBy.children'
  | 'createdBy.children.children'
  | 'createdBy.children.children.children'
  | 'createdBy.children.children.id'
  | 'createdBy.children.id'
  | 'createdBy.children.internal.content'
  | 'createdBy.children.internal.contentDigest'
  | 'createdBy.children.internal.contentFilePath'
  | 'createdBy.children.internal.description'
  | 'createdBy.children.internal.fieldOwners'
  | 'createdBy.children.internal.ignoreType'
  | 'createdBy.children.internal.mediaType'
  | 'createdBy.children.internal.owner'
  | 'createdBy.children.internal.type'
  | 'createdBy.children.parent.children'
  | 'createdBy.children.parent.id'
  | 'createdBy.createdAt'
  | 'createdBy.id'
  | 'createdBy.internal.content'
  | 'createdBy.internal.contentDigest'
  | 'createdBy.internal.contentFilePath'
  | 'createdBy.internal.description'
  | 'createdBy.internal.fieldOwners'
  | 'createdBy.internal.ignoreType'
  | 'createdBy.internal.mediaType'
  | 'createdBy.internal.owner'
  | 'createdBy.internal.type'
  | 'createdBy.isActive'
  | 'createdBy.kind'
  | 'createdBy.name'
  | 'createdBy.parent.children'
  | 'createdBy.parent.children.children'
  | 'createdBy.parent.children.id'
  | 'createdBy.parent.id'
  | 'createdBy.parent.internal.content'
  | 'createdBy.parent.internal.contentDigest'
  | 'createdBy.parent.internal.contentFilePath'
  | 'createdBy.parent.internal.description'
  | 'createdBy.parent.internal.fieldOwners'
  | 'createdBy.parent.internal.ignoreType'
  | 'createdBy.parent.internal.mediaType'
  | 'createdBy.parent.internal.owner'
  | 'createdBy.parent.internal.type'
  | 'createdBy.parent.parent.children'
  | 'createdBy.parent.parent.id'
  | 'createdBy.picture'
  | 'createdBy.publishedAt'
  | 'createdBy.remoteId'
  | 'createdBy.remoteTypeName'
  | 'createdBy.stage'
  | 'createdBy.updatedAt'
  | 'helpfulInfo.children'
  | 'helpfulInfo.children.children'
  | 'helpfulInfo.children.children.children'
  | 'helpfulInfo.children.children.id'
  | 'helpfulInfo.children.id'
  | 'helpfulInfo.children.internal.content'
  | 'helpfulInfo.children.internal.contentDigest'
  | 'helpfulInfo.children.internal.contentFilePath'
  | 'helpfulInfo.children.internal.description'
  | 'helpfulInfo.children.internal.fieldOwners'
  | 'helpfulInfo.children.internal.ignoreType'
  | 'helpfulInfo.children.internal.mediaType'
  | 'helpfulInfo.children.internal.owner'
  | 'helpfulInfo.children.internal.type'
  | 'helpfulInfo.children.parent.children'
  | 'helpfulInfo.children.parent.id'
  | 'helpfulInfo.createdAt'
  | 'helpfulInfo.createdBy.children'
  | 'helpfulInfo.createdBy.children.children'
  | 'helpfulInfo.createdBy.children.id'
  | 'helpfulInfo.createdBy.createdAt'
  | 'helpfulInfo.createdBy.id'
  | 'helpfulInfo.createdBy.internal.content'
  | 'helpfulInfo.createdBy.internal.contentDigest'
  | 'helpfulInfo.createdBy.internal.contentFilePath'
  | 'helpfulInfo.createdBy.internal.description'
  | 'helpfulInfo.createdBy.internal.fieldOwners'
  | 'helpfulInfo.createdBy.internal.ignoreType'
  | 'helpfulInfo.createdBy.internal.mediaType'
  | 'helpfulInfo.createdBy.internal.owner'
  | 'helpfulInfo.createdBy.internal.type'
  | 'helpfulInfo.createdBy.isActive'
  | 'helpfulInfo.createdBy.kind'
  | 'helpfulInfo.createdBy.name'
  | 'helpfulInfo.createdBy.parent.children'
  | 'helpfulInfo.createdBy.parent.id'
  | 'helpfulInfo.createdBy.picture'
  | 'helpfulInfo.createdBy.publishedAt'
  | 'helpfulInfo.createdBy.remoteId'
  | 'helpfulInfo.createdBy.remoteTypeName'
  | 'helpfulInfo.createdBy.stage'
  | 'helpfulInfo.createdBy.updatedAt'
  | 'helpfulInfo.id'
  | 'helpfulInfo.info.html'
  | 'helpfulInfo.info.markdown'
  | 'helpfulInfo.info.raw'
  | 'helpfulInfo.info.remoteTypeName'
  | 'helpfulInfo.info.text'
  | 'helpfulInfo.internal.content'
  | 'helpfulInfo.internal.contentDigest'
  | 'helpfulInfo.internal.contentFilePath'
  | 'helpfulInfo.internal.description'
  | 'helpfulInfo.internal.fieldOwners'
  | 'helpfulInfo.internal.ignoreType'
  | 'helpfulInfo.internal.mediaType'
  | 'helpfulInfo.internal.owner'
  | 'helpfulInfo.internal.type'
  | 'helpfulInfo.locale'
  | 'helpfulInfo.parent.children'
  | 'helpfulInfo.parent.children.children'
  | 'helpfulInfo.parent.children.id'
  | 'helpfulInfo.parent.id'
  | 'helpfulInfo.parent.internal.content'
  | 'helpfulInfo.parent.internal.contentDigest'
  | 'helpfulInfo.parent.internal.contentFilePath'
  | 'helpfulInfo.parent.internal.description'
  | 'helpfulInfo.parent.internal.fieldOwners'
  | 'helpfulInfo.parent.internal.ignoreType'
  | 'helpfulInfo.parent.internal.mediaType'
  | 'helpfulInfo.parent.internal.owner'
  | 'helpfulInfo.parent.internal.type'
  | 'helpfulInfo.parent.parent.children'
  | 'helpfulInfo.parent.parent.id'
  | 'helpfulInfo.publishedAt'
  | 'helpfulInfo.publishedBy.children'
  | 'helpfulInfo.publishedBy.children.children'
  | 'helpfulInfo.publishedBy.children.id'
  | 'helpfulInfo.publishedBy.createdAt'
  | 'helpfulInfo.publishedBy.id'
  | 'helpfulInfo.publishedBy.internal.content'
  | 'helpfulInfo.publishedBy.internal.contentDigest'
  | 'helpfulInfo.publishedBy.internal.contentFilePath'
  | 'helpfulInfo.publishedBy.internal.description'
  | 'helpfulInfo.publishedBy.internal.fieldOwners'
  | 'helpfulInfo.publishedBy.internal.ignoreType'
  | 'helpfulInfo.publishedBy.internal.mediaType'
  | 'helpfulInfo.publishedBy.internal.owner'
  | 'helpfulInfo.publishedBy.internal.type'
  | 'helpfulInfo.publishedBy.isActive'
  | 'helpfulInfo.publishedBy.kind'
  | 'helpfulInfo.publishedBy.name'
  | 'helpfulInfo.publishedBy.parent.children'
  | 'helpfulInfo.publishedBy.parent.id'
  | 'helpfulInfo.publishedBy.picture'
  | 'helpfulInfo.publishedBy.publishedAt'
  | 'helpfulInfo.publishedBy.remoteId'
  | 'helpfulInfo.publishedBy.remoteTypeName'
  | 'helpfulInfo.publishedBy.stage'
  | 'helpfulInfo.publishedBy.updatedAt'
  | 'helpfulInfo.remoteId'
  | 'helpfulInfo.remoteTypeName'
  | 'helpfulInfo.scheduledIn'
  | 'helpfulInfo.scheduledIn.children'
  | 'helpfulInfo.scheduledIn.children.children'
  | 'helpfulInfo.scheduledIn.children.id'
  | 'helpfulInfo.scheduledIn.createdAt'
  | 'helpfulInfo.scheduledIn.createdBy.children'
  | 'helpfulInfo.scheduledIn.createdBy.createdAt'
  | 'helpfulInfo.scheduledIn.createdBy.id'
  | 'helpfulInfo.scheduledIn.createdBy.isActive'
  | 'helpfulInfo.scheduledIn.createdBy.kind'
  | 'helpfulInfo.scheduledIn.createdBy.name'
  | 'helpfulInfo.scheduledIn.createdBy.picture'
  | 'helpfulInfo.scheduledIn.createdBy.publishedAt'
  | 'helpfulInfo.scheduledIn.createdBy.remoteId'
  | 'helpfulInfo.scheduledIn.createdBy.remoteTypeName'
  | 'helpfulInfo.scheduledIn.createdBy.stage'
  | 'helpfulInfo.scheduledIn.createdBy.updatedAt'
  | 'helpfulInfo.scheduledIn.description'
  | 'helpfulInfo.scheduledIn.errorMessage'
  | 'helpfulInfo.scheduledIn.id'
  | 'helpfulInfo.scheduledIn.internal.content'
  | 'helpfulInfo.scheduledIn.internal.contentDigest'
  | 'helpfulInfo.scheduledIn.internal.contentFilePath'
  | 'helpfulInfo.scheduledIn.internal.description'
  | 'helpfulInfo.scheduledIn.internal.fieldOwners'
  | 'helpfulInfo.scheduledIn.internal.ignoreType'
  | 'helpfulInfo.scheduledIn.internal.mediaType'
  | 'helpfulInfo.scheduledIn.internal.owner'
  | 'helpfulInfo.scheduledIn.internal.type'
  | 'helpfulInfo.scheduledIn.parent.children'
  | 'helpfulInfo.scheduledIn.parent.id'
  | 'helpfulInfo.scheduledIn.publishedAt'
  | 'helpfulInfo.scheduledIn.publishedBy.children'
  | 'helpfulInfo.scheduledIn.publishedBy.createdAt'
  | 'helpfulInfo.scheduledIn.publishedBy.id'
  | 'helpfulInfo.scheduledIn.publishedBy.isActive'
  | 'helpfulInfo.scheduledIn.publishedBy.kind'
  | 'helpfulInfo.scheduledIn.publishedBy.name'
  | 'helpfulInfo.scheduledIn.publishedBy.picture'
  | 'helpfulInfo.scheduledIn.publishedBy.publishedAt'
  | 'helpfulInfo.scheduledIn.publishedBy.remoteId'
  | 'helpfulInfo.scheduledIn.publishedBy.remoteTypeName'
  | 'helpfulInfo.scheduledIn.publishedBy.stage'
  | 'helpfulInfo.scheduledIn.publishedBy.updatedAt'
  | 'helpfulInfo.scheduledIn.rawPayload'
  | 'helpfulInfo.scheduledIn.release.children'
  | 'helpfulInfo.scheduledIn.release.createdAt'
  | 'helpfulInfo.scheduledIn.release.description'
  | 'helpfulInfo.scheduledIn.release.errorMessage'
  | 'helpfulInfo.scheduledIn.release.id'
  | 'helpfulInfo.scheduledIn.release.isActive'
  | 'helpfulInfo.scheduledIn.release.isImplicit'
  | 'helpfulInfo.scheduledIn.release.operations'
  | 'helpfulInfo.scheduledIn.release.publishedAt'
  | 'helpfulInfo.scheduledIn.release.releaseAt'
  | 'helpfulInfo.scheduledIn.release.remoteId'
  | 'helpfulInfo.scheduledIn.release.remoteTypeName'
  | 'helpfulInfo.scheduledIn.release.stage'
  | 'helpfulInfo.scheduledIn.release.status'
  | 'helpfulInfo.scheduledIn.release.title'
  | 'helpfulInfo.scheduledIn.release.updatedAt'
  | 'helpfulInfo.scheduledIn.remoteId'
  | 'helpfulInfo.scheduledIn.remoteTypeName'
  | 'helpfulInfo.scheduledIn.stage'
  | 'helpfulInfo.scheduledIn.status'
  | 'helpfulInfo.scheduledIn.updatedAt'
  | 'helpfulInfo.scheduledIn.updatedBy.children'
  | 'helpfulInfo.scheduledIn.updatedBy.createdAt'
  | 'helpfulInfo.scheduledIn.updatedBy.id'
  | 'helpfulInfo.scheduledIn.updatedBy.isActive'
  | 'helpfulInfo.scheduledIn.updatedBy.kind'
  | 'helpfulInfo.scheduledIn.updatedBy.name'
  | 'helpfulInfo.scheduledIn.updatedBy.picture'
  | 'helpfulInfo.scheduledIn.updatedBy.publishedAt'
  | 'helpfulInfo.scheduledIn.updatedBy.remoteId'
  | 'helpfulInfo.scheduledIn.updatedBy.remoteTypeName'
  | 'helpfulInfo.scheduledIn.updatedBy.stage'
  | 'helpfulInfo.scheduledIn.updatedBy.updatedAt'
  | 'helpfulInfo.stage'
  | 'helpfulInfo.stageNumber'
  | 'helpfulInfo.updatedAt'
  | 'helpfulInfo.updatedBy.children'
  | 'helpfulInfo.updatedBy.children.children'
  | 'helpfulInfo.updatedBy.children.id'
  | 'helpfulInfo.updatedBy.createdAt'
  | 'helpfulInfo.updatedBy.id'
  | 'helpfulInfo.updatedBy.internal.content'
  | 'helpfulInfo.updatedBy.internal.contentDigest'
  | 'helpfulInfo.updatedBy.internal.contentFilePath'
  | 'helpfulInfo.updatedBy.internal.description'
  | 'helpfulInfo.updatedBy.internal.fieldOwners'
  | 'helpfulInfo.updatedBy.internal.ignoreType'
  | 'helpfulInfo.updatedBy.internal.mediaType'
  | 'helpfulInfo.updatedBy.internal.owner'
  | 'helpfulInfo.updatedBy.internal.type'
  | 'helpfulInfo.updatedBy.isActive'
  | 'helpfulInfo.updatedBy.kind'
  | 'helpfulInfo.updatedBy.name'
  | 'helpfulInfo.updatedBy.parent.children'
  | 'helpfulInfo.updatedBy.parent.id'
  | 'helpfulInfo.updatedBy.picture'
  | 'helpfulInfo.updatedBy.publishedAt'
  | 'helpfulInfo.updatedBy.remoteId'
  | 'helpfulInfo.updatedBy.remoteTypeName'
  | 'helpfulInfo.updatedBy.stage'
  | 'helpfulInfo.updatedBy.updatedAt'
  | 'id'
  | 'infoLink'
  | 'infoLink.html'
  | 'infoLink.markdown'
  | 'infoLink.raw'
  | 'infoLink.remoteTypeName'
  | 'infoLink.text'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'locale'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'publishedAt'
  | 'publishedBy.children'
  | 'publishedBy.children.children'
  | 'publishedBy.children.children.children'
  | 'publishedBy.children.children.id'
  | 'publishedBy.children.id'
  | 'publishedBy.children.internal.content'
  | 'publishedBy.children.internal.contentDigest'
  | 'publishedBy.children.internal.contentFilePath'
  | 'publishedBy.children.internal.description'
  | 'publishedBy.children.internal.fieldOwners'
  | 'publishedBy.children.internal.ignoreType'
  | 'publishedBy.children.internal.mediaType'
  | 'publishedBy.children.internal.owner'
  | 'publishedBy.children.internal.type'
  | 'publishedBy.children.parent.children'
  | 'publishedBy.children.parent.id'
  | 'publishedBy.createdAt'
  | 'publishedBy.id'
  | 'publishedBy.internal.content'
  | 'publishedBy.internal.contentDigest'
  | 'publishedBy.internal.contentFilePath'
  | 'publishedBy.internal.description'
  | 'publishedBy.internal.fieldOwners'
  | 'publishedBy.internal.ignoreType'
  | 'publishedBy.internal.mediaType'
  | 'publishedBy.internal.owner'
  | 'publishedBy.internal.type'
  | 'publishedBy.isActive'
  | 'publishedBy.kind'
  | 'publishedBy.name'
  | 'publishedBy.parent.children'
  | 'publishedBy.parent.children.children'
  | 'publishedBy.parent.children.id'
  | 'publishedBy.parent.id'
  | 'publishedBy.parent.internal.content'
  | 'publishedBy.parent.internal.contentDigest'
  | 'publishedBy.parent.internal.contentFilePath'
  | 'publishedBy.parent.internal.description'
  | 'publishedBy.parent.internal.fieldOwners'
  | 'publishedBy.parent.internal.ignoreType'
  | 'publishedBy.parent.internal.mediaType'
  | 'publishedBy.parent.internal.owner'
  | 'publishedBy.parent.internal.type'
  | 'publishedBy.parent.parent.children'
  | 'publishedBy.parent.parent.id'
  | 'publishedBy.picture'
  | 'publishedBy.publishedAt'
  | 'publishedBy.remoteId'
  | 'publishedBy.remoteTypeName'
  | 'publishedBy.stage'
  | 'publishedBy.updatedAt'
  | 'remoteId'
  | 'remoteTypeName'
  | 'scheduledIn'
  | 'scheduledIn.children'
  | 'scheduledIn.children.children'
  | 'scheduledIn.children.children.children'
  | 'scheduledIn.children.children.id'
  | 'scheduledIn.children.id'
  | 'scheduledIn.children.internal.content'
  | 'scheduledIn.children.internal.contentDigest'
  | 'scheduledIn.children.internal.contentFilePath'
  | 'scheduledIn.children.internal.description'
  | 'scheduledIn.children.internal.fieldOwners'
  | 'scheduledIn.children.internal.ignoreType'
  | 'scheduledIn.children.internal.mediaType'
  | 'scheduledIn.children.internal.owner'
  | 'scheduledIn.children.internal.type'
  | 'scheduledIn.children.parent.children'
  | 'scheduledIn.children.parent.id'
  | 'scheduledIn.createdAt'
  | 'scheduledIn.createdBy.children'
  | 'scheduledIn.createdBy.children.children'
  | 'scheduledIn.createdBy.children.id'
  | 'scheduledIn.createdBy.createdAt'
  | 'scheduledIn.createdBy.id'
  | 'scheduledIn.createdBy.internal.content'
  | 'scheduledIn.createdBy.internal.contentDigest'
  | 'scheduledIn.createdBy.internal.contentFilePath'
  | 'scheduledIn.createdBy.internal.description'
  | 'scheduledIn.createdBy.internal.fieldOwners'
  | 'scheduledIn.createdBy.internal.ignoreType'
  | 'scheduledIn.createdBy.internal.mediaType'
  | 'scheduledIn.createdBy.internal.owner'
  | 'scheduledIn.createdBy.internal.type'
  | 'scheduledIn.createdBy.isActive'
  | 'scheduledIn.createdBy.kind'
  | 'scheduledIn.createdBy.name'
  | 'scheduledIn.createdBy.parent.children'
  | 'scheduledIn.createdBy.parent.id'
  | 'scheduledIn.createdBy.picture'
  | 'scheduledIn.createdBy.publishedAt'
  | 'scheduledIn.createdBy.remoteId'
  | 'scheduledIn.createdBy.remoteTypeName'
  | 'scheduledIn.createdBy.stage'
  | 'scheduledIn.createdBy.updatedAt'
  | 'scheduledIn.description'
  | 'scheduledIn.errorMessage'
  | 'scheduledIn.id'
  | 'scheduledIn.internal.content'
  | 'scheduledIn.internal.contentDigest'
  | 'scheduledIn.internal.contentFilePath'
  | 'scheduledIn.internal.description'
  | 'scheduledIn.internal.fieldOwners'
  | 'scheduledIn.internal.ignoreType'
  | 'scheduledIn.internal.mediaType'
  | 'scheduledIn.internal.owner'
  | 'scheduledIn.internal.type'
  | 'scheduledIn.parent.children'
  | 'scheduledIn.parent.children.children'
  | 'scheduledIn.parent.children.id'
  | 'scheduledIn.parent.id'
  | 'scheduledIn.parent.internal.content'
  | 'scheduledIn.parent.internal.contentDigest'
  | 'scheduledIn.parent.internal.contentFilePath'
  | 'scheduledIn.parent.internal.description'
  | 'scheduledIn.parent.internal.fieldOwners'
  | 'scheduledIn.parent.internal.ignoreType'
  | 'scheduledIn.parent.internal.mediaType'
  | 'scheduledIn.parent.internal.owner'
  | 'scheduledIn.parent.internal.type'
  | 'scheduledIn.parent.parent.children'
  | 'scheduledIn.parent.parent.id'
  | 'scheduledIn.publishedAt'
  | 'scheduledIn.publishedBy.children'
  | 'scheduledIn.publishedBy.children.children'
  | 'scheduledIn.publishedBy.children.id'
  | 'scheduledIn.publishedBy.createdAt'
  | 'scheduledIn.publishedBy.id'
  | 'scheduledIn.publishedBy.internal.content'
  | 'scheduledIn.publishedBy.internal.contentDigest'
  | 'scheduledIn.publishedBy.internal.contentFilePath'
  | 'scheduledIn.publishedBy.internal.description'
  | 'scheduledIn.publishedBy.internal.fieldOwners'
  | 'scheduledIn.publishedBy.internal.ignoreType'
  | 'scheduledIn.publishedBy.internal.mediaType'
  | 'scheduledIn.publishedBy.internal.owner'
  | 'scheduledIn.publishedBy.internal.type'
  | 'scheduledIn.publishedBy.isActive'
  | 'scheduledIn.publishedBy.kind'
  | 'scheduledIn.publishedBy.name'
  | 'scheduledIn.publishedBy.parent.children'
  | 'scheduledIn.publishedBy.parent.id'
  | 'scheduledIn.publishedBy.picture'
  | 'scheduledIn.publishedBy.publishedAt'
  | 'scheduledIn.publishedBy.remoteId'
  | 'scheduledIn.publishedBy.remoteTypeName'
  | 'scheduledIn.publishedBy.stage'
  | 'scheduledIn.publishedBy.updatedAt'
  | 'scheduledIn.rawPayload'
  | 'scheduledIn.release.children'
  | 'scheduledIn.release.children.children'
  | 'scheduledIn.release.children.id'
  | 'scheduledIn.release.createdAt'
  | 'scheduledIn.release.createdBy.children'
  | 'scheduledIn.release.createdBy.createdAt'
  | 'scheduledIn.release.createdBy.id'
  | 'scheduledIn.release.createdBy.isActive'
  | 'scheduledIn.release.createdBy.kind'
  | 'scheduledIn.release.createdBy.name'
  | 'scheduledIn.release.createdBy.picture'
  | 'scheduledIn.release.createdBy.publishedAt'
  | 'scheduledIn.release.createdBy.remoteId'
  | 'scheduledIn.release.createdBy.remoteTypeName'
  | 'scheduledIn.release.createdBy.stage'
  | 'scheduledIn.release.createdBy.updatedAt'
  | 'scheduledIn.release.description'
  | 'scheduledIn.release.errorMessage'
  | 'scheduledIn.release.id'
  | 'scheduledIn.release.internal.content'
  | 'scheduledIn.release.internal.contentDigest'
  | 'scheduledIn.release.internal.contentFilePath'
  | 'scheduledIn.release.internal.description'
  | 'scheduledIn.release.internal.fieldOwners'
  | 'scheduledIn.release.internal.ignoreType'
  | 'scheduledIn.release.internal.mediaType'
  | 'scheduledIn.release.internal.owner'
  | 'scheduledIn.release.internal.type'
  | 'scheduledIn.release.isActive'
  | 'scheduledIn.release.isImplicit'
  | 'scheduledIn.release.operations'
  | 'scheduledIn.release.operations.children'
  | 'scheduledIn.release.operations.createdAt'
  | 'scheduledIn.release.operations.description'
  | 'scheduledIn.release.operations.errorMessage'
  | 'scheduledIn.release.operations.id'
  | 'scheduledIn.release.operations.publishedAt'
  | 'scheduledIn.release.operations.rawPayload'
  | 'scheduledIn.release.operations.remoteId'
  | 'scheduledIn.release.operations.remoteTypeName'
  | 'scheduledIn.release.operations.stage'
  | 'scheduledIn.release.operations.status'
  | 'scheduledIn.release.operations.updatedAt'
  | 'scheduledIn.release.parent.children'
  | 'scheduledIn.release.parent.id'
  | 'scheduledIn.release.publishedAt'
  | 'scheduledIn.release.publishedBy.children'
  | 'scheduledIn.release.publishedBy.createdAt'
  | 'scheduledIn.release.publishedBy.id'
  | 'scheduledIn.release.publishedBy.isActive'
  | 'scheduledIn.release.publishedBy.kind'
  | 'scheduledIn.release.publishedBy.name'
  | 'scheduledIn.release.publishedBy.picture'
  | 'scheduledIn.release.publishedBy.publishedAt'
  | 'scheduledIn.release.publishedBy.remoteId'
  | 'scheduledIn.release.publishedBy.remoteTypeName'
  | 'scheduledIn.release.publishedBy.stage'
  | 'scheduledIn.release.publishedBy.updatedAt'
  | 'scheduledIn.release.releaseAt'
  | 'scheduledIn.release.remoteId'
  | 'scheduledIn.release.remoteTypeName'
  | 'scheduledIn.release.stage'
  | 'scheduledIn.release.status'
  | 'scheduledIn.release.title'
  | 'scheduledIn.release.updatedAt'
  | 'scheduledIn.release.updatedBy.children'
  | 'scheduledIn.release.updatedBy.createdAt'
  | 'scheduledIn.release.updatedBy.id'
  | 'scheduledIn.release.updatedBy.isActive'
  | 'scheduledIn.release.updatedBy.kind'
  | 'scheduledIn.release.updatedBy.name'
  | 'scheduledIn.release.updatedBy.picture'
  | 'scheduledIn.release.updatedBy.publishedAt'
  | 'scheduledIn.release.updatedBy.remoteId'
  | 'scheduledIn.release.updatedBy.remoteTypeName'
  | 'scheduledIn.release.updatedBy.stage'
  | 'scheduledIn.release.updatedBy.updatedAt'
  | 'scheduledIn.remoteId'
  | 'scheduledIn.remoteTypeName'
  | 'scheduledIn.stage'
  | 'scheduledIn.status'
  | 'scheduledIn.updatedAt'
  | 'scheduledIn.updatedBy.children'
  | 'scheduledIn.updatedBy.children.children'
  | 'scheduledIn.updatedBy.children.id'
  | 'scheduledIn.updatedBy.createdAt'
  | 'scheduledIn.updatedBy.id'
  | 'scheduledIn.updatedBy.internal.content'
  | 'scheduledIn.updatedBy.internal.contentDigest'
  | 'scheduledIn.updatedBy.internal.contentFilePath'
  | 'scheduledIn.updatedBy.internal.description'
  | 'scheduledIn.updatedBy.internal.fieldOwners'
  | 'scheduledIn.updatedBy.internal.ignoreType'
  | 'scheduledIn.updatedBy.internal.mediaType'
  | 'scheduledIn.updatedBy.internal.owner'
  | 'scheduledIn.updatedBy.internal.type'
  | 'scheduledIn.updatedBy.isActive'
  | 'scheduledIn.updatedBy.kind'
  | 'scheduledIn.updatedBy.name'
  | 'scheduledIn.updatedBy.parent.children'
  | 'scheduledIn.updatedBy.parent.id'
  | 'scheduledIn.updatedBy.picture'
  | 'scheduledIn.updatedBy.publishedAt'
  | 'scheduledIn.updatedBy.remoteId'
  | 'scheduledIn.updatedBy.remoteTypeName'
  | 'scheduledIn.updatedBy.stage'
  | 'scheduledIn.updatedBy.updatedAt'
  | 'slug'
  | 'stage'
  | 'stageInfo.html'
  | 'stageInfo.markdown'
  | 'stageInfo.raw'
  | 'stageInfo.remoteTypeName'
  | 'stageInfo.text'
  | 'stageIntro'
  | 'stageIntroRich.html'
  | 'stageIntroRich.markdown'
  | 'stageIntroRich.raw'
  | 'stageIntroRich.remoteTypeName'
  | 'stageIntroRich.text'
  | 'stageNumber'
  | 'stageTitle'
  | 'tasksToComplete'
  | 'tasksToComplete.children'
  | 'tasksToComplete.children.children'
  | 'tasksToComplete.children.children.children'
  | 'tasksToComplete.children.children.id'
  | 'tasksToComplete.children.id'
  | 'tasksToComplete.children.internal.content'
  | 'tasksToComplete.children.internal.contentDigest'
  | 'tasksToComplete.children.internal.contentFilePath'
  | 'tasksToComplete.children.internal.description'
  | 'tasksToComplete.children.internal.fieldOwners'
  | 'tasksToComplete.children.internal.ignoreType'
  | 'tasksToComplete.children.internal.mediaType'
  | 'tasksToComplete.children.internal.owner'
  | 'tasksToComplete.children.internal.type'
  | 'tasksToComplete.children.parent.children'
  | 'tasksToComplete.children.parent.id'
  | 'tasksToComplete.createdAt'
  | 'tasksToComplete.createdBy.children'
  | 'tasksToComplete.createdBy.children.children'
  | 'tasksToComplete.createdBy.children.id'
  | 'tasksToComplete.createdBy.createdAt'
  | 'tasksToComplete.createdBy.id'
  | 'tasksToComplete.createdBy.internal.content'
  | 'tasksToComplete.createdBy.internal.contentDigest'
  | 'tasksToComplete.createdBy.internal.contentFilePath'
  | 'tasksToComplete.createdBy.internal.description'
  | 'tasksToComplete.createdBy.internal.fieldOwners'
  | 'tasksToComplete.createdBy.internal.ignoreType'
  | 'tasksToComplete.createdBy.internal.mediaType'
  | 'tasksToComplete.createdBy.internal.owner'
  | 'tasksToComplete.createdBy.internal.type'
  | 'tasksToComplete.createdBy.isActive'
  | 'tasksToComplete.createdBy.kind'
  | 'tasksToComplete.createdBy.name'
  | 'tasksToComplete.createdBy.parent.children'
  | 'tasksToComplete.createdBy.parent.id'
  | 'tasksToComplete.createdBy.picture'
  | 'tasksToComplete.createdBy.publishedAt'
  | 'tasksToComplete.createdBy.remoteId'
  | 'tasksToComplete.createdBy.remoteTypeName'
  | 'tasksToComplete.createdBy.stage'
  | 'tasksToComplete.createdBy.updatedAt'
  | 'tasksToComplete.id'
  | 'tasksToComplete.internal.content'
  | 'tasksToComplete.internal.contentDigest'
  | 'tasksToComplete.internal.contentFilePath'
  | 'tasksToComplete.internal.description'
  | 'tasksToComplete.internal.fieldOwners'
  | 'tasksToComplete.internal.ignoreType'
  | 'tasksToComplete.internal.mediaType'
  | 'tasksToComplete.internal.owner'
  | 'tasksToComplete.internal.type'
  | 'tasksToComplete.locale'
  | 'tasksToComplete.parent.children'
  | 'tasksToComplete.parent.children.children'
  | 'tasksToComplete.parent.children.id'
  | 'tasksToComplete.parent.id'
  | 'tasksToComplete.parent.internal.content'
  | 'tasksToComplete.parent.internal.contentDigest'
  | 'tasksToComplete.parent.internal.contentFilePath'
  | 'tasksToComplete.parent.internal.description'
  | 'tasksToComplete.parent.internal.fieldOwners'
  | 'tasksToComplete.parent.internal.ignoreType'
  | 'tasksToComplete.parent.internal.mediaType'
  | 'tasksToComplete.parent.internal.owner'
  | 'tasksToComplete.parent.internal.type'
  | 'tasksToComplete.parent.parent.children'
  | 'tasksToComplete.parent.parent.id'
  | 'tasksToComplete.publishedAt'
  | 'tasksToComplete.publishedBy.children'
  | 'tasksToComplete.publishedBy.children.children'
  | 'tasksToComplete.publishedBy.children.id'
  | 'tasksToComplete.publishedBy.createdAt'
  | 'tasksToComplete.publishedBy.id'
  | 'tasksToComplete.publishedBy.internal.content'
  | 'tasksToComplete.publishedBy.internal.contentDigest'
  | 'tasksToComplete.publishedBy.internal.contentFilePath'
  | 'tasksToComplete.publishedBy.internal.description'
  | 'tasksToComplete.publishedBy.internal.fieldOwners'
  | 'tasksToComplete.publishedBy.internal.ignoreType'
  | 'tasksToComplete.publishedBy.internal.mediaType'
  | 'tasksToComplete.publishedBy.internal.owner'
  | 'tasksToComplete.publishedBy.internal.type'
  | 'tasksToComplete.publishedBy.isActive'
  | 'tasksToComplete.publishedBy.kind'
  | 'tasksToComplete.publishedBy.name'
  | 'tasksToComplete.publishedBy.parent.children'
  | 'tasksToComplete.publishedBy.parent.id'
  | 'tasksToComplete.publishedBy.picture'
  | 'tasksToComplete.publishedBy.publishedAt'
  | 'tasksToComplete.publishedBy.remoteId'
  | 'tasksToComplete.publishedBy.remoteTypeName'
  | 'tasksToComplete.publishedBy.stage'
  | 'tasksToComplete.publishedBy.updatedAt'
  | 'tasksToComplete.remoteId'
  | 'tasksToComplete.remoteTypeName'
  | 'tasksToComplete.scheduledIn'
  | 'tasksToComplete.scheduledIn.children'
  | 'tasksToComplete.scheduledIn.children.children'
  | 'tasksToComplete.scheduledIn.children.id'
  | 'tasksToComplete.scheduledIn.createdAt'
  | 'tasksToComplete.scheduledIn.createdBy.children'
  | 'tasksToComplete.scheduledIn.createdBy.createdAt'
  | 'tasksToComplete.scheduledIn.createdBy.id'
  | 'tasksToComplete.scheduledIn.createdBy.isActive'
  | 'tasksToComplete.scheduledIn.createdBy.kind'
  | 'tasksToComplete.scheduledIn.createdBy.name'
  | 'tasksToComplete.scheduledIn.createdBy.picture'
  | 'tasksToComplete.scheduledIn.createdBy.publishedAt'
  | 'tasksToComplete.scheduledIn.createdBy.remoteId'
  | 'tasksToComplete.scheduledIn.createdBy.remoteTypeName'
  | 'tasksToComplete.scheduledIn.createdBy.stage'
  | 'tasksToComplete.scheduledIn.createdBy.updatedAt'
  | 'tasksToComplete.scheduledIn.description'
  | 'tasksToComplete.scheduledIn.errorMessage'
  | 'tasksToComplete.scheduledIn.id'
  | 'tasksToComplete.scheduledIn.internal.content'
  | 'tasksToComplete.scheduledIn.internal.contentDigest'
  | 'tasksToComplete.scheduledIn.internal.contentFilePath'
  | 'tasksToComplete.scheduledIn.internal.description'
  | 'tasksToComplete.scheduledIn.internal.fieldOwners'
  | 'tasksToComplete.scheduledIn.internal.ignoreType'
  | 'tasksToComplete.scheduledIn.internal.mediaType'
  | 'tasksToComplete.scheduledIn.internal.owner'
  | 'tasksToComplete.scheduledIn.internal.type'
  | 'tasksToComplete.scheduledIn.parent.children'
  | 'tasksToComplete.scheduledIn.parent.id'
  | 'tasksToComplete.scheduledIn.publishedAt'
  | 'tasksToComplete.scheduledIn.publishedBy.children'
  | 'tasksToComplete.scheduledIn.publishedBy.createdAt'
  | 'tasksToComplete.scheduledIn.publishedBy.id'
  | 'tasksToComplete.scheduledIn.publishedBy.isActive'
  | 'tasksToComplete.scheduledIn.publishedBy.kind'
  | 'tasksToComplete.scheduledIn.publishedBy.name'
  | 'tasksToComplete.scheduledIn.publishedBy.picture'
  | 'tasksToComplete.scheduledIn.publishedBy.publishedAt'
  | 'tasksToComplete.scheduledIn.publishedBy.remoteId'
  | 'tasksToComplete.scheduledIn.publishedBy.remoteTypeName'
  | 'tasksToComplete.scheduledIn.publishedBy.stage'
  | 'tasksToComplete.scheduledIn.publishedBy.updatedAt'
  | 'tasksToComplete.scheduledIn.rawPayload'
  | 'tasksToComplete.scheduledIn.release.children'
  | 'tasksToComplete.scheduledIn.release.createdAt'
  | 'tasksToComplete.scheduledIn.release.description'
  | 'tasksToComplete.scheduledIn.release.errorMessage'
  | 'tasksToComplete.scheduledIn.release.id'
  | 'tasksToComplete.scheduledIn.release.isActive'
  | 'tasksToComplete.scheduledIn.release.isImplicit'
  | 'tasksToComplete.scheduledIn.release.operations'
  | 'tasksToComplete.scheduledIn.release.publishedAt'
  | 'tasksToComplete.scheduledIn.release.releaseAt'
  | 'tasksToComplete.scheduledIn.release.remoteId'
  | 'tasksToComplete.scheduledIn.release.remoteTypeName'
  | 'tasksToComplete.scheduledIn.release.stage'
  | 'tasksToComplete.scheduledIn.release.status'
  | 'tasksToComplete.scheduledIn.release.title'
  | 'tasksToComplete.scheduledIn.release.updatedAt'
  | 'tasksToComplete.scheduledIn.remoteId'
  | 'tasksToComplete.scheduledIn.remoteTypeName'
  | 'tasksToComplete.scheduledIn.stage'
  | 'tasksToComplete.scheduledIn.status'
  | 'tasksToComplete.scheduledIn.updatedAt'
  | 'tasksToComplete.scheduledIn.updatedBy.children'
  | 'tasksToComplete.scheduledIn.updatedBy.createdAt'
  | 'tasksToComplete.scheduledIn.updatedBy.id'
  | 'tasksToComplete.scheduledIn.updatedBy.isActive'
  | 'tasksToComplete.scheduledIn.updatedBy.kind'
  | 'tasksToComplete.scheduledIn.updatedBy.name'
  | 'tasksToComplete.scheduledIn.updatedBy.picture'
  | 'tasksToComplete.scheduledIn.updatedBy.publishedAt'
  | 'tasksToComplete.scheduledIn.updatedBy.remoteId'
  | 'tasksToComplete.scheduledIn.updatedBy.remoteTypeName'
  | 'tasksToComplete.scheduledIn.updatedBy.stage'
  | 'tasksToComplete.scheduledIn.updatedBy.updatedAt'
  | 'tasksToComplete.stage'
  | 'tasksToComplete.stageNumber'
  | 'tasksToComplete.submittedText.html'
  | 'tasksToComplete.submittedText.markdown'
  | 'tasksToComplete.submittedText.raw'
  | 'tasksToComplete.submittedText.remoteTypeName'
  | 'tasksToComplete.submittedText.text'
  | 'tasksToComplete.taskInfo.html'
  | 'tasksToComplete.taskInfo.markdown'
  | 'tasksToComplete.taskInfo.raw'
  | 'tasksToComplete.taskInfo.remoteTypeName'
  | 'tasksToComplete.taskInfo.text'
  | 'tasksToComplete.taskLinkText'
  | 'tasksToComplete.title'
  | 'tasksToComplete.updatedAt'
  | 'tasksToComplete.updatedBy.children'
  | 'tasksToComplete.updatedBy.children.children'
  | 'tasksToComplete.updatedBy.children.id'
  | 'tasksToComplete.updatedBy.createdAt'
  | 'tasksToComplete.updatedBy.id'
  | 'tasksToComplete.updatedBy.internal.content'
  | 'tasksToComplete.updatedBy.internal.contentDigest'
  | 'tasksToComplete.updatedBy.internal.contentFilePath'
  | 'tasksToComplete.updatedBy.internal.description'
  | 'tasksToComplete.updatedBy.internal.fieldOwners'
  | 'tasksToComplete.updatedBy.internal.ignoreType'
  | 'tasksToComplete.updatedBy.internal.mediaType'
  | 'tasksToComplete.updatedBy.internal.owner'
  | 'tasksToComplete.updatedBy.internal.type'
  | 'tasksToComplete.updatedBy.isActive'
  | 'tasksToComplete.updatedBy.kind'
  | 'tasksToComplete.updatedBy.name'
  | 'tasksToComplete.updatedBy.parent.children'
  | 'tasksToComplete.updatedBy.parent.id'
  | 'tasksToComplete.updatedBy.picture'
  | 'tasksToComplete.updatedBy.publishedAt'
  | 'tasksToComplete.updatedBy.remoteId'
  | 'tasksToComplete.updatedBy.remoteTypeName'
  | 'tasksToComplete.updatedBy.stage'
  | 'tasksToComplete.updatedBy.updatedAt'
  | 'updatedAt'
  | 'updatedBy.children'
  | 'updatedBy.children.children'
  | 'updatedBy.children.children.children'
  | 'updatedBy.children.children.id'
  | 'updatedBy.children.id'
  | 'updatedBy.children.internal.content'
  | 'updatedBy.children.internal.contentDigest'
  | 'updatedBy.children.internal.contentFilePath'
  | 'updatedBy.children.internal.description'
  | 'updatedBy.children.internal.fieldOwners'
  | 'updatedBy.children.internal.ignoreType'
  | 'updatedBy.children.internal.mediaType'
  | 'updatedBy.children.internal.owner'
  | 'updatedBy.children.internal.type'
  | 'updatedBy.children.parent.children'
  | 'updatedBy.children.parent.id'
  | 'updatedBy.createdAt'
  | 'updatedBy.id'
  | 'updatedBy.internal.content'
  | 'updatedBy.internal.contentDigest'
  | 'updatedBy.internal.contentFilePath'
  | 'updatedBy.internal.description'
  | 'updatedBy.internal.fieldOwners'
  | 'updatedBy.internal.ignoreType'
  | 'updatedBy.internal.mediaType'
  | 'updatedBy.internal.owner'
  | 'updatedBy.internal.type'
  | 'updatedBy.isActive'
  | 'updatedBy.kind'
  | 'updatedBy.name'
  | 'updatedBy.parent.children'
  | 'updatedBy.parent.children.children'
  | 'updatedBy.parent.children.id'
  | 'updatedBy.parent.id'
  | 'updatedBy.parent.internal.content'
  | 'updatedBy.parent.internal.contentDigest'
  | 'updatedBy.parent.internal.contentFilePath'
  | 'updatedBy.parent.internal.description'
  | 'updatedBy.parent.internal.fieldOwners'
  | 'updatedBy.parent.internal.ignoreType'
  | 'updatedBy.parent.internal.mediaType'
  | 'updatedBy.parent.internal.owner'
  | 'updatedBy.parent.internal.type'
  | 'updatedBy.parent.parent.children'
  | 'updatedBy.parent.parent.id'
  | 'updatedBy.picture'
  | 'updatedBy.publishedAt'
  | 'updatedBy.remoteId'
  | 'updatedBy.remoteTypeName'
  | 'updatedBy.stage'
  | 'updatedBy.updatedAt';

type GraphCMS_StageLandingPageFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly createdAt: InputMaybe<JSONQueryOperatorInput>;
  readonly createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly helpfulInfo: InputMaybe<GraphCMS_HelpfulInfoFilterInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly infoLink: InputMaybe<GraphCMS_RichTextFilterListInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly publishedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly remoteId: InputMaybe<IDQueryOperatorInput>;
  readonly remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  readonly scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  readonly stageInfo: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly stageIntro: InputMaybe<StringQueryOperatorInput>;
  readonly stageIntroRich: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly stageNumber: InputMaybe<IntQueryOperatorInput>;
  readonly stageTitle: InputMaybe<StringQueryOperatorInput>;
  readonly tasksToComplete: InputMaybe<GraphCMS_TaskToCompleteFilterListInput>;
  readonly updatedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};

type GraphCMS_StageLandingPageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_StageLandingPageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<GraphCMS_StageLandingPageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_StageLandingPage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_StageLandingPageGroupConnection_distinctArgs = {
  field: GraphCMS_StageLandingPageFieldsEnum;
};


type GraphCMS_StageLandingPageGroupConnection_groupArgs = {
  field: GraphCMS_StageLandingPageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_StageLandingPageGroupConnection_maxArgs = {
  field: GraphCMS_StageLandingPageFieldsEnum;
};


type GraphCMS_StageLandingPageGroupConnection_minArgs = {
  field: GraphCMS_StageLandingPageFieldsEnum;
};


type GraphCMS_StageLandingPageGroupConnection_sumArgs = {
  field: GraphCMS_StageLandingPageFieldsEnum;
};

type GraphCMS_StageLandingPageSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_StageLandingPageFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type GraphCMS_StageQueryOperatorInput = {
  readonly eq: InputMaybe<GraphCMS_Stage>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_Stage>>>;
  readonly ne: InputMaybe<GraphCMS_Stage>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_Stage>>>;
};

type GraphCMS_StageTask = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly createdAt: Scalars['JSON'];
  readonly createdBy: Maybe<GraphCMS_User>;
  readonly helpfulInfo: Maybe<GraphCMS_HelpfulInfo>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly intro: Maybe<GraphCMS_RichText>;
  readonly locale: GraphCMS_Locale;
  readonly parent: Maybe<Node>;
  readonly publishedAt: Maybe<Scalars['JSON']>;
  readonly publishedBy: Maybe<GraphCMS_User>;
  readonly questions: ReadonlyArray<GraphCMS_RichText>;
  readonly remoteId: Scalars['ID'];
  readonly remoteTypeName: Scalars['String'];
  readonly scheduledIn: ReadonlyArray<GraphCMS_ScheduledOperation>;
  readonly stage: GraphCMS_Stage;
  readonly stageNumber: Maybe<Scalars['Int']>;
  readonly submittedText: Maybe<GraphCMS_RichText>;
  readonly title: Maybe<Scalars['String']>;
  readonly updatedAt: Scalars['JSON'];
  readonly updatedBy: Maybe<GraphCMS_User>;
};

type GraphCMS_StageTaskConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_StageTaskEdge>;
  readonly group: ReadonlyArray<GraphCMS_StageTaskGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_StageTask>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_StageTaskConnection_distinctArgs = {
  field: GraphCMS_StageTaskFieldsEnum;
};


type GraphCMS_StageTaskConnection_groupArgs = {
  field: GraphCMS_StageTaskFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_StageTaskConnection_maxArgs = {
  field: GraphCMS_StageTaskFieldsEnum;
};


type GraphCMS_StageTaskConnection_minArgs = {
  field: GraphCMS_StageTaskFieldsEnum;
};


type GraphCMS_StageTaskConnection_sumArgs = {
  field: GraphCMS_StageTaskFieldsEnum;
};

type GraphCMS_StageTaskEdge = {
  readonly next: Maybe<GraphCMS_StageTask>;
  readonly node: GraphCMS_StageTask;
  readonly previous: Maybe<GraphCMS_StageTask>;
};

type GraphCMS_StageTaskFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'createdAt'
  | 'createdBy.children'
  | 'createdBy.children.children'
  | 'createdBy.children.children.children'
  | 'createdBy.children.children.id'
  | 'createdBy.children.id'
  | 'createdBy.children.internal.content'
  | 'createdBy.children.internal.contentDigest'
  | 'createdBy.children.internal.contentFilePath'
  | 'createdBy.children.internal.description'
  | 'createdBy.children.internal.fieldOwners'
  | 'createdBy.children.internal.ignoreType'
  | 'createdBy.children.internal.mediaType'
  | 'createdBy.children.internal.owner'
  | 'createdBy.children.internal.type'
  | 'createdBy.children.parent.children'
  | 'createdBy.children.parent.id'
  | 'createdBy.createdAt'
  | 'createdBy.id'
  | 'createdBy.internal.content'
  | 'createdBy.internal.contentDigest'
  | 'createdBy.internal.contentFilePath'
  | 'createdBy.internal.description'
  | 'createdBy.internal.fieldOwners'
  | 'createdBy.internal.ignoreType'
  | 'createdBy.internal.mediaType'
  | 'createdBy.internal.owner'
  | 'createdBy.internal.type'
  | 'createdBy.isActive'
  | 'createdBy.kind'
  | 'createdBy.name'
  | 'createdBy.parent.children'
  | 'createdBy.parent.children.children'
  | 'createdBy.parent.children.id'
  | 'createdBy.parent.id'
  | 'createdBy.parent.internal.content'
  | 'createdBy.parent.internal.contentDigest'
  | 'createdBy.parent.internal.contentFilePath'
  | 'createdBy.parent.internal.description'
  | 'createdBy.parent.internal.fieldOwners'
  | 'createdBy.parent.internal.ignoreType'
  | 'createdBy.parent.internal.mediaType'
  | 'createdBy.parent.internal.owner'
  | 'createdBy.parent.internal.type'
  | 'createdBy.parent.parent.children'
  | 'createdBy.parent.parent.id'
  | 'createdBy.picture'
  | 'createdBy.publishedAt'
  | 'createdBy.remoteId'
  | 'createdBy.remoteTypeName'
  | 'createdBy.stage'
  | 'createdBy.updatedAt'
  | 'helpfulInfo.children'
  | 'helpfulInfo.children.children'
  | 'helpfulInfo.children.children.children'
  | 'helpfulInfo.children.children.id'
  | 'helpfulInfo.children.id'
  | 'helpfulInfo.children.internal.content'
  | 'helpfulInfo.children.internal.contentDigest'
  | 'helpfulInfo.children.internal.contentFilePath'
  | 'helpfulInfo.children.internal.description'
  | 'helpfulInfo.children.internal.fieldOwners'
  | 'helpfulInfo.children.internal.ignoreType'
  | 'helpfulInfo.children.internal.mediaType'
  | 'helpfulInfo.children.internal.owner'
  | 'helpfulInfo.children.internal.type'
  | 'helpfulInfo.children.parent.children'
  | 'helpfulInfo.children.parent.id'
  | 'helpfulInfo.createdAt'
  | 'helpfulInfo.createdBy.children'
  | 'helpfulInfo.createdBy.children.children'
  | 'helpfulInfo.createdBy.children.id'
  | 'helpfulInfo.createdBy.createdAt'
  | 'helpfulInfo.createdBy.id'
  | 'helpfulInfo.createdBy.internal.content'
  | 'helpfulInfo.createdBy.internal.contentDigest'
  | 'helpfulInfo.createdBy.internal.contentFilePath'
  | 'helpfulInfo.createdBy.internal.description'
  | 'helpfulInfo.createdBy.internal.fieldOwners'
  | 'helpfulInfo.createdBy.internal.ignoreType'
  | 'helpfulInfo.createdBy.internal.mediaType'
  | 'helpfulInfo.createdBy.internal.owner'
  | 'helpfulInfo.createdBy.internal.type'
  | 'helpfulInfo.createdBy.isActive'
  | 'helpfulInfo.createdBy.kind'
  | 'helpfulInfo.createdBy.name'
  | 'helpfulInfo.createdBy.parent.children'
  | 'helpfulInfo.createdBy.parent.id'
  | 'helpfulInfo.createdBy.picture'
  | 'helpfulInfo.createdBy.publishedAt'
  | 'helpfulInfo.createdBy.remoteId'
  | 'helpfulInfo.createdBy.remoteTypeName'
  | 'helpfulInfo.createdBy.stage'
  | 'helpfulInfo.createdBy.updatedAt'
  | 'helpfulInfo.id'
  | 'helpfulInfo.info.html'
  | 'helpfulInfo.info.markdown'
  | 'helpfulInfo.info.raw'
  | 'helpfulInfo.info.remoteTypeName'
  | 'helpfulInfo.info.text'
  | 'helpfulInfo.internal.content'
  | 'helpfulInfo.internal.contentDigest'
  | 'helpfulInfo.internal.contentFilePath'
  | 'helpfulInfo.internal.description'
  | 'helpfulInfo.internal.fieldOwners'
  | 'helpfulInfo.internal.ignoreType'
  | 'helpfulInfo.internal.mediaType'
  | 'helpfulInfo.internal.owner'
  | 'helpfulInfo.internal.type'
  | 'helpfulInfo.locale'
  | 'helpfulInfo.parent.children'
  | 'helpfulInfo.parent.children.children'
  | 'helpfulInfo.parent.children.id'
  | 'helpfulInfo.parent.id'
  | 'helpfulInfo.parent.internal.content'
  | 'helpfulInfo.parent.internal.contentDigest'
  | 'helpfulInfo.parent.internal.contentFilePath'
  | 'helpfulInfo.parent.internal.description'
  | 'helpfulInfo.parent.internal.fieldOwners'
  | 'helpfulInfo.parent.internal.ignoreType'
  | 'helpfulInfo.parent.internal.mediaType'
  | 'helpfulInfo.parent.internal.owner'
  | 'helpfulInfo.parent.internal.type'
  | 'helpfulInfo.parent.parent.children'
  | 'helpfulInfo.parent.parent.id'
  | 'helpfulInfo.publishedAt'
  | 'helpfulInfo.publishedBy.children'
  | 'helpfulInfo.publishedBy.children.children'
  | 'helpfulInfo.publishedBy.children.id'
  | 'helpfulInfo.publishedBy.createdAt'
  | 'helpfulInfo.publishedBy.id'
  | 'helpfulInfo.publishedBy.internal.content'
  | 'helpfulInfo.publishedBy.internal.contentDigest'
  | 'helpfulInfo.publishedBy.internal.contentFilePath'
  | 'helpfulInfo.publishedBy.internal.description'
  | 'helpfulInfo.publishedBy.internal.fieldOwners'
  | 'helpfulInfo.publishedBy.internal.ignoreType'
  | 'helpfulInfo.publishedBy.internal.mediaType'
  | 'helpfulInfo.publishedBy.internal.owner'
  | 'helpfulInfo.publishedBy.internal.type'
  | 'helpfulInfo.publishedBy.isActive'
  | 'helpfulInfo.publishedBy.kind'
  | 'helpfulInfo.publishedBy.name'
  | 'helpfulInfo.publishedBy.parent.children'
  | 'helpfulInfo.publishedBy.parent.id'
  | 'helpfulInfo.publishedBy.picture'
  | 'helpfulInfo.publishedBy.publishedAt'
  | 'helpfulInfo.publishedBy.remoteId'
  | 'helpfulInfo.publishedBy.remoteTypeName'
  | 'helpfulInfo.publishedBy.stage'
  | 'helpfulInfo.publishedBy.updatedAt'
  | 'helpfulInfo.remoteId'
  | 'helpfulInfo.remoteTypeName'
  | 'helpfulInfo.scheduledIn'
  | 'helpfulInfo.scheduledIn.children'
  | 'helpfulInfo.scheduledIn.children.children'
  | 'helpfulInfo.scheduledIn.children.id'
  | 'helpfulInfo.scheduledIn.createdAt'
  | 'helpfulInfo.scheduledIn.createdBy.children'
  | 'helpfulInfo.scheduledIn.createdBy.createdAt'
  | 'helpfulInfo.scheduledIn.createdBy.id'
  | 'helpfulInfo.scheduledIn.createdBy.isActive'
  | 'helpfulInfo.scheduledIn.createdBy.kind'
  | 'helpfulInfo.scheduledIn.createdBy.name'
  | 'helpfulInfo.scheduledIn.createdBy.picture'
  | 'helpfulInfo.scheduledIn.createdBy.publishedAt'
  | 'helpfulInfo.scheduledIn.createdBy.remoteId'
  | 'helpfulInfo.scheduledIn.createdBy.remoteTypeName'
  | 'helpfulInfo.scheduledIn.createdBy.stage'
  | 'helpfulInfo.scheduledIn.createdBy.updatedAt'
  | 'helpfulInfo.scheduledIn.description'
  | 'helpfulInfo.scheduledIn.errorMessage'
  | 'helpfulInfo.scheduledIn.id'
  | 'helpfulInfo.scheduledIn.internal.content'
  | 'helpfulInfo.scheduledIn.internal.contentDigest'
  | 'helpfulInfo.scheduledIn.internal.contentFilePath'
  | 'helpfulInfo.scheduledIn.internal.description'
  | 'helpfulInfo.scheduledIn.internal.fieldOwners'
  | 'helpfulInfo.scheduledIn.internal.ignoreType'
  | 'helpfulInfo.scheduledIn.internal.mediaType'
  | 'helpfulInfo.scheduledIn.internal.owner'
  | 'helpfulInfo.scheduledIn.internal.type'
  | 'helpfulInfo.scheduledIn.parent.children'
  | 'helpfulInfo.scheduledIn.parent.id'
  | 'helpfulInfo.scheduledIn.publishedAt'
  | 'helpfulInfo.scheduledIn.publishedBy.children'
  | 'helpfulInfo.scheduledIn.publishedBy.createdAt'
  | 'helpfulInfo.scheduledIn.publishedBy.id'
  | 'helpfulInfo.scheduledIn.publishedBy.isActive'
  | 'helpfulInfo.scheduledIn.publishedBy.kind'
  | 'helpfulInfo.scheduledIn.publishedBy.name'
  | 'helpfulInfo.scheduledIn.publishedBy.picture'
  | 'helpfulInfo.scheduledIn.publishedBy.publishedAt'
  | 'helpfulInfo.scheduledIn.publishedBy.remoteId'
  | 'helpfulInfo.scheduledIn.publishedBy.remoteTypeName'
  | 'helpfulInfo.scheduledIn.publishedBy.stage'
  | 'helpfulInfo.scheduledIn.publishedBy.updatedAt'
  | 'helpfulInfo.scheduledIn.rawPayload'
  | 'helpfulInfo.scheduledIn.release.children'
  | 'helpfulInfo.scheduledIn.release.createdAt'
  | 'helpfulInfo.scheduledIn.release.description'
  | 'helpfulInfo.scheduledIn.release.errorMessage'
  | 'helpfulInfo.scheduledIn.release.id'
  | 'helpfulInfo.scheduledIn.release.isActive'
  | 'helpfulInfo.scheduledIn.release.isImplicit'
  | 'helpfulInfo.scheduledIn.release.operations'
  | 'helpfulInfo.scheduledIn.release.publishedAt'
  | 'helpfulInfo.scheduledIn.release.releaseAt'
  | 'helpfulInfo.scheduledIn.release.remoteId'
  | 'helpfulInfo.scheduledIn.release.remoteTypeName'
  | 'helpfulInfo.scheduledIn.release.stage'
  | 'helpfulInfo.scheduledIn.release.status'
  | 'helpfulInfo.scheduledIn.release.title'
  | 'helpfulInfo.scheduledIn.release.updatedAt'
  | 'helpfulInfo.scheduledIn.remoteId'
  | 'helpfulInfo.scheduledIn.remoteTypeName'
  | 'helpfulInfo.scheduledIn.stage'
  | 'helpfulInfo.scheduledIn.status'
  | 'helpfulInfo.scheduledIn.updatedAt'
  | 'helpfulInfo.scheduledIn.updatedBy.children'
  | 'helpfulInfo.scheduledIn.updatedBy.createdAt'
  | 'helpfulInfo.scheduledIn.updatedBy.id'
  | 'helpfulInfo.scheduledIn.updatedBy.isActive'
  | 'helpfulInfo.scheduledIn.updatedBy.kind'
  | 'helpfulInfo.scheduledIn.updatedBy.name'
  | 'helpfulInfo.scheduledIn.updatedBy.picture'
  | 'helpfulInfo.scheduledIn.updatedBy.publishedAt'
  | 'helpfulInfo.scheduledIn.updatedBy.remoteId'
  | 'helpfulInfo.scheduledIn.updatedBy.remoteTypeName'
  | 'helpfulInfo.scheduledIn.updatedBy.stage'
  | 'helpfulInfo.scheduledIn.updatedBy.updatedAt'
  | 'helpfulInfo.stage'
  | 'helpfulInfo.stageNumber'
  | 'helpfulInfo.updatedAt'
  | 'helpfulInfo.updatedBy.children'
  | 'helpfulInfo.updatedBy.children.children'
  | 'helpfulInfo.updatedBy.children.id'
  | 'helpfulInfo.updatedBy.createdAt'
  | 'helpfulInfo.updatedBy.id'
  | 'helpfulInfo.updatedBy.internal.content'
  | 'helpfulInfo.updatedBy.internal.contentDigest'
  | 'helpfulInfo.updatedBy.internal.contentFilePath'
  | 'helpfulInfo.updatedBy.internal.description'
  | 'helpfulInfo.updatedBy.internal.fieldOwners'
  | 'helpfulInfo.updatedBy.internal.ignoreType'
  | 'helpfulInfo.updatedBy.internal.mediaType'
  | 'helpfulInfo.updatedBy.internal.owner'
  | 'helpfulInfo.updatedBy.internal.type'
  | 'helpfulInfo.updatedBy.isActive'
  | 'helpfulInfo.updatedBy.kind'
  | 'helpfulInfo.updatedBy.name'
  | 'helpfulInfo.updatedBy.parent.children'
  | 'helpfulInfo.updatedBy.parent.id'
  | 'helpfulInfo.updatedBy.picture'
  | 'helpfulInfo.updatedBy.publishedAt'
  | 'helpfulInfo.updatedBy.remoteId'
  | 'helpfulInfo.updatedBy.remoteTypeName'
  | 'helpfulInfo.updatedBy.stage'
  | 'helpfulInfo.updatedBy.updatedAt'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'intro.html'
  | 'intro.markdown'
  | 'intro.raw'
  | 'intro.remoteTypeName'
  | 'intro.text'
  | 'locale'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'publishedAt'
  | 'publishedBy.children'
  | 'publishedBy.children.children'
  | 'publishedBy.children.children.children'
  | 'publishedBy.children.children.id'
  | 'publishedBy.children.id'
  | 'publishedBy.children.internal.content'
  | 'publishedBy.children.internal.contentDigest'
  | 'publishedBy.children.internal.contentFilePath'
  | 'publishedBy.children.internal.description'
  | 'publishedBy.children.internal.fieldOwners'
  | 'publishedBy.children.internal.ignoreType'
  | 'publishedBy.children.internal.mediaType'
  | 'publishedBy.children.internal.owner'
  | 'publishedBy.children.internal.type'
  | 'publishedBy.children.parent.children'
  | 'publishedBy.children.parent.id'
  | 'publishedBy.createdAt'
  | 'publishedBy.id'
  | 'publishedBy.internal.content'
  | 'publishedBy.internal.contentDigest'
  | 'publishedBy.internal.contentFilePath'
  | 'publishedBy.internal.description'
  | 'publishedBy.internal.fieldOwners'
  | 'publishedBy.internal.ignoreType'
  | 'publishedBy.internal.mediaType'
  | 'publishedBy.internal.owner'
  | 'publishedBy.internal.type'
  | 'publishedBy.isActive'
  | 'publishedBy.kind'
  | 'publishedBy.name'
  | 'publishedBy.parent.children'
  | 'publishedBy.parent.children.children'
  | 'publishedBy.parent.children.id'
  | 'publishedBy.parent.id'
  | 'publishedBy.parent.internal.content'
  | 'publishedBy.parent.internal.contentDigest'
  | 'publishedBy.parent.internal.contentFilePath'
  | 'publishedBy.parent.internal.description'
  | 'publishedBy.parent.internal.fieldOwners'
  | 'publishedBy.parent.internal.ignoreType'
  | 'publishedBy.parent.internal.mediaType'
  | 'publishedBy.parent.internal.owner'
  | 'publishedBy.parent.internal.type'
  | 'publishedBy.parent.parent.children'
  | 'publishedBy.parent.parent.id'
  | 'publishedBy.picture'
  | 'publishedBy.publishedAt'
  | 'publishedBy.remoteId'
  | 'publishedBy.remoteTypeName'
  | 'publishedBy.stage'
  | 'publishedBy.updatedAt'
  | 'questions'
  | 'questions.html'
  | 'questions.markdown'
  | 'questions.raw'
  | 'questions.remoteTypeName'
  | 'questions.text'
  | 'remoteId'
  | 'remoteTypeName'
  | 'scheduledIn'
  | 'scheduledIn.children'
  | 'scheduledIn.children.children'
  | 'scheduledIn.children.children.children'
  | 'scheduledIn.children.children.id'
  | 'scheduledIn.children.id'
  | 'scheduledIn.children.internal.content'
  | 'scheduledIn.children.internal.contentDigest'
  | 'scheduledIn.children.internal.contentFilePath'
  | 'scheduledIn.children.internal.description'
  | 'scheduledIn.children.internal.fieldOwners'
  | 'scheduledIn.children.internal.ignoreType'
  | 'scheduledIn.children.internal.mediaType'
  | 'scheduledIn.children.internal.owner'
  | 'scheduledIn.children.internal.type'
  | 'scheduledIn.children.parent.children'
  | 'scheduledIn.children.parent.id'
  | 'scheduledIn.createdAt'
  | 'scheduledIn.createdBy.children'
  | 'scheduledIn.createdBy.children.children'
  | 'scheduledIn.createdBy.children.id'
  | 'scheduledIn.createdBy.createdAt'
  | 'scheduledIn.createdBy.id'
  | 'scheduledIn.createdBy.internal.content'
  | 'scheduledIn.createdBy.internal.contentDigest'
  | 'scheduledIn.createdBy.internal.contentFilePath'
  | 'scheduledIn.createdBy.internal.description'
  | 'scheduledIn.createdBy.internal.fieldOwners'
  | 'scheduledIn.createdBy.internal.ignoreType'
  | 'scheduledIn.createdBy.internal.mediaType'
  | 'scheduledIn.createdBy.internal.owner'
  | 'scheduledIn.createdBy.internal.type'
  | 'scheduledIn.createdBy.isActive'
  | 'scheduledIn.createdBy.kind'
  | 'scheduledIn.createdBy.name'
  | 'scheduledIn.createdBy.parent.children'
  | 'scheduledIn.createdBy.parent.id'
  | 'scheduledIn.createdBy.picture'
  | 'scheduledIn.createdBy.publishedAt'
  | 'scheduledIn.createdBy.remoteId'
  | 'scheduledIn.createdBy.remoteTypeName'
  | 'scheduledIn.createdBy.stage'
  | 'scheduledIn.createdBy.updatedAt'
  | 'scheduledIn.description'
  | 'scheduledIn.errorMessage'
  | 'scheduledIn.id'
  | 'scheduledIn.internal.content'
  | 'scheduledIn.internal.contentDigest'
  | 'scheduledIn.internal.contentFilePath'
  | 'scheduledIn.internal.description'
  | 'scheduledIn.internal.fieldOwners'
  | 'scheduledIn.internal.ignoreType'
  | 'scheduledIn.internal.mediaType'
  | 'scheduledIn.internal.owner'
  | 'scheduledIn.internal.type'
  | 'scheduledIn.parent.children'
  | 'scheduledIn.parent.children.children'
  | 'scheduledIn.parent.children.id'
  | 'scheduledIn.parent.id'
  | 'scheduledIn.parent.internal.content'
  | 'scheduledIn.parent.internal.contentDigest'
  | 'scheduledIn.parent.internal.contentFilePath'
  | 'scheduledIn.parent.internal.description'
  | 'scheduledIn.parent.internal.fieldOwners'
  | 'scheduledIn.parent.internal.ignoreType'
  | 'scheduledIn.parent.internal.mediaType'
  | 'scheduledIn.parent.internal.owner'
  | 'scheduledIn.parent.internal.type'
  | 'scheduledIn.parent.parent.children'
  | 'scheduledIn.parent.parent.id'
  | 'scheduledIn.publishedAt'
  | 'scheduledIn.publishedBy.children'
  | 'scheduledIn.publishedBy.children.children'
  | 'scheduledIn.publishedBy.children.id'
  | 'scheduledIn.publishedBy.createdAt'
  | 'scheduledIn.publishedBy.id'
  | 'scheduledIn.publishedBy.internal.content'
  | 'scheduledIn.publishedBy.internal.contentDigest'
  | 'scheduledIn.publishedBy.internal.contentFilePath'
  | 'scheduledIn.publishedBy.internal.description'
  | 'scheduledIn.publishedBy.internal.fieldOwners'
  | 'scheduledIn.publishedBy.internal.ignoreType'
  | 'scheduledIn.publishedBy.internal.mediaType'
  | 'scheduledIn.publishedBy.internal.owner'
  | 'scheduledIn.publishedBy.internal.type'
  | 'scheduledIn.publishedBy.isActive'
  | 'scheduledIn.publishedBy.kind'
  | 'scheduledIn.publishedBy.name'
  | 'scheduledIn.publishedBy.parent.children'
  | 'scheduledIn.publishedBy.parent.id'
  | 'scheduledIn.publishedBy.picture'
  | 'scheduledIn.publishedBy.publishedAt'
  | 'scheduledIn.publishedBy.remoteId'
  | 'scheduledIn.publishedBy.remoteTypeName'
  | 'scheduledIn.publishedBy.stage'
  | 'scheduledIn.publishedBy.updatedAt'
  | 'scheduledIn.rawPayload'
  | 'scheduledIn.release.children'
  | 'scheduledIn.release.children.children'
  | 'scheduledIn.release.children.id'
  | 'scheduledIn.release.createdAt'
  | 'scheduledIn.release.createdBy.children'
  | 'scheduledIn.release.createdBy.createdAt'
  | 'scheduledIn.release.createdBy.id'
  | 'scheduledIn.release.createdBy.isActive'
  | 'scheduledIn.release.createdBy.kind'
  | 'scheduledIn.release.createdBy.name'
  | 'scheduledIn.release.createdBy.picture'
  | 'scheduledIn.release.createdBy.publishedAt'
  | 'scheduledIn.release.createdBy.remoteId'
  | 'scheduledIn.release.createdBy.remoteTypeName'
  | 'scheduledIn.release.createdBy.stage'
  | 'scheduledIn.release.createdBy.updatedAt'
  | 'scheduledIn.release.description'
  | 'scheduledIn.release.errorMessage'
  | 'scheduledIn.release.id'
  | 'scheduledIn.release.internal.content'
  | 'scheduledIn.release.internal.contentDigest'
  | 'scheduledIn.release.internal.contentFilePath'
  | 'scheduledIn.release.internal.description'
  | 'scheduledIn.release.internal.fieldOwners'
  | 'scheduledIn.release.internal.ignoreType'
  | 'scheduledIn.release.internal.mediaType'
  | 'scheduledIn.release.internal.owner'
  | 'scheduledIn.release.internal.type'
  | 'scheduledIn.release.isActive'
  | 'scheduledIn.release.isImplicit'
  | 'scheduledIn.release.operations'
  | 'scheduledIn.release.operations.children'
  | 'scheduledIn.release.operations.createdAt'
  | 'scheduledIn.release.operations.description'
  | 'scheduledIn.release.operations.errorMessage'
  | 'scheduledIn.release.operations.id'
  | 'scheduledIn.release.operations.publishedAt'
  | 'scheduledIn.release.operations.rawPayload'
  | 'scheduledIn.release.operations.remoteId'
  | 'scheduledIn.release.operations.remoteTypeName'
  | 'scheduledIn.release.operations.stage'
  | 'scheduledIn.release.operations.status'
  | 'scheduledIn.release.operations.updatedAt'
  | 'scheduledIn.release.parent.children'
  | 'scheduledIn.release.parent.id'
  | 'scheduledIn.release.publishedAt'
  | 'scheduledIn.release.publishedBy.children'
  | 'scheduledIn.release.publishedBy.createdAt'
  | 'scheduledIn.release.publishedBy.id'
  | 'scheduledIn.release.publishedBy.isActive'
  | 'scheduledIn.release.publishedBy.kind'
  | 'scheduledIn.release.publishedBy.name'
  | 'scheduledIn.release.publishedBy.picture'
  | 'scheduledIn.release.publishedBy.publishedAt'
  | 'scheduledIn.release.publishedBy.remoteId'
  | 'scheduledIn.release.publishedBy.remoteTypeName'
  | 'scheduledIn.release.publishedBy.stage'
  | 'scheduledIn.release.publishedBy.updatedAt'
  | 'scheduledIn.release.releaseAt'
  | 'scheduledIn.release.remoteId'
  | 'scheduledIn.release.remoteTypeName'
  | 'scheduledIn.release.stage'
  | 'scheduledIn.release.status'
  | 'scheduledIn.release.title'
  | 'scheduledIn.release.updatedAt'
  | 'scheduledIn.release.updatedBy.children'
  | 'scheduledIn.release.updatedBy.createdAt'
  | 'scheduledIn.release.updatedBy.id'
  | 'scheduledIn.release.updatedBy.isActive'
  | 'scheduledIn.release.updatedBy.kind'
  | 'scheduledIn.release.updatedBy.name'
  | 'scheduledIn.release.updatedBy.picture'
  | 'scheduledIn.release.updatedBy.publishedAt'
  | 'scheduledIn.release.updatedBy.remoteId'
  | 'scheduledIn.release.updatedBy.remoteTypeName'
  | 'scheduledIn.release.updatedBy.stage'
  | 'scheduledIn.release.updatedBy.updatedAt'
  | 'scheduledIn.remoteId'
  | 'scheduledIn.remoteTypeName'
  | 'scheduledIn.stage'
  | 'scheduledIn.status'
  | 'scheduledIn.updatedAt'
  | 'scheduledIn.updatedBy.children'
  | 'scheduledIn.updatedBy.children.children'
  | 'scheduledIn.updatedBy.children.id'
  | 'scheduledIn.updatedBy.createdAt'
  | 'scheduledIn.updatedBy.id'
  | 'scheduledIn.updatedBy.internal.content'
  | 'scheduledIn.updatedBy.internal.contentDigest'
  | 'scheduledIn.updatedBy.internal.contentFilePath'
  | 'scheduledIn.updatedBy.internal.description'
  | 'scheduledIn.updatedBy.internal.fieldOwners'
  | 'scheduledIn.updatedBy.internal.ignoreType'
  | 'scheduledIn.updatedBy.internal.mediaType'
  | 'scheduledIn.updatedBy.internal.owner'
  | 'scheduledIn.updatedBy.internal.type'
  | 'scheduledIn.updatedBy.isActive'
  | 'scheduledIn.updatedBy.kind'
  | 'scheduledIn.updatedBy.name'
  | 'scheduledIn.updatedBy.parent.children'
  | 'scheduledIn.updatedBy.parent.id'
  | 'scheduledIn.updatedBy.picture'
  | 'scheduledIn.updatedBy.publishedAt'
  | 'scheduledIn.updatedBy.remoteId'
  | 'scheduledIn.updatedBy.remoteTypeName'
  | 'scheduledIn.updatedBy.stage'
  | 'scheduledIn.updatedBy.updatedAt'
  | 'stage'
  | 'stageNumber'
  | 'submittedText.html'
  | 'submittedText.markdown'
  | 'submittedText.raw'
  | 'submittedText.remoteTypeName'
  | 'submittedText.text'
  | 'title'
  | 'updatedAt'
  | 'updatedBy.children'
  | 'updatedBy.children.children'
  | 'updatedBy.children.children.children'
  | 'updatedBy.children.children.id'
  | 'updatedBy.children.id'
  | 'updatedBy.children.internal.content'
  | 'updatedBy.children.internal.contentDigest'
  | 'updatedBy.children.internal.contentFilePath'
  | 'updatedBy.children.internal.description'
  | 'updatedBy.children.internal.fieldOwners'
  | 'updatedBy.children.internal.ignoreType'
  | 'updatedBy.children.internal.mediaType'
  | 'updatedBy.children.internal.owner'
  | 'updatedBy.children.internal.type'
  | 'updatedBy.children.parent.children'
  | 'updatedBy.children.parent.id'
  | 'updatedBy.createdAt'
  | 'updatedBy.id'
  | 'updatedBy.internal.content'
  | 'updatedBy.internal.contentDigest'
  | 'updatedBy.internal.contentFilePath'
  | 'updatedBy.internal.description'
  | 'updatedBy.internal.fieldOwners'
  | 'updatedBy.internal.ignoreType'
  | 'updatedBy.internal.mediaType'
  | 'updatedBy.internal.owner'
  | 'updatedBy.internal.type'
  | 'updatedBy.isActive'
  | 'updatedBy.kind'
  | 'updatedBy.name'
  | 'updatedBy.parent.children'
  | 'updatedBy.parent.children.children'
  | 'updatedBy.parent.children.id'
  | 'updatedBy.parent.id'
  | 'updatedBy.parent.internal.content'
  | 'updatedBy.parent.internal.contentDigest'
  | 'updatedBy.parent.internal.contentFilePath'
  | 'updatedBy.parent.internal.description'
  | 'updatedBy.parent.internal.fieldOwners'
  | 'updatedBy.parent.internal.ignoreType'
  | 'updatedBy.parent.internal.mediaType'
  | 'updatedBy.parent.internal.owner'
  | 'updatedBy.parent.internal.type'
  | 'updatedBy.parent.parent.children'
  | 'updatedBy.parent.parent.id'
  | 'updatedBy.picture'
  | 'updatedBy.publishedAt'
  | 'updatedBy.remoteId'
  | 'updatedBy.remoteTypeName'
  | 'updatedBy.stage'
  | 'updatedBy.updatedAt';

type GraphCMS_StageTaskFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly createdAt: InputMaybe<JSONQueryOperatorInput>;
  readonly createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly helpfulInfo: InputMaybe<GraphCMS_HelpfulInfoFilterInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly intro: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly publishedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly questions: InputMaybe<GraphCMS_RichTextFilterListInput>;
  readonly remoteId: InputMaybe<IDQueryOperatorInput>;
  readonly remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  readonly scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  readonly stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  readonly stageNumber: InputMaybe<IntQueryOperatorInput>;
  readonly submittedText: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly updatedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};

type GraphCMS_StageTaskGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_StageTaskEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<GraphCMS_StageTaskGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_StageTask>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_StageTaskGroupConnection_distinctArgs = {
  field: GraphCMS_StageTaskFieldsEnum;
};


type GraphCMS_StageTaskGroupConnection_groupArgs = {
  field: GraphCMS_StageTaskFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_StageTaskGroupConnection_maxArgs = {
  field: GraphCMS_StageTaskFieldsEnum;
};


type GraphCMS_StageTaskGroupConnection_minArgs = {
  field: GraphCMS_StageTaskFieldsEnum;
};


type GraphCMS_StageTaskGroupConnection_sumArgs = {
  field: GraphCMS_StageTaskFieldsEnum;
};

type GraphCMS_StageTaskPage = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly createdAt: Scalars['JSON'];
  readonly createdBy: Maybe<GraphCMS_User>;
  readonly helpfulInfo: Maybe<GraphCMS_HelpfulInfo>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly locale: GraphCMS_Locale;
  readonly parent: Maybe<Node>;
  readonly publishedAt: Maybe<Scalars['JSON']>;
  readonly publishedBy: Maybe<GraphCMS_User>;
  readonly remoteId: Scalars['ID'];
  readonly remoteTypeName: Scalars['String'];
  readonly scheduledIn: ReadonlyArray<GraphCMS_ScheduledOperation>;
  readonly stage: GraphCMS_Stage;
  readonly stageNumber: Maybe<Scalars['Int']>;
  readonly submittedText: Maybe<GraphCMS_RichText>;
  readonly taskInfo: Maybe<GraphCMS_RichText>;
  readonly tasksToComplete: ReadonlyArray<GraphCMS_TaskToComplete>;
  readonly title: Maybe<Scalars['String']>;
  readonly updatedAt: Scalars['JSON'];
  readonly updatedBy: Maybe<GraphCMS_User>;
};

type GraphCMS_StageTaskPageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_StageTaskPageEdge>;
  readonly group: ReadonlyArray<GraphCMS_StageTaskPageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_StageTaskPage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_StageTaskPageConnection_distinctArgs = {
  field: GraphCMS_StageTaskPageFieldsEnum;
};


type GraphCMS_StageTaskPageConnection_groupArgs = {
  field: GraphCMS_StageTaskPageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_StageTaskPageConnection_maxArgs = {
  field: GraphCMS_StageTaskPageFieldsEnum;
};


type GraphCMS_StageTaskPageConnection_minArgs = {
  field: GraphCMS_StageTaskPageFieldsEnum;
};


type GraphCMS_StageTaskPageConnection_sumArgs = {
  field: GraphCMS_StageTaskPageFieldsEnum;
};

type GraphCMS_StageTaskPageEdge = {
  readonly next: Maybe<GraphCMS_StageTaskPage>;
  readonly node: GraphCMS_StageTaskPage;
  readonly previous: Maybe<GraphCMS_StageTaskPage>;
};

type GraphCMS_StageTaskPageFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'createdAt'
  | 'createdBy.children'
  | 'createdBy.children.children'
  | 'createdBy.children.children.children'
  | 'createdBy.children.children.id'
  | 'createdBy.children.id'
  | 'createdBy.children.internal.content'
  | 'createdBy.children.internal.contentDigest'
  | 'createdBy.children.internal.contentFilePath'
  | 'createdBy.children.internal.description'
  | 'createdBy.children.internal.fieldOwners'
  | 'createdBy.children.internal.ignoreType'
  | 'createdBy.children.internal.mediaType'
  | 'createdBy.children.internal.owner'
  | 'createdBy.children.internal.type'
  | 'createdBy.children.parent.children'
  | 'createdBy.children.parent.id'
  | 'createdBy.createdAt'
  | 'createdBy.id'
  | 'createdBy.internal.content'
  | 'createdBy.internal.contentDigest'
  | 'createdBy.internal.contentFilePath'
  | 'createdBy.internal.description'
  | 'createdBy.internal.fieldOwners'
  | 'createdBy.internal.ignoreType'
  | 'createdBy.internal.mediaType'
  | 'createdBy.internal.owner'
  | 'createdBy.internal.type'
  | 'createdBy.isActive'
  | 'createdBy.kind'
  | 'createdBy.name'
  | 'createdBy.parent.children'
  | 'createdBy.parent.children.children'
  | 'createdBy.parent.children.id'
  | 'createdBy.parent.id'
  | 'createdBy.parent.internal.content'
  | 'createdBy.parent.internal.contentDigest'
  | 'createdBy.parent.internal.contentFilePath'
  | 'createdBy.parent.internal.description'
  | 'createdBy.parent.internal.fieldOwners'
  | 'createdBy.parent.internal.ignoreType'
  | 'createdBy.parent.internal.mediaType'
  | 'createdBy.parent.internal.owner'
  | 'createdBy.parent.internal.type'
  | 'createdBy.parent.parent.children'
  | 'createdBy.parent.parent.id'
  | 'createdBy.picture'
  | 'createdBy.publishedAt'
  | 'createdBy.remoteId'
  | 'createdBy.remoteTypeName'
  | 'createdBy.stage'
  | 'createdBy.updatedAt'
  | 'helpfulInfo.children'
  | 'helpfulInfo.children.children'
  | 'helpfulInfo.children.children.children'
  | 'helpfulInfo.children.children.id'
  | 'helpfulInfo.children.id'
  | 'helpfulInfo.children.internal.content'
  | 'helpfulInfo.children.internal.contentDigest'
  | 'helpfulInfo.children.internal.contentFilePath'
  | 'helpfulInfo.children.internal.description'
  | 'helpfulInfo.children.internal.fieldOwners'
  | 'helpfulInfo.children.internal.ignoreType'
  | 'helpfulInfo.children.internal.mediaType'
  | 'helpfulInfo.children.internal.owner'
  | 'helpfulInfo.children.internal.type'
  | 'helpfulInfo.children.parent.children'
  | 'helpfulInfo.children.parent.id'
  | 'helpfulInfo.createdAt'
  | 'helpfulInfo.createdBy.children'
  | 'helpfulInfo.createdBy.children.children'
  | 'helpfulInfo.createdBy.children.id'
  | 'helpfulInfo.createdBy.createdAt'
  | 'helpfulInfo.createdBy.id'
  | 'helpfulInfo.createdBy.internal.content'
  | 'helpfulInfo.createdBy.internal.contentDigest'
  | 'helpfulInfo.createdBy.internal.contentFilePath'
  | 'helpfulInfo.createdBy.internal.description'
  | 'helpfulInfo.createdBy.internal.fieldOwners'
  | 'helpfulInfo.createdBy.internal.ignoreType'
  | 'helpfulInfo.createdBy.internal.mediaType'
  | 'helpfulInfo.createdBy.internal.owner'
  | 'helpfulInfo.createdBy.internal.type'
  | 'helpfulInfo.createdBy.isActive'
  | 'helpfulInfo.createdBy.kind'
  | 'helpfulInfo.createdBy.name'
  | 'helpfulInfo.createdBy.parent.children'
  | 'helpfulInfo.createdBy.parent.id'
  | 'helpfulInfo.createdBy.picture'
  | 'helpfulInfo.createdBy.publishedAt'
  | 'helpfulInfo.createdBy.remoteId'
  | 'helpfulInfo.createdBy.remoteTypeName'
  | 'helpfulInfo.createdBy.stage'
  | 'helpfulInfo.createdBy.updatedAt'
  | 'helpfulInfo.id'
  | 'helpfulInfo.info.html'
  | 'helpfulInfo.info.markdown'
  | 'helpfulInfo.info.raw'
  | 'helpfulInfo.info.remoteTypeName'
  | 'helpfulInfo.info.text'
  | 'helpfulInfo.internal.content'
  | 'helpfulInfo.internal.contentDigest'
  | 'helpfulInfo.internal.contentFilePath'
  | 'helpfulInfo.internal.description'
  | 'helpfulInfo.internal.fieldOwners'
  | 'helpfulInfo.internal.ignoreType'
  | 'helpfulInfo.internal.mediaType'
  | 'helpfulInfo.internal.owner'
  | 'helpfulInfo.internal.type'
  | 'helpfulInfo.locale'
  | 'helpfulInfo.parent.children'
  | 'helpfulInfo.parent.children.children'
  | 'helpfulInfo.parent.children.id'
  | 'helpfulInfo.parent.id'
  | 'helpfulInfo.parent.internal.content'
  | 'helpfulInfo.parent.internal.contentDigest'
  | 'helpfulInfo.parent.internal.contentFilePath'
  | 'helpfulInfo.parent.internal.description'
  | 'helpfulInfo.parent.internal.fieldOwners'
  | 'helpfulInfo.parent.internal.ignoreType'
  | 'helpfulInfo.parent.internal.mediaType'
  | 'helpfulInfo.parent.internal.owner'
  | 'helpfulInfo.parent.internal.type'
  | 'helpfulInfo.parent.parent.children'
  | 'helpfulInfo.parent.parent.id'
  | 'helpfulInfo.publishedAt'
  | 'helpfulInfo.publishedBy.children'
  | 'helpfulInfo.publishedBy.children.children'
  | 'helpfulInfo.publishedBy.children.id'
  | 'helpfulInfo.publishedBy.createdAt'
  | 'helpfulInfo.publishedBy.id'
  | 'helpfulInfo.publishedBy.internal.content'
  | 'helpfulInfo.publishedBy.internal.contentDigest'
  | 'helpfulInfo.publishedBy.internal.contentFilePath'
  | 'helpfulInfo.publishedBy.internal.description'
  | 'helpfulInfo.publishedBy.internal.fieldOwners'
  | 'helpfulInfo.publishedBy.internal.ignoreType'
  | 'helpfulInfo.publishedBy.internal.mediaType'
  | 'helpfulInfo.publishedBy.internal.owner'
  | 'helpfulInfo.publishedBy.internal.type'
  | 'helpfulInfo.publishedBy.isActive'
  | 'helpfulInfo.publishedBy.kind'
  | 'helpfulInfo.publishedBy.name'
  | 'helpfulInfo.publishedBy.parent.children'
  | 'helpfulInfo.publishedBy.parent.id'
  | 'helpfulInfo.publishedBy.picture'
  | 'helpfulInfo.publishedBy.publishedAt'
  | 'helpfulInfo.publishedBy.remoteId'
  | 'helpfulInfo.publishedBy.remoteTypeName'
  | 'helpfulInfo.publishedBy.stage'
  | 'helpfulInfo.publishedBy.updatedAt'
  | 'helpfulInfo.remoteId'
  | 'helpfulInfo.remoteTypeName'
  | 'helpfulInfo.scheduledIn'
  | 'helpfulInfo.scheduledIn.children'
  | 'helpfulInfo.scheduledIn.children.children'
  | 'helpfulInfo.scheduledIn.children.id'
  | 'helpfulInfo.scheduledIn.createdAt'
  | 'helpfulInfo.scheduledIn.createdBy.children'
  | 'helpfulInfo.scheduledIn.createdBy.createdAt'
  | 'helpfulInfo.scheduledIn.createdBy.id'
  | 'helpfulInfo.scheduledIn.createdBy.isActive'
  | 'helpfulInfo.scheduledIn.createdBy.kind'
  | 'helpfulInfo.scheduledIn.createdBy.name'
  | 'helpfulInfo.scheduledIn.createdBy.picture'
  | 'helpfulInfo.scheduledIn.createdBy.publishedAt'
  | 'helpfulInfo.scheduledIn.createdBy.remoteId'
  | 'helpfulInfo.scheduledIn.createdBy.remoteTypeName'
  | 'helpfulInfo.scheduledIn.createdBy.stage'
  | 'helpfulInfo.scheduledIn.createdBy.updatedAt'
  | 'helpfulInfo.scheduledIn.description'
  | 'helpfulInfo.scheduledIn.errorMessage'
  | 'helpfulInfo.scheduledIn.id'
  | 'helpfulInfo.scheduledIn.internal.content'
  | 'helpfulInfo.scheduledIn.internal.contentDigest'
  | 'helpfulInfo.scheduledIn.internal.contentFilePath'
  | 'helpfulInfo.scheduledIn.internal.description'
  | 'helpfulInfo.scheduledIn.internal.fieldOwners'
  | 'helpfulInfo.scheduledIn.internal.ignoreType'
  | 'helpfulInfo.scheduledIn.internal.mediaType'
  | 'helpfulInfo.scheduledIn.internal.owner'
  | 'helpfulInfo.scheduledIn.internal.type'
  | 'helpfulInfo.scheduledIn.parent.children'
  | 'helpfulInfo.scheduledIn.parent.id'
  | 'helpfulInfo.scheduledIn.publishedAt'
  | 'helpfulInfo.scheduledIn.publishedBy.children'
  | 'helpfulInfo.scheduledIn.publishedBy.createdAt'
  | 'helpfulInfo.scheduledIn.publishedBy.id'
  | 'helpfulInfo.scheduledIn.publishedBy.isActive'
  | 'helpfulInfo.scheduledIn.publishedBy.kind'
  | 'helpfulInfo.scheduledIn.publishedBy.name'
  | 'helpfulInfo.scheduledIn.publishedBy.picture'
  | 'helpfulInfo.scheduledIn.publishedBy.publishedAt'
  | 'helpfulInfo.scheduledIn.publishedBy.remoteId'
  | 'helpfulInfo.scheduledIn.publishedBy.remoteTypeName'
  | 'helpfulInfo.scheduledIn.publishedBy.stage'
  | 'helpfulInfo.scheduledIn.publishedBy.updatedAt'
  | 'helpfulInfo.scheduledIn.rawPayload'
  | 'helpfulInfo.scheduledIn.release.children'
  | 'helpfulInfo.scheduledIn.release.createdAt'
  | 'helpfulInfo.scheduledIn.release.description'
  | 'helpfulInfo.scheduledIn.release.errorMessage'
  | 'helpfulInfo.scheduledIn.release.id'
  | 'helpfulInfo.scheduledIn.release.isActive'
  | 'helpfulInfo.scheduledIn.release.isImplicit'
  | 'helpfulInfo.scheduledIn.release.operations'
  | 'helpfulInfo.scheduledIn.release.publishedAt'
  | 'helpfulInfo.scheduledIn.release.releaseAt'
  | 'helpfulInfo.scheduledIn.release.remoteId'
  | 'helpfulInfo.scheduledIn.release.remoteTypeName'
  | 'helpfulInfo.scheduledIn.release.stage'
  | 'helpfulInfo.scheduledIn.release.status'
  | 'helpfulInfo.scheduledIn.release.title'
  | 'helpfulInfo.scheduledIn.release.updatedAt'
  | 'helpfulInfo.scheduledIn.remoteId'
  | 'helpfulInfo.scheduledIn.remoteTypeName'
  | 'helpfulInfo.scheduledIn.stage'
  | 'helpfulInfo.scheduledIn.status'
  | 'helpfulInfo.scheduledIn.updatedAt'
  | 'helpfulInfo.scheduledIn.updatedBy.children'
  | 'helpfulInfo.scheduledIn.updatedBy.createdAt'
  | 'helpfulInfo.scheduledIn.updatedBy.id'
  | 'helpfulInfo.scheduledIn.updatedBy.isActive'
  | 'helpfulInfo.scheduledIn.updatedBy.kind'
  | 'helpfulInfo.scheduledIn.updatedBy.name'
  | 'helpfulInfo.scheduledIn.updatedBy.picture'
  | 'helpfulInfo.scheduledIn.updatedBy.publishedAt'
  | 'helpfulInfo.scheduledIn.updatedBy.remoteId'
  | 'helpfulInfo.scheduledIn.updatedBy.remoteTypeName'
  | 'helpfulInfo.scheduledIn.updatedBy.stage'
  | 'helpfulInfo.scheduledIn.updatedBy.updatedAt'
  | 'helpfulInfo.stage'
  | 'helpfulInfo.stageNumber'
  | 'helpfulInfo.updatedAt'
  | 'helpfulInfo.updatedBy.children'
  | 'helpfulInfo.updatedBy.children.children'
  | 'helpfulInfo.updatedBy.children.id'
  | 'helpfulInfo.updatedBy.createdAt'
  | 'helpfulInfo.updatedBy.id'
  | 'helpfulInfo.updatedBy.internal.content'
  | 'helpfulInfo.updatedBy.internal.contentDigest'
  | 'helpfulInfo.updatedBy.internal.contentFilePath'
  | 'helpfulInfo.updatedBy.internal.description'
  | 'helpfulInfo.updatedBy.internal.fieldOwners'
  | 'helpfulInfo.updatedBy.internal.ignoreType'
  | 'helpfulInfo.updatedBy.internal.mediaType'
  | 'helpfulInfo.updatedBy.internal.owner'
  | 'helpfulInfo.updatedBy.internal.type'
  | 'helpfulInfo.updatedBy.isActive'
  | 'helpfulInfo.updatedBy.kind'
  | 'helpfulInfo.updatedBy.name'
  | 'helpfulInfo.updatedBy.parent.children'
  | 'helpfulInfo.updatedBy.parent.id'
  | 'helpfulInfo.updatedBy.picture'
  | 'helpfulInfo.updatedBy.publishedAt'
  | 'helpfulInfo.updatedBy.remoteId'
  | 'helpfulInfo.updatedBy.remoteTypeName'
  | 'helpfulInfo.updatedBy.stage'
  | 'helpfulInfo.updatedBy.updatedAt'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'locale'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'publishedAt'
  | 'publishedBy.children'
  | 'publishedBy.children.children'
  | 'publishedBy.children.children.children'
  | 'publishedBy.children.children.id'
  | 'publishedBy.children.id'
  | 'publishedBy.children.internal.content'
  | 'publishedBy.children.internal.contentDigest'
  | 'publishedBy.children.internal.contentFilePath'
  | 'publishedBy.children.internal.description'
  | 'publishedBy.children.internal.fieldOwners'
  | 'publishedBy.children.internal.ignoreType'
  | 'publishedBy.children.internal.mediaType'
  | 'publishedBy.children.internal.owner'
  | 'publishedBy.children.internal.type'
  | 'publishedBy.children.parent.children'
  | 'publishedBy.children.parent.id'
  | 'publishedBy.createdAt'
  | 'publishedBy.id'
  | 'publishedBy.internal.content'
  | 'publishedBy.internal.contentDigest'
  | 'publishedBy.internal.contentFilePath'
  | 'publishedBy.internal.description'
  | 'publishedBy.internal.fieldOwners'
  | 'publishedBy.internal.ignoreType'
  | 'publishedBy.internal.mediaType'
  | 'publishedBy.internal.owner'
  | 'publishedBy.internal.type'
  | 'publishedBy.isActive'
  | 'publishedBy.kind'
  | 'publishedBy.name'
  | 'publishedBy.parent.children'
  | 'publishedBy.parent.children.children'
  | 'publishedBy.parent.children.id'
  | 'publishedBy.parent.id'
  | 'publishedBy.parent.internal.content'
  | 'publishedBy.parent.internal.contentDigest'
  | 'publishedBy.parent.internal.contentFilePath'
  | 'publishedBy.parent.internal.description'
  | 'publishedBy.parent.internal.fieldOwners'
  | 'publishedBy.parent.internal.ignoreType'
  | 'publishedBy.parent.internal.mediaType'
  | 'publishedBy.parent.internal.owner'
  | 'publishedBy.parent.internal.type'
  | 'publishedBy.parent.parent.children'
  | 'publishedBy.parent.parent.id'
  | 'publishedBy.picture'
  | 'publishedBy.publishedAt'
  | 'publishedBy.remoteId'
  | 'publishedBy.remoteTypeName'
  | 'publishedBy.stage'
  | 'publishedBy.updatedAt'
  | 'remoteId'
  | 'remoteTypeName'
  | 'scheduledIn'
  | 'scheduledIn.children'
  | 'scheduledIn.children.children'
  | 'scheduledIn.children.children.children'
  | 'scheduledIn.children.children.id'
  | 'scheduledIn.children.id'
  | 'scheduledIn.children.internal.content'
  | 'scheduledIn.children.internal.contentDigest'
  | 'scheduledIn.children.internal.contentFilePath'
  | 'scheduledIn.children.internal.description'
  | 'scheduledIn.children.internal.fieldOwners'
  | 'scheduledIn.children.internal.ignoreType'
  | 'scheduledIn.children.internal.mediaType'
  | 'scheduledIn.children.internal.owner'
  | 'scheduledIn.children.internal.type'
  | 'scheduledIn.children.parent.children'
  | 'scheduledIn.children.parent.id'
  | 'scheduledIn.createdAt'
  | 'scheduledIn.createdBy.children'
  | 'scheduledIn.createdBy.children.children'
  | 'scheduledIn.createdBy.children.id'
  | 'scheduledIn.createdBy.createdAt'
  | 'scheduledIn.createdBy.id'
  | 'scheduledIn.createdBy.internal.content'
  | 'scheduledIn.createdBy.internal.contentDigest'
  | 'scheduledIn.createdBy.internal.contentFilePath'
  | 'scheduledIn.createdBy.internal.description'
  | 'scheduledIn.createdBy.internal.fieldOwners'
  | 'scheduledIn.createdBy.internal.ignoreType'
  | 'scheduledIn.createdBy.internal.mediaType'
  | 'scheduledIn.createdBy.internal.owner'
  | 'scheduledIn.createdBy.internal.type'
  | 'scheduledIn.createdBy.isActive'
  | 'scheduledIn.createdBy.kind'
  | 'scheduledIn.createdBy.name'
  | 'scheduledIn.createdBy.parent.children'
  | 'scheduledIn.createdBy.parent.id'
  | 'scheduledIn.createdBy.picture'
  | 'scheduledIn.createdBy.publishedAt'
  | 'scheduledIn.createdBy.remoteId'
  | 'scheduledIn.createdBy.remoteTypeName'
  | 'scheduledIn.createdBy.stage'
  | 'scheduledIn.createdBy.updatedAt'
  | 'scheduledIn.description'
  | 'scheduledIn.errorMessage'
  | 'scheduledIn.id'
  | 'scheduledIn.internal.content'
  | 'scheduledIn.internal.contentDigest'
  | 'scheduledIn.internal.contentFilePath'
  | 'scheduledIn.internal.description'
  | 'scheduledIn.internal.fieldOwners'
  | 'scheduledIn.internal.ignoreType'
  | 'scheduledIn.internal.mediaType'
  | 'scheduledIn.internal.owner'
  | 'scheduledIn.internal.type'
  | 'scheduledIn.parent.children'
  | 'scheduledIn.parent.children.children'
  | 'scheduledIn.parent.children.id'
  | 'scheduledIn.parent.id'
  | 'scheduledIn.parent.internal.content'
  | 'scheduledIn.parent.internal.contentDigest'
  | 'scheduledIn.parent.internal.contentFilePath'
  | 'scheduledIn.parent.internal.description'
  | 'scheduledIn.parent.internal.fieldOwners'
  | 'scheduledIn.parent.internal.ignoreType'
  | 'scheduledIn.parent.internal.mediaType'
  | 'scheduledIn.parent.internal.owner'
  | 'scheduledIn.parent.internal.type'
  | 'scheduledIn.parent.parent.children'
  | 'scheduledIn.parent.parent.id'
  | 'scheduledIn.publishedAt'
  | 'scheduledIn.publishedBy.children'
  | 'scheduledIn.publishedBy.children.children'
  | 'scheduledIn.publishedBy.children.id'
  | 'scheduledIn.publishedBy.createdAt'
  | 'scheduledIn.publishedBy.id'
  | 'scheduledIn.publishedBy.internal.content'
  | 'scheduledIn.publishedBy.internal.contentDigest'
  | 'scheduledIn.publishedBy.internal.contentFilePath'
  | 'scheduledIn.publishedBy.internal.description'
  | 'scheduledIn.publishedBy.internal.fieldOwners'
  | 'scheduledIn.publishedBy.internal.ignoreType'
  | 'scheduledIn.publishedBy.internal.mediaType'
  | 'scheduledIn.publishedBy.internal.owner'
  | 'scheduledIn.publishedBy.internal.type'
  | 'scheduledIn.publishedBy.isActive'
  | 'scheduledIn.publishedBy.kind'
  | 'scheduledIn.publishedBy.name'
  | 'scheduledIn.publishedBy.parent.children'
  | 'scheduledIn.publishedBy.parent.id'
  | 'scheduledIn.publishedBy.picture'
  | 'scheduledIn.publishedBy.publishedAt'
  | 'scheduledIn.publishedBy.remoteId'
  | 'scheduledIn.publishedBy.remoteTypeName'
  | 'scheduledIn.publishedBy.stage'
  | 'scheduledIn.publishedBy.updatedAt'
  | 'scheduledIn.rawPayload'
  | 'scheduledIn.release.children'
  | 'scheduledIn.release.children.children'
  | 'scheduledIn.release.children.id'
  | 'scheduledIn.release.createdAt'
  | 'scheduledIn.release.createdBy.children'
  | 'scheduledIn.release.createdBy.createdAt'
  | 'scheduledIn.release.createdBy.id'
  | 'scheduledIn.release.createdBy.isActive'
  | 'scheduledIn.release.createdBy.kind'
  | 'scheduledIn.release.createdBy.name'
  | 'scheduledIn.release.createdBy.picture'
  | 'scheduledIn.release.createdBy.publishedAt'
  | 'scheduledIn.release.createdBy.remoteId'
  | 'scheduledIn.release.createdBy.remoteTypeName'
  | 'scheduledIn.release.createdBy.stage'
  | 'scheduledIn.release.createdBy.updatedAt'
  | 'scheduledIn.release.description'
  | 'scheduledIn.release.errorMessage'
  | 'scheduledIn.release.id'
  | 'scheduledIn.release.internal.content'
  | 'scheduledIn.release.internal.contentDigest'
  | 'scheduledIn.release.internal.contentFilePath'
  | 'scheduledIn.release.internal.description'
  | 'scheduledIn.release.internal.fieldOwners'
  | 'scheduledIn.release.internal.ignoreType'
  | 'scheduledIn.release.internal.mediaType'
  | 'scheduledIn.release.internal.owner'
  | 'scheduledIn.release.internal.type'
  | 'scheduledIn.release.isActive'
  | 'scheduledIn.release.isImplicit'
  | 'scheduledIn.release.operations'
  | 'scheduledIn.release.operations.children'
  | 'scheduledIn.release.operations.createdAt'
  | 'scheduledIn.release.operations.description'
  | 'scheduledIn.release.operations.errorMessage'
  | 'scheduledIn.release.operations.id'
  | 'scheduledIn.release.operations.publishedAt'
  | 'scheduledIn.release.operations.rawPayload'
  | 'scheduledIn.release.operations.remoteId'
  | 'scheduledIn.release.operations.remoteTypeName'
  | 'scheduledIn.release.operations.stage'
  | 'scheduledIn.release.operations.status'
  | 'scheduledIn.release.operations.updatedAt'
  | 'scheduledIn.release.parent.children'
  | 'scheduledIn.release.parent.id'
  | 'scheduledIn.release.publishedAt'
  | 'scheduledIn.release.publishedBy.children'
  | 'scheduledIn.release.publishedBy.createdAt'
  | 'scheduledIn.release.publishedBy.id'
  | 'scheduledIn.release.publishedBy.isActive'
  | 'scheduledIn.release.publishedBy.kind'
  | 'scheduledIn.release.publishedBy.name'
  | 'scheduledIn.release.publishedBy.picture'
  | 'scheduledIn.release.publishedBy.publishedAt'
  | 'scheduledIn.release.publishedBy.remoteId'
  | 'scheduledIn.release.publishedBy.remoteTypeName'
  | 'scheduledIn.release.publishedBy.stage'
  | 'scheduledIn.release.publishedBy.updatedAt'
  | 'scheduledIn.release.releaseAt'
  | 'scheduledIn.release.remoteId'
  | 'scheduledIn.release.remoteTypeName'
  | 'scheduledIn.release.stage'
  | 'scheduledIn.release.status'
  | 'scheduledIn.release.title'
  | 'scheduledIn.release.updatedAt'
  | 'scheduledIn.release.updatedBy.children'
  | 'scheduledIn.release.updatedBy.createdAt'
  | 'scheduledIn.release.updatedBy.id'
  | 'scheduledIn.release.updatedBy.isActive'
  | 'scheduledIn.release.updatedBy.kind'
  | 'scheduledIn.release.updatedBy.name'
  | 'scheduledIn.release.updatedBy.picture'
  | 'scheduledIn.release.updatedBy.publishedAt'
  | 'scheduledIn.release.updatedBy.remoteId'
  | 'scheduledIn.release.updatedBy.remoteTypeName'
  | 'scheduledIn.release.updatedBy.stage'
  | 'scheduledIn.release.updatedBy.updatedAt'
  | 'scheduledIn.remoteId'
  | 'scheduledIn.remoteTypeName'
  | 'scheduledIn.stage'
  | 'scheduledIn.status'
  | 'scheduledIn.updatedAt'
  | 'scheduledIn.updatedBy.children'
  | 'scheduledIn.updatedBy.children.children'
  | 'scheduledIn.updatedBy.children.id'
  | 'scheduledIn.updatedBy.createdAt'
  | 'scheduledIn.updatedBy.id'
  | 'scheduledIn.updatedBy.internal.content'
  | 'scheduledIn.updatedBy.internal.contentDigest'
  | 'scheduledIn.updatedBy.internal.contentFilePath'
  | 'scheduledIn.updatedBy.internal.description'
  | 'scheduledIn.updatedBy.internal.fieldOwners'
  | 'scheduledIn.updatedBy.internal.ignoreType'
  | 'scheduledIn.updatedBy.internal.mediaType'
  | 'scheduledIn.updatedBy.internal.owner'
  | 'scheduledIn.updatedBy.internal.type'
  | 'scheduledIn.updatedBy.isActive'
  | 'scheduledIn.updatedBy.kind'
  | 'scheduledIn.updatedBy.name'
  | 'scheduledIn.updatedBy.parent.children'
  | 'scheduledIn.updatedBy.parent.id'
  | 'scheduledIn.updatedBy.picture'
  | 'scheduledIn.updatedBy.publishedAt'
  | 'scheduledIn.updatedBy.remoteId'
  | 'scheduledIn.updatedBy.remoteTypeName'
  | 'scheduledIn.updatedBy.stage'
  | 'scheduledIn.updatedBy.updatedAt'
  | 'stage'
  | 'stageNumber'
  | 'submittedText.html'
  | 'submittedText.markdown'
  | 'submittedText.raw'
  | 'submittedText.remoteTypeName'
  | 'submittedText.text'
  | 'taskInfo.html'
  | 'taskInfo.markdown'
  | 'taskInfo.raw'
  | 'taskInfo.remoteTypeName'
  | 'taskInfo.text'
  | 'tasksToComplete'
  | 'tasksToComplete.children'
  | 'tasksToComplete.children.children'
  | 'tasksToComplete.children.children.children'
  | 'tasksToComplete.children.children.id'
  | 'tasksToComplete.children.id'
  | 'tasksToComplete.children.internal.content'
  | 'tasksToComplete.children.internal.contentDigest'
  | 'tasksToComplete.children.internal.contentFilePath'
  | 'tasksToComplete.children.internal.description'
  | 'tasksToComplete.children.internal.fieldOwners'
  | 'tasksToComplete.children.internal.ignoreType'
  | 'tasksToComplete.children.internal.mediaType'
  | 'tasksToComplete.children.internal.owner'
  | 'tasksToComplete.children.internal.type'
  | 'tasksToComplete.children.parent.children'
  | 'tasksToComplete.children.parent.id'
  | 'tasksToComplete.createdAt'
  | 'tasksToComplete.createdBy.children'
  | 'tasksToComplete.createdBy.children.children'
  | 'tasksToComplete.createdBy.children.id'
  | 'tasksToComplete.createdBy.createdAt'
  | 'tasksToComplete.createdBy.id'
  | 'tasksToComplete.createdBy.internal.content'
  | 'tasksToComplete.createdBy.internal.contentDigest'
  | 'tasksToComplete.createdBy.internal.contentFilePath'
  | 'tasksToComplete.createdBy.internal.description'
  | 'tasksToComplete.createdBy.internal.fieldOwners'
  | 'tasksToComplete.createdBy.internal.ignoreType'
  | 'tasksToComplete.createdBy.internal.mediaType'
  | 'tasksToComplete.createdBy.internal.owner'
  | 'tasksToComplete.createdBy.internal.type'
  | 'tasksToComplete.createdBy.isActive'
  | 'tasksToComplete.createdBy.kind'
  | 'tasksToComplete.createdBy.name'
  | 'tasksToComplete.createdBy.parent.children'
  | 'tasksToComplete.createdBy.parent.id'
  | 'tasksToComplete.createdBy.picture'
  | 'tasksToComplete.createdBy.publishedAt'
  | 'tasksToComplete.createdBy.remoteId'
  | 'tasksToComplete.createdBy.remoteTypeName'
  | 'tasksToComplete.createdBy.stage'
  | 'tasksToComplete.createdBy.updatedAt'
  | 'tasksToComplete.id'
  | 'tasksToComplete.internal.content'
  | 'tasksToComplete.internal.contentDigest'
  | 'tasksToComplete.internal.contentFilePath'
  | 'tasksToComplete.internal.description'
  | 'tasksToComplete.internal.fieldOwners'
  | 'tasksToComplete.internal.ignoreType'
  | 'tasksToComplete.internal.mediaType'
  | 'tasksToComplete.internal.owner'
  | 'tasksToComplete.internal.type'
  | 'tasksToComplete.locale'
  | 'tasksToComplete.parent.children'
  | 'tasksToComplete.parent.children.children'
  | 'tasksToComplete.parent.children.id'
  | 'tasksToComplete.parent.id'
  | 'tasksToComplete.parent.internal.content'
  | 'tasksToComplete.parent.internal.contentDigest'
  | 'tasksToComplete.parent.internal.contentFilePath'
  | 'tasksToComplete.parent.internal.description'
  | 'tasksToComplete.parent.internal.fieldOwners'
  | 'tasksToComplete.parent.internal.ignoreType'
  | 'tasksToComplete.parent.internal.mediaType'
  | 'tasksToComplete.parent.internal.owner'
  | 'tasksToComplete.parent.internal.type'
  | 'tasksToComplete.parent.parent.children'
  | 'tasksToComplete.parent.parent.id'
  | 'tasksToComplete.publishedAt'
  | 'tasksToComplete.publishedBy.children'
  | 'tasksToComplete.publishedBy.children.children'
  | 'tasksToComplete.publishedBy.children.id'
  | 'tasksToComplete.publishedBy.createdAt'
  | 'tasksToComplete.publishedBy.id'
  | 'tasksToComplete.publishedBy.internal.content'
  | 'tasksToComplete.publishedBy.internal.contentDigest'
  | 'tasksToComplete.publishedBy.internal.contentFilePath'
  | 'tasksToComplete.publishedBy.internal.description'
  | 'tasksToComplete.publishedBy.internal.fieldOwners'
  | 'tasksToComplete.publishedBy.internal.ignoreType'
  | 'tasksToComplete.publishedBy.internal.mediaType'
  | 'tasksToComplete.publishedBy.internal.owner'
  | 'tasksToComplete.publishedBy.internal.type'
  | 'tasksToComplete.publishedBy.isActive'
  | 'tasksToComplete.publishedBy.kind'
  | 'tasksToComplete.publishedBy.name'
  | 'tasksToComplete.publishedBy.parent.children'
  | 'tasksToComplete.publishedBy.parent.id'
  | 'tasksToComplete.publishedBy.picture'
  | 'tasksToComplete.publishedBy.publishedAt'
  | 'tasksToComplete.publishedBy.remoteId'
  | 'tasksToComplete.publishedBy.remoteTypeName'
  | 'tasksToComplete.publishedBy.stage'
  | 'tasksToComplete.publishedBy.updatedAt'
  | 'tasksToComplete.remoteId'
  | 'tasksToComplete.remoteTypeName'
  | 'tasksToComplete.scheduledIn'
  | 'tasksToComplete.scheduledIn.children'
  | 'tasksToComplete.scheduledIn.children.children'
  | 'tasksToComplete.scheduledIn.children.id'
  | 'tasksToComplete.scheduledIn.createdAt'
  | 'tasksToComplete.scheduledIn.createdBy.children'
  | 'tasksToComplete.scheduledIn.createdBy.createdAt'
  | 'tasksToComplete.scheduledIn.createdBy.id'
  | 'tasksToComplete.scheduledIn.createdBy.isActive'
  | 'tasksToComplete.scheduledIn.createdBy.kind'
  | 'tasksToComplete.scheduledIn.createdBy.name'
  | 'tasksToComplete.scheduledIn.createdBy.picture'
  | 'tasksToComplete.scheduledIn.createdBy.publishedAt'
  | 'tasksToComplete.scheduledIn.createdBy.remoteId'
  | 'tasksToComplete.scheduledIn.createdBy.remoteTypeName'
  | 'tasksToComplete.scheduledIn.createdBy.stage'
  | 'tasksToComplete.scheduledIn.createdBy.updatedAt'
  | 'tasksToComplete.scheduledIn.description'
  | 'tasksToComplete.scheduledIn.errorMessage'
  | 'tasksToComplete.scheduledIn.id'
  | 'tasksToComplete.scheduledIn.internal.content'
  | 'tasksToComplete.scheduledIn.internal.contentDigest'
  | 'tasksToComplete.scheduledIn.internal.contentFilePath'
  | 'tasksToComplete.scheduledIn.internal.description'
  | 'tasksToComplete.scheduledIn.internal.fieldOwners'
  | 'tasksToComplete.scheduledIn.internal.ignoreType'
  | 'tasksToComplete.scheduledIn.internal.mediaType'
  | 'tasksToComplete.scheduledIn.internal.owner'
  | 'tasksToComplete.scheduledIn.internal.type'
  | 'tasksToComplete.scheduledIn.parent.children'
  | 'tasksToComplete.scheduledIn.parent.id'
  | 'tasksToComplete.scheduledIn.publishedAt'
  | 'tasksToComplete.scheduledIn.publishedBy.children'
  | 'tasksToComplete.scheduledIn.publishedBy.createdAt'
  | 'tasksToComplete.scheduledIn.publishedBy.id'
  | 'tasksToComplete.scheduledIn.publishedBy.isActive'
  | 'tasksToComplete.scheduledIn.publishedBy.kind'
  | 'tasksToComplete.scheduledIn.publishedBy.name'
  | 'tasksToComplete.scheduledIn.publishedBy.picture'
  | 'tasksToComplete.scheduledIn.publishedBy.publishedAt'
  | 'tasksToComplete.scheduledIn.publishedBy.remoteId'
  | 'tasksToComplete.scheduledIn.publishedBy.remoteTypeName'
  | 'tasksToComplete.scheduledIn.publishedBy.stage'
  | 'tasksToComplete.scheduledIn.publishedBy.updatedAt'
  | 'tasksToComplete.scheduledIn.rawPayload'
  | 'tasksToComplete.scheduledIn.release.children'
  | 'tasksToComplete.scheduledIn.release.createdAt'
  | 'tasksToComplete.scheduledIn.release.description'
  | 'tasksToComplete.scheduledIn.release.errorMessage'
  | 'tasksToComplete.scheduledIn.release.id'
  | 'tasksToComplete.scheduledIn.release.isActive'
  | 'tasksToComplete.scheduledIn.release.isImplicit'
  | 'tasksToComplete.scheduledIn.release.operations'
  | 'tasksToComplete.scheduledIn.release.publishedAt'
  | 'tasksToComplete.scheduledIn.release.releaseAt'
  | 'tasksToComplete.scheduledIn.release.remoteId'
  | 'tasksToComplete.scheduledIn.release.remoteTypeName'
  | 'tasksToComplete.scheduledIn.release.stage'
  | 'tasksToComplete.scheduledIn.release.status'
  | 'tasksToComplete.scheduledIn.release.title'
  | 'tasksToComplete.scheduledIn.release.updatedAt'
  | 'tasksToComplete.scheduledIn.remoteId'
  | 'tasksToComplete.scheduledIn.remoteTypeName'
  | 'tasksToComplete.scheduledIn.stage'
  | 'tasksToComplete.scheduledIn.status'
  | 'tasksToComplete.scheduledIn.updatedAt'
  | 'tasksToComplete.scheduledIn.updatedBy.children'
  | 'tasksToComplete.scheduledIn.updatedBy.createdAt'
  | 'tasksToComplete.scheduledIn.updatedBy.id'
  | 'tasksToComplete.scheduledIn.updatedBy.isActive'
  | 'tasksToComplete.scheduledIn.updatedBy.kind'
  | 'tasksToComplete.scheduledIn.updatedBy.name'
  | 'tasksToComplete.scheduledIn.updatedBy.picture'
  | 'tasksToComplete.scheduledIn.updatedBy.publishedAt'
  | 'tasksToComplete.scheduledIn.updatedBy.remoteId'
  | 'tasksToComplete.scheduledIn.updatedBy.remoteTypeName'
  | 'tasksToComplete.scheduledIn.updatedBy.stage'
  | 'tasksToComplete.scheduledIn.updatedBy.updatedAt'
  | 'tasksToComplete.stage'
  | 'tasksToComplete.stageNumber'
  | 'tasksToComplete.submittedText.html'
  | 'tasksToComplete.submittedText.markdown'
  | 'tasksToComplete.submittedText.raw'
  | 'tasksToComplete.submittedText.remoteTypeName'
  | 'tasksToComplete.submittedText.text'
  | 'tasksToComplete.taskInfo.html'
  | 'tasksToComplete.taskInfo.markdown'
  | 'tasksToComplete.taskInfo.raw'
  | 'tasksToComplete.taskInfo.remoteTypeName'
  | 'tasksToComplete.taskInfo.text'
  | 'tasksToComplete.taskLinkText'
  | 'tasksToComplete.title'
  | 'tasksToComplete.updatedAt'
  | 'tasksToComplete.updatedBy.children'
  | 'tasksToComplete.updatedBy.children.children'
  | 'tasksToComplete.updatedBy.children.id'
  | 'tasksToComplete.updatedBy.createdAt'
  | 'tasksToComplete.updatedBy.id'
  | 'tasksToComplete.updatedBy.internal.content'
  | 'tasksToComplete.updatedBy.internal.contentDigest'
  | 'tasksToComplete.updatedBy.internal.contentFilePath'
  | 'tasksToComplete.updatedBy.internal.description'
  | 'tasksToComplete.updatedBy.internal.fieldOwners'
  | 'tasksToComplete.updatedBy.internal.ignoreType'
  | 'tasksToComplete.updatedBy.internal.mediaType'
  | 'tasksToComplete.updatedBy.internal.owner'
  | 'tasksToComplete.updatedBy.internal.type'
  | 'tasksToComplete.updatedBy.isActive'
  | 'tasksToComplete.updatedBy.kind'
  | 'tasksToComplete.updatedBy.name'
  | 'tasksToComplete.updatedBy.parent.children'
  | 'tasksToComplete.updatedBy.parent.id'
  | 'tasksToComplete.updatedBy.picture'
  | 'tasksToComplete.updatedBy.publishedAt'
  | 'tasksToComplete.updatedBy.remoteId'
  | 'tasksToComplete.updatedBy.remoteTypeName'
  | 'tasksToComplete.updatedBy.stage'
  | 'tasksToComplete.updatedBy.updatedAt'
  | 'title'
  | 'updatedAt'
  | 'updatedBy.children'
  | 'updatedBy.children.children'
  | 'updatedBy.children.children.children'
  | 'updatedBy.children.children.id'
  | 'updatedBy.children.id'
  | 'updatedBy.children.internal.content'
  | 'updatedBy.children.internal.contentDigest'
  | 'updatedBy.children.internal.contentFilePath'
  | 'updatedBy.children.internal.description'
  | 'updatedBy.children.internal.fieldOwners'
  | 'updatedBy.children.internal.ignoreType'
  | 'updatedBy.children.internal.mediaType'
  | 'updatedBy.children.internal.owner'
  | 'updatedBy.children.internal.type'
  | 'updatedBy.children.parent.children'
  | 'updatedBy.children.parent.id'
  | 'updatedBy.createdAt'
  | 'updatedBy.id'
  | 'updatedBy.internal.content'
  | 'updatedBy.internal.contentDigest'
  | 'updatedBy.internal.contentFilePath'
  | 'updatedBy.internal.description'
  | 'updatedBy.internal.fieldOwners'
  | 'updatedBy.internal.ignoreType'
  | 'updatedBy.internal.mediaType'
  | 'updatedBy.internal.owner'
  | 'updatedBy.internal.type'
  | 'updatedBy.isActive'
  | 'updatedBy.kind'
  | 'updatedBy.name'
  | 'updatedBy.parent.children'
  | 'updatedBy.parent.children.children'
  | 'updatedBy.parent.children.id'
  | 'updatedBy.parent.id'
  | 'updatedBy.parent.internal.content'
  | 'updatedBy.parent.internal.contentDigest'
  | 'updatedBy.parent.internal.contentFilePath'
  | 'updatedBy.parent.internal.description'
  | 'updatedBy.parent.internal.fieldOwners'
  | 'updatedBy.parent.internal.ignoreType'
  | 'updatedBy.parent.internal.mediaType'
  | 'updatedBy.parent.internal.owner'
  | 'updatedBy.parent.internal.type'
  | 'updatedBy.parent.parent.children'
  | 'updatedBy.parent.parent.id'
  | 'updatedBy.picture'
  | 'updatedBy.publishedAt'
  | 'updatedBy.remoteId'
  | 'updatedBy.remoteTypeName'
  | 'updatedBy.stage'
  | 'updatedBy.updatedAt';

type GraphCMS_StageTaskPageFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly createdAt: InputMaybe<JSONQueryOperatorInput>;
  readonly createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly helpfulInfo: InputMaybe<GraphCMS_HelpfulInfoFilterInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly publishedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly remoteId: InputMaybe<IDQueryOperatorInput>;
  readonly remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  readonly scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  readonly stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  readonly stageNumber: InputMaybe<IntQueryOperatorInput>;
  readonly submittedText: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly taskInfo: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly tasksToComplete: InputMaybe<GraphCMS_TaskToCompleteFilterListInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly updatedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};

type GraphCMS_StageTaskPageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_StageTaskPageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<GraphCMS_StageTaskPageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_StageTaskPage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_StageTaskPageGroupConnection_distinctArgs = {
  field: GraphCMS_StageTaskPageFieldsEnum;
};


type GraphCMS_StageTaskPageGroupConnection_groupArgs = {
  field: GraphCMS_StageTaskPageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_StageTaskPageGroupConnection_maxArgs = {
  field: GraphCMS_StageTaskPageFieldsEnum;
};


type GraphCMS_StageTaskPageGroupConnection_minArgs = {
  field: GraphCMS_StageTaskPageFieldsEnum;
};


type GraphCMS_StageTaskPageGroupConnection_sumArgs = {
  field: GraphCMS_StageTaskPageFieldsEnum;
};

type GraphCMS_StageTaskPageSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_StageTaskPageFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type GraphCMS_StageTaskSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_StageTaskFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type GraphCMS_TaskToComplete = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly createdAt: Scalars['JSON'];
  readonly createdBy: Maybe<GraphCMS_User>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly locale: GraphCMS_Locale;
  readonly parent: Maybe<Node>;
  readonly publishedAt: Maybe<Scalars['JSON']>;
  readonly publishedBy: Maybe<GraphCMS_User>;
  readonly remoteId: Scalars['ID'];
  readonly remoteTypeName: Scalars['String'];
  readonly scheduledIn: ReadonlyArray<GraphCMS_ScheduledOperation>;
  readonly stage: GraphCMS_Stage;
  readonly stageNumber: Scalars['Float'];
  readonly submittedText: Maybe<GraphCMS_RichText>;
  readonly taskInfo: GraphCMS_RichText;
  readonly taskLinkText: Maybe<Scalars['String']>;
  readonly title: Maybe<Scalars['String']>;
  readonly updatedAt: Scalars['JSON'];
  readonly updatedBy: Maybe<GraphCMS_User>;
};

type GraphCMS_TaskToCompleteConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_TaskToCompleteEdge>;
  readonly group: ReadonlyArray<GraphCMS_TaskToCompleteGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_TaskToComplete>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_TaskToCompleteConnection_distinctArgs = {
  field: GraphCMS_TaskToCompleteFieldsEnum;
};


type GraphCMS_TaskToCompleteConnection_groupArgs = {
  field: GraphCMS_TaskToCompleteFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_TaskToCompleteConnection_maxArgs = {
  field: GraphCMS_TaskToCompleteFieldsEnum;
};


type GraphCMS_TaskToCompleteConnection_minArgs = {
  field: GraphCMS_TaskToCompleteFieldsEnum;
};


type GraphCMS_TaskToCompleteConnection_sumArgs = {
  field: GraphCMS_TaskToCompleteFieldsEnum;
};

type GraphCMS_TaskToCompleteEdge = {
  readonly next: Maybe<GraphCMS_TaskToComplete>;
  readonly node: GraphCMS_TaskToComplete;
  readonly previous: Maybe<GraphCMS_TaskToComplete>;
};

type GraphCMS_TaskToCompleteFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'createdAt'
  | 'createdBy.children'
  | 'createdBy.children.children'
  | 'createdBy.children.children.children'
  | 'createdBy.children.children.id'
  | 'createdBy.children.id'
  | 'createdBy.children.internal.content'
  | 'createdBy.children.internal.contentDigest'
  | 'createdBy.children.internal.contentFilePath'
  | 'createdBy.children.internal.description'
  | 'createdBy.children.internal.fieldOwners'
  | 'createdBy.children.internal.ignoreType'
  | 'createdBy.children.internal.mediaType'
  | 'createdBy.children.internal.owner'
  | 'createdBy.children.internal.type'
  | 'createdBy.children.parent.children'
  | 'createdBy.children.parent.id'
  | 'createdBy.createdAt'
  | 'createdBy.id'
  | 'createdBy.internal.content'
  | 'createdBy.internal.contentDigest'
  | 'createdBy.internal.contentFilePath'
  | 'createdBy.internal.description'
  | 'createdBy.internal.fieldOwners'
  | 'createdBy.internal.ignoreType'
  | 'createdBy.internal.mediaType'
  | 'createdBy.internal.owner'
  | 'createdBy.internal.type'
  | 'createdBy.isActive'
  | 'createdBy.kind'
  | 'createdBy.name'
  | 'createdBy.parent.children'
  | 'createdBy.parent.children.children'
  | 'createdBy.parent.children.id'
  | 'createdBy.parent.id'
  | 'createdBy.parent.internal.content'
  | 'createdBy.parent.internal.contentDigest'
  | 'createdBy.parent.internal.contentFilePath'
  | 'createdBy.parent.internal.description'
  | 'createdBy.parent.internal.fieldOwners'
  | 'createdBy.parent.internal.ignoreType'
  | 'createdBy.parent.internal.mediaType'
  | 'createdBy.parent.internal.owner'
  | 'createdBy.parent.internal.type'
  | 'createdBy.parent.parent.children'
  | 'createdBy.parent.parent.id'
  | 'createdBy.picture'
  | 'createdBy.publishedAt'
  | 'createdBy.remoteId'
  | 'createdBy.remoteTypeName'
  | 'createdBy.stage'
  | 'createdBy.updatedAt'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'locale'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'publishedAt'
  | 'publishedBy.children'
  | 'publishedBy.children.children'
  | 'publishedBy.children.children.children'
  | 'publishedBy.children.children.id'
  | 'publishedBy.children.id'
  | 'publishedBy.children.internal.content'
  | 'publishedBy.children.internal.contentDigest'
  | 'publishedBy.children.internal.contentFilePath'
  | 'publishedBy.children.internal.description'
  | 'publishedBy.children.internal.fieldOwners'
  | 'publishedBy.children.internal.ignoreType'
  | 'publishedBy.children.internal.mediaType'
  | 'publishedBy.children.internal.owner'
  | 'publishedBy.children.internal.type'
  | 'publishedBy.children.parent.children'
  | 'publishedBy.children.parent.id'
  | 'publishedBy.createdAt'
  | 'publishedBy.id'
  | 'publishedBy.internal.content'
  | 'publishedBy.internal.contentDigest'
  | 'publishedBy.internal.contentFilePath'
  | 'publishedBy.internal.description'
  | 'publishedBy.internal.fieldOwners'
  | 'publishedBy.internal.ignoreType'
  | 'publishedBy.internal.mediaType'
  | 'publishedBy.internal.owner'
  | 'publishedBy.internal.type'
  | 'publishedBy.isActive'
  | 'publishedBy.kind'
  | 'publishedBy.name'
  | 'publishedBy.parent.children'
  | 'publishedBy.parent.children.children'
  | 'publishedBy.parent.children.id'
  | 'publishedBy.parent.id'
  | 'publishedBy.parent.internal.content'
  | 'publishedBy.parent.internal.contentDigest'
  | 'publishedBy.parent.internal.contentFilePath'
  | 'publishedBy.parent.internal.description'
  | 'publishedBy.parent.internal.fieldOwners'
  | 'publishedBy.parent.internal.ignoreType'
  | 'publishedBy.parent.internal.mediaType'
  | 'publishedBy.parent.internal.owner'
  | 'publishedBy.parent.internal.type'
  | 'publishedBy.parent.parent.children'
  | 'publishedBy.parent.parent.id'
  | 'publishedBy.picture'
  | 'publishedBy.publishedAt'
  | 'publishedBy.remoteId'
  | 'publishedBy.remoteTypeName'
  | 'publishedBy.stage'
  | 'publishedBy.updatedAt'
  | 'remoteId'
  | 'remoteTypeName'
  | 'scheduledIn'
  | 'scheduledIn.children'
  | 'scheduledIn.children.children'
  | 'scheduledIn.children.children.children'
  | 'scheduledIn.children.children.id'
  | 'scheduledIn.children.id'
  | 'scheduledIn.children.internal.content'
  | 'scheduledIn.children.internal.contentDigest'
  | 'scheduledIn.children.internal.contentFilePath'
  | 'scheduledIn.children.internal.description'
  | 'scheduledIn.children.internal.fieldOwners'
  | 'scheduledIn.children.internal.ignoreType'
  | 'scheduledIn.children.internal.mediaType'
  | 'scheduledIn.children.internal.owner'
  | 'scheduledIn.children.internal.type'
  | 'scheduledIn.children.parent.children'
  | 'scheduledIn.children.parent.id'
  | 'scheduledIn.createdAt'
  | 'scheduledIn.createdBy.children'
  | 'scheduledIn.createdBy.children.children'
  | 'scheduledIn.createdBy.children.id'
  | 'scheduledIn.createdBy.createdAt'
  | 'scheduledIn.createdBy.id'
  | 'scheduledIn.createdBy.internal.content'
  | 'scheduledIn.createdBy.internal.contentDigest'
  | 'scheduledIn.createdBy.internal.contentFilePath'
  | 'scheduledIn.createdBy.internal.description'
  | 'scheduledIn.createdBy.internal.fieldOwners'
  | 'scheduledIn.createdBy.internal.ignoreType'
  | 'scheduledIn.createdBy.internal.mediaType'
  | 'scheduledIn.createdBy.internal.owner'
  | 'scheduledIn.createdBy.internal.type'
  | 'scheduledIn.createdBy.isActive'
  | 'scheduledIn.createdBy.kind'
  | 'scheduledIn.createdBy.name'
  | 'scheduledIn.createdBy.parent.children'
  | 'scheduledIn.createdBy.parent.id'
  | 'scheduledIn.createdBy.picture'
  | 'scheduledIn.createdBy.publishedAt'
  | 'scheduledIn.createdBy.remoteId'
  | 'scheduledIn.createdBy.remoteTypeName'
  | 'scheduledIn.createdBy.stage'
  | 'scheduledIn.createdBy.updatedAt'
  | 'scheduledIn.description'
  | 'scheduledIn.errorMessage'
  | 'scheduledIn.id'
  | 'scheduledIn.internal.content'
  | 'scheduledIn.internal.contentDigest'
  | 'scheduledIn.internal.contentFilePath'
  | 'scheduledIn.internal.description'
  | 'scheduledIn.internal.fieldOwners'
  | 'scheduledIn.internal.ignoreType'
  | 'scheduledIn.internal.mediaType'
  | 'scheduledIn.internal.owner'
  | 'scheduledIn.internal.type'
  | 'scheduledIn.parent.children'
  | 'scheduledIn.parent.children.children'
  | 'scheduledIn.parent.children.id'
  | 'scheduledIn.parent.id'
  | 'scheduledIn.parent.internal.content'
  | 'scheduledIn.parent.internal.contentDigest'
  | 'scheduledIn.parent.internal.contentFilePath'
  | 'scheduledIn.parent.internal.description'
  | 'scheduledIn.parent.internal.fieldOwners'
  | 'scheduledIn.parent.internal.ignoreType'
  | 'scheduledIn.parent.internal.mediaType'
  | 'scheduledIn.parent.internal.owner'
  | 'scheduledIn.parent.internal.type'
  | 'scheduledIn.parent.parent.children'
  | 'scheduledIn.parent.parent.id'
  | 'scheduledIn.publishedAt'
  | 'scheduledIn.publishedBy.children'
  | 'scheduledIn.publishedBy.children.children'
  | 'scheduledIn.publishedBy.children.id'
  | 'scheduledIn.publishedBy.createdAt'
  | 'scheduledIn.publishedBy.id'
  | 'scheduledIn.publishedBy.internal.content'
  | 'scheduledIn.publishedBy.internal.contentDigest'
  | 'scheduledIn.publishedBy.internal.contentFilePath'
  | 'scheduledIn.publishedBy.internal.description'
  | 'scheduledIn.publishedBy.internal.fieldOwners'
  | 'scheduledIn.publishedBy.internal.ignoreType'
  | 'scheduledIn.publishedBy.internal.mediaType'
  | 'scheduledIn.publishedBy.internal.owner'
  | 'scheduledIn.publishedBy.internal.type'
  | 'scheduledIn.publishedBy.isActive'
  | 'scheduledIn.publishedBy.kind'
  | 'scheduledIn.publishedBy.name'
  | 'scheduledIn.publishedBy.parent.children'
  | 'scheduledIn.publishedBy.parent.id'
  | 'scheduledIn.publishedBy.picture'
  | 'scheduledIn.publishedBy.publishedAt'
  | 'scheduledIn.publishedBy.remoteId'
  | 'scheduledIn.publishedBy.remoteTypeName'
  | 'scheduledIn.publishedBy.stage'
  | 'scheduledIn.publishedBy.updatedAt'
  | 'scheduledIn.rawPayload'
  | 'scheduledIn.release.children'
  | 'scheduledIn.release.children.children'
  | 'scheduledIn.release.children.id'
  | 'scheduledIn.release.createdAt'
  | 'scheduledIn.release.createdBy.children'
  | 'scheduledIn.release.createdBy.createdAt'
  | 'scheduledIn.release.createdBy.id'
  | 'scheduledIn.release.createdBy.isActive'
  | 'scheduledIn.release.createdBy.kind'
  | 'scheduledIn.release.createdBy.name'
  | 'scheduledIn.release.createdBy.picture'
  | 'scheduledIn.release.createdBy.publishedAt'
  | 'scheduledIn.release.createdBy.remoteId'
  | 'scheduledIn.release.createdBy.remoteTypeName'
  | 'scheduledIn.release.createdBy.stage'
  | 'scheduledIn.release.createdBy.updatedAt'
  | 'scheduledIn.release.description'
  | 'scheduledIn.release.errorMessage'
  | 'scheduledIn.release.id'
  | 'scheduledIn.release.internal.content'
  | 'scheduledIn.release.internal.contentDigest'
  | 'scheduledIn.release.internal.contentFilePath'
  | 'scheduledIn.release.internal.description'
  | 'scheduledIn.release.internal.fieldOwners'
  | 'scheduledIn.release.internal.ignoreType'
  | 'scheduledIn.release.internal.mediaType'
  | 'scheduledIn.release.internal.owner'
  | 'scheduledIn.release.internal.type'
  | 'scheduledIn.release.isActive'
  | 'scheduledIn.release.isImplicit'
  | 'scheduledIn.release.operations'
  | 'scheduledIn.release.operations.children'
  | 'scheduledIn.release.operations.createdAt'
  | 'scheduledIn.release.operations.description'
  | 'scheduledIn.release.operations.errorMessage'
  | 'scheduledIn.release.operations.id'
  | 'scheduledIn.release.operations.publishedAt'
  | 'scheduledIn.release.operations.rawPayload'
  | 'scheduledIn.release.operations.remoteId'
  | 'scheduledIn.release.operations.remoteTypeName'
  | 'scheduledIn.release.operations.stage'
  | 'scheduledIn.release.operations.status'
  | 'scheduledIn.release.operations.updatedAt'
  | 'scheduledIn.release.parent.children'
  | 'scheduledIn.release.parent.id'
  | 'scheduledIn.release.publishedAt'
  | 'scheduledIn.release.publishedBy.children'
  | 'scheduledIn.release.publishedBy.createdAt'
  | 'scheduledIn.release.publishedBy.id'
  | 'scheduledIn.release.publishedBy.isActive'
  | 'scheduledIn.release.publishedBy.kind'
  | 'scheduledIn.release.publishedBy.name'
  | 'scheduledIn.release.publishedBy.picture'
  | 'scheduledIn.release.publishedBy.publishedAt'
  | 'scheduledIn.release.publishedBy.remoteId'
  | 'scheduledIn.release.publishedBy.remoteTypeName'
  | 'scheduledIn.release.publishedBy.stage'
  | 'scheduledIn.release.publishedBy.updatedAt'
  | 'scheduledIn.release.releaseAt'
  | 'scheduledIn.release.remoteId'
  | 'scheduledIn.release.remoteTypeName'
  | 'scheduledIn.release.stage'
  | 'scheduledIn.release.status'
  | 'scheduledIn.release.title'
  | 'scheduledIn.release.updatedAt'
  | 'scheduledIn.release.updatedBy.children'
  | 'scheduledIn.release.updatedBy.createdAt'
  | 'scheduledIn.release.updatedBy.id'
  | 'scheduledIn.release.updatedBy.isActive'
  | 'scheduledIn.release.updatedBy.kind'
  | 'scheduledIn.release.updatedBy.name'
  | 'scheduledIn.release.updatedBy.picture'
  | 'scheduledIn.release.updatedBy.publishedAt'
  | 'scheduledIn.release.updatedBy.remoteId'
  | 'scheduledIn.release.updatedBy.remoteTypeName'
  | 'scheduledIn.release.updatedBy.stage'
  | 'scheduledIn.release.updatedBy.updatedAt'
  | 'scheduledIn.remoteId'
  | 'scheduledIn.remoteTypeName'
  | 'scheduledIn.stage'
  | 'scheduledIn.status'
  | 'scheduledIn.updatedAt'
  | 'scheduledIn.updatedBy.children'
  | 'scheduledIn.updatedBy.children.children'
  | 'scheduledIn.updatedBy.children.id'
  | 'scheduledIn.updatedBy.createdAt'
  | 'scheduledIn.updatedBy.id'
  | 'scheduledIn.updatedBy.internal.content'
  | 'scheduledIn.updatedBy.internal.contentDigest'
  | 'scheduledIn.updatedBy.internal.contentFilePath'
  | 'scheduledIn.updatedBy.internal.description'
  | 'scheduledIn.updatedBy.internal.fieldOwners'
  | 'scheduledIn.updatedBy.internal.ignoreType'
  | 'scheduledIn.updatedBy.internal.mediaType'
  | 'scheduledIn.updatedBy.internal.owner'
  | 'scheduledIn.updatedBy.internal.type'
  | 'scheduledIn.updatedBy.isActive'
  | 'scheduledIn.updatedBy.kind'
  | 'scheduledIn.updatedBy.name'
  | 'scheduledIn.updatedBy.parent.children'
  | 'scheduledIn.updatedBy.parent.id'
  | 'scheduledIn.updatedBy.picture'
  | 'scheduledIn.updatedBy.publishedAt'
  | 'scheduledIn.updatedBy.remoteId'
  | 'scheduledIn.updatedBy.remoteTypeName'
  | 'scheduledIn.updatedBy.stage'
  | 'scheduledIn.updatedBy.updatedAt'
  | 'stage'
  | 'stageNumber'
  | 'submittedText.html'
  | 'submittedText.markdown'
  | 'submittedText.raw'
  | 'submittedText.remoteTypeName'
  | 'submittedText.text'
  | 'taskInfo.html'
  | 'taskInfo.markdown'
  | 'taskInfo.raw'
  | 'taskInfo.remoteTypeName'
  | 'taskInfo.text'
  | 'taskLinkText'
  | 'title'
  | 'updatedAt'
  | 'updatedBy.children'
  | 'updatedBy.children.children'
  | 'updatedBy.children.children.children'
  | 'updatedBy.children.children.id'
  | 'updatedBy.children.id'
  | 'updatedBy.children.internal.content'
  | 'updatedBy.children.internal.contentDigest'
  | 'updatedBy.children.internal.contentFilePath'
  | 'updatedBy.children.internal.description'
  | 'updatedBy.children.internal.fieldOwners'
  | 'updatedBy.children.internal.ignoreType'
  | 'updatedBy.children.internal.mediaType'
  | 'updatedBy.children.internal.owner'
  | 'updatedBy.children.internal.type'
  | 'updatedBy.children.parent.children'
  | 'updatedBy.children.parent.id'
  | 'updatedBy.createdAt'
  | 'updatedBy.id'
  | 'updatedBy.internal.content'
  | 'updatedBy.internal.contentDigest'
  | 'updatedBy.internal.contentFilePath'
  | 'updatedBy.internal.description'
  | 'updatedBy.internal.fieldOwners'
  | 'updatedBy.internal.ignoreType'
  | 'updatedBy.internal.mediaType'
  | 'updatedBy.internal.owner'
  | 'updatedBy.internal.type'
  | 'updatedBy.isActive'
  | 'updatedBy.kind'
  | 'updatedBy.name'
  | 'updatedBy.parent.children'
  | 'updatedBy.parent.children.children'
  | 'updatedBy.parent.children.id'
  | 'updatedBy.parent.id'
  | 'updatedBy.parent.internal.content'
  | 'updatedBy.parent.internal.contentDigest'
  | 'updatedBy.parent.internal.contentFilePath'
  | 'updatedBy.parent.internal.description'
  | 'updatedBy.parent.internal.fieldOwners'
  | 'updatedBy.parent.internal.ignoreType'
  | 'updatedBy.parent.internal.mediaType'
  | 'updatedBy.parent.internal.owner'
  | 'updatedBy.parent.internal.type'
  | 'updatedBy.parent.parent.children'
  | 'updatedBy.parent.parent.id'
  | 'updatedBy.picture'
  | 'updatedBy.publishedAt'
  | 'updatedBy.remoteId'
  | 'updatedBy.remoteTypeName'
  | 'updatedBy.stage'
  | 'updatedBy.updatedAt';

type GraphCMS_TaskToCompleteFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly createdAt: InputMaybe<JSONQueryOperatorInput>;
  readonly createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly publishedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  readonly remoteId: InputMaybe<IDQueryOperatorInput>;
  readonly remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  readonly scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  readonly stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  readonly stageNumber: InputMaybe<FloatQueryOperatorInput>;
  readonly submittedText: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly taskInfo: InputMaybe<GraphCMS_RichTextFilterInput>;
  readonly taskLinkText: InputMaybe<StringQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly updatedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};

type GraphCMS_TaskToCompleteFilterListInput = {
  readonly elemMatch: InputMaybe<GraphCMS_TaskToCompleteFilterInput>;
};

type GraphCMS_TaskToCompleteGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_TaskToCompleteEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<GraphCMS_TaskToCompleteGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_TaskToComplete>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_TaskToCompleteGroupConnection_distinctArgs = {
  field: GraphCMS_TaskToCompleteFieldsEnum;
};


type GraphCMS_TaskToCompleteGroupConnection_groupArgs = {
  field: GraphCMS_TaskToCompleteFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_TaskToCompleteGroupConnection_maxArgs = {
  field: GraphCMS_TaskToCompleteFieldsEnum;
};


type GraphCMS_TaskToCompleteGroupConnection_minArgs = {
  field: GraphCMS_TaskToCompleteFieldsEnum;
};


type GraphCMS_TaskToCompleteGroupConnection_sumArgs = {
  field: GraphCMS_TaskToCompleteFieldsEnum;
};

type GraphCMS_TaskToCompleteSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_TaskToCompleteFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type GraphCMS_User = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly createdAt: Scalars['JSON'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly isActive: Scalars['Boolean'];
  readonly kind: GraphCMS_UserKind;
  readonly name: Scalars['String'];
  readonly parent: Maybe<Node>;
  readonly picture: Maybe<Scalars['String']>;
  readonly publishedAt: Maybe<Scalars['JSON']>;
  readonly remoteId: Scalars['ID'];
  readonly remoteTypeName: Scalars['String'];
  readonly stage: GraphCMS_Stage;
  readonly updatedAt: Scalars['JSON'];
};

type GraphCMS_UserConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_UserEdge>;
  readonly group: ReadonlyArray<GraphCMS_UserGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_User>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_UserConnection_distinctArgs = {
  field: GraphCMS_UserFieldsEnum;
};


type GraphCMS_UserConnection_groupArgs = {
  field: GraphCMS_UserFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_UserConnection_maxArgs = {
  field: GraphCMS_UserFieldsEnum;
};


type GraphCMS_UserConnection_minArgs = {
  field: GraphCMS_UserFieldsEnum;
};


type GraphCMS_UserConnection_sumArgs = {
  field: GraphCMS_UserFieldsEnum;
};

type GraphCMS_UserEdge = {
  readonly next: Maybe<GraphCMS_User>;
  readonly node: GraphCMS_User;
  readonly previous: Maybe<GraphCMS_User>;
};

type GraphCMS_UserFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'createdAt'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'isActive'
  | 'kind'
  | 'name'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'picture'
  | 'publishedAt'
  | 'remoteId'
  | 'remoteTypeName'
  | 'stage'
  | 'updatedAt';

type GraphCMS_UserFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly createdAt: InputMaybe<JSONQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly isActive: InputMaybe<BooleanQueryOperatorInput>;
  readonly kind: InputMaybe<GraphCMS_UserKindQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly picture: InputMaybe<StringQueryOperatorInput>;
  readonly publishedAt: InputMaybe<JSONQueryOperatorInput>;
  readonly remoteId: InputMaybe<IDQueryOperatorInput>;
  readonly remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  readonly stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  readonly updatedAt: InputMaybe<JSONQueryOperatorInput>;
};

type GraphCMS_UserGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphCMS_UserEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<GraphCMS_UserGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphCMS_User>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphCMS_UserGroupConnection_distinctArgs = {
  field: GraphCMS_UserFieldsEnum;
};


type GraphCMS_UserGroupConnection_groupArgs = {
  field: GraphCMS_UserFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphCMS_UserGroupConnection_maxArgs = {
  field: GraphCMS_UserFieldsEnum;
};


type GraphCMS_UserGroupConnection_minArgs = {
  field: GraphCMS_UserFieldsEnum;
};


type GraphCMS_UserGroupConnection_sumArgs = {
  field: GraphCMS_UserFieldsEnum;
};

type GraphCMS_UserKind =
  | 'MEMBER'
  | 'PAT'
  | 'PUBLIC'
  | 'WEBHOOK';

type GraphCMS_UserKindQueryOperatorInput = {
  readonly eq: InputMaybe<GraphCMS_UserKind>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_UserKind>>>;
  readonly ne: InputMaybe<GraphCMS_UserKind>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_UserKind>>>;
};

type GraphCMS_UserSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<GraphCMS_UserFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type GraphQLSource = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly fieldName: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly typeName: Maybe<Scalars['String']>;
};

type GraphQLSourceConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphQLSourceEdge>;
  readonly group: ReadonlyArray<GraphQLSourceGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphQLSource>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphQLSourceConnection_distinctArgs = {
  field: GraphQLSourceFieldsEnum;
};


type GraphQLSourceConnection_groupArgs = {
  field: GraphQLSourceFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphQLSourceConnection_maxArgs = {
  field: GraphQLSourceFieldsEnum;
};


type GraphQLSourceConnection_minArgs = {
  field: GraphQLSourceFieldsEnum;
};


type GraphQLSourceConnection_sumArgs = {
  field: GraphQLSourceFieldsEnum;
};

type GraphQLSourceEdge = {
  readonly next: Maybe<GraphQLSource>;
  readonly node: GraphQLSource;
  readonly previous: Maybe<GraphQLSource>;
};

type GraphQLSourceFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'fieldName'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'typeName';

type GraphQLSourceFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly fieldName: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly typeName: InputMaybe<StringQueryOperatorInput>;
};

type GraphQLSourceGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GraphQLSourceEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<GraphQLSourceGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GraphQLSource>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GraphQLSourceGroupConnection_distinctArgs = {
  field: GraphQLSourceFieldsEnum;
};


type GraphQLSourceGroupConnection_groupArgs = {
  field: GraphQLSourceFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GraphQLSourceGroupConnection_maxArgs = {
  field: GraphQLSourceFieldsEnum;
};


type GraphQLSourceGroupConnection_minArgs = {
  field: GraphQLSourceFieldsEnum;
};


type GraphQLSourceGroupConnection_sumArgs = {
  field: GraphQLSourceFieldsEnum;
};

type GraphQLSourceSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<GraphQLSourceFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type IDQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['ID']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
  readonly ne: InputMaybe<Scalars['ID']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['ID']>>>;
};

type ImageCropFocus =
  | 17
  | 0
  | 2
  | 16
  | 1
  | 5
  | 8
  | 3
  | 6
  | 7
  | 4;

type ImageFit =
  | 'contain'
  | 'cover'
  | 'fill'
  | 'inside'
  | 'outside';

type ImageFormat =
  | ''
  | 'avif'
  | 'jpg'
  | ''
  | 'png'
  | 'webp';

type ImageLayout =
  | 'constrained'
  | 'fixed'
  | 'fullWidth';

type ImagePlaceholder =
  | 'blurred'
  | 'dominantColor'
  | 'none'
  | 'tracedSVG';

type ImageSharp = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly fixed: Maybe<ImageSharpFixed>;
  readonly fluid: Maybe<ImageSharpFluid>;
  readonly gatsbyImageData: Scalars['GatsbyImageData'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly original: Maybe<ImageSharpOriginal>;
  readonly parent: Maybe<Node>;
  readonly resize: Maybe<ImageSharpResize>;
};


type ImageSharp_fixedArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64Width: InputMaybe<Scalars['Int']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  height: InputMaybe<Scalars['Int']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  toFormat?: InputMaybe<ImageFormat>;
  toFormatBase64?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
  width: InputMaybe<Scalars['Int']>;
};


type ImageSharp_fluidArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64Width: InputMaybe<Scalars['Int']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  maxHeight: InputMaybe<Scalars['Int']>;
  maxWidth: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  sizes?: InputMaybe<Scalars['String']>;
  srcSetBreakpoints?: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  toFormat?: InputMaybe<ImageFormat>;
  toFormatBase64?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
};


type ImageSharp_gatsbyImageDataArgs = {
  aspectRatio: InputMaybe<Scalars['Float']>;
  avifOptions: InputMaybe<AVIFOptions>;
  backgroundColor: InputMaybe<Scalars['String']>;
  blurredOptions: InputMaybe<BlurredOptions>;
  breakpoints: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  formats: InputMaybe<ReadonlyArray<InputMaybe<ImageFormat>>>;
  height: InputMaybe<Scalars['Int']>;
  jpgOptions: InputMaybe<JPGOptions>;
  layout?: InputMaybe<ImageLayout>;
  outputPixelDensities: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  placeholder: InputMaybe<ImagePlaceholder>;
  pngOptions: InputMaybe<PNGOptions>;
  quality: InputMaybe<Scalars['Int']>;
  sizes: InputMaybe<Scalars['String']>;
  tracedSVGOptions: InputMaybe<Potrace>;
  transformOptions: InputMaybe<TransformOptions>;
  webpOptions: InputMaybe<WebPOptions>;
  width: InputMaybe<Scalars['Int']>;
};


type ImageSharp_resizeArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64?: InputMaybe<Scalars['Boolean']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  height: InputMaybe<Scalars['Int']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  pngCompressionLevel?: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  toFormat?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
  width: InputMaybe<Scalars['Int']>;
};

type ImageSharpConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ImageSharpEdge>;
  readonly group: ReadonlyArray<ImageSharpGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ImageSharp>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ImageSharpConnection_distinctArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_groupArgs = {
  field: ImageSharpFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ImageSharpConnection_maxArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_minArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_sumArgs = {
  field: ImageSharpFieldsEnum;
};

type ImageSharpEdge = {
  readonly next: Maybe<ImageSharp>;
  readonly node: ImageSharp;
  readonly previous: Maybe<ImageSharp>;
};

type ImageSharpFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'fixed.aspectRatio'
  | 'fixed.base64'
  | 'fixed.height'
  | 'fixed.originalName'
  | 'fixed.src'
  | 'fixed.srcSet'
  | 'fixed.srcSetWebp'
  | 'fixed.srcWebp'
  | 'fixed.tracedSVG'
  | 'fixed.width'
  | 'fluid.aspectRatio'
  | 'fluid.base64'
  | 'fluid.originalImg'
  | 'fluid.originalName'
  | 'fluid.presentationHeight'
  | 'fluid.presentationWidth'
  | 'fluid.sizes'
  | 'fluid.src'
  | 'fluid.srcSet'
  | 'fluid.srcSetWebp'
  | 'fluid.srcWebp'
  | 'fluid.tracedSVG'
  | 'gatsbyImageData'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'original.height'
  | 'original.src'
  | 'original.width'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'resize.aspectRatio'
  | 'resize.height'
  | 'resize.originalName'
  | 'resize.src'
  | 'resize.tracedSVG'
  | 'resize.width';

type ImageSharpFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly fixed: InputMaybe<ImageSharpFixedFilterInput>;
  readonly fluid: InputMaybe<ImageSharpFluidFilterInput>;
  readonly gatsbyImageData: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly original: InputMaybe<ImageSharpOriginalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly resize: InputMaybe<ImageSharpResizeFilterInput>;
};

type ImageSharpFilterListInput = {
  readonly elemMatch: InputMaybe<ImageSharpFilterInput>;
};

type ImageSharpFixed = {
  readonly aspectRatio: Maybe<Scalars['Float']>;
  readonly base64: Maybe<Scalars['String']>;
  readonly height: Scalars['Float'];
  readonly originalName: Maybe<Scalars['String']>;
  readonly src: Scalars['String'];
  readonly srcSet: Scalars['String'];
  readonly srcSetWebp: Maybe<Scalars['String']>;
  readonly srcWebp: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
  readonly width: Scalars['Float'];
};

type ImageSharpFixedFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly base64: InputMaybe<StringQueryOperatorInput>;
  readonly height: InputMaybe<FloatQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly srcSet: InputMaybe<StringQueryOperatorInput>;
  readonly srcSetWebp: InputMaybe<StringQueryOperatorInput>;
  readonly srcWebp: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<FloatQueryOperatorInput>;
};

type ImageSharpFluid = {
  readonly aspectRatio: Scalars['Float'];
  readonly base64: Maybe<Scalars['String']>;
  readonly originalImg: Maybe<Scalars['String']>;
  readonly originalName: Maybe<Scalars['String']>;
  readonly presentationHeight: Scalars['Int'];
  readonly presentationWidth: Scalars['Int'];
  readonly sizes: Scalars['String'];
  readonly src: Scalars['String'];
  readonly srcSet: Scalars['String'];
  readonly srcSetWebp: Maybe<Scalars['String']>;
  readonly srcWebp: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
};

type ImageSharpFluidFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly base64: InputMaybe<StringQueryOperatorInput>;
  readonly originalImg: InputMaybe<StringQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly presentationHeight: InputMaybe<IntQueryOperatorInput>;
  readonly presentationWidth: InputMaybe<IntQueryOperatorInput>;
  readonly sizes: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly srcSet: InputMaybe<StringQueryOperatorInput>;
  readonly srcSetWebp: InputMaybe<StringQueryOperatorInput>;
  readonly srcWebp: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
};

type ImageSharpGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ImageSharpEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ImageSharpGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ImageSharp>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ImageSharpGroupConnection_distinctArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_groupArgs = {
  field: ImageSharpFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ImageSharpGroupConnection_maxArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_minArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_sumArgs = {
  field: ImageSharpFieldsEnum;
};

type ImageSharpOriginal = {
  readonly height: Maybe<Scalars['Float']>;
  readonly src: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Float']>;
};

type ImageSharpOriginalFilterInput = {
  readonly height: InputMaybe<FloatQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<FloatQueryOperatorInput>;
};

type ImageSharpResize = {
  readonly aspectRatio: Maybe<Scalars['Float']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly originalName: Maybe<Scalars['String']>;
  readonly src: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Int']>;
};

type ImageSharpResizeFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type ImageSharpSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ImageSharpFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type IntQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Int']>;
  readonly gt: InputMaybe<Scalars['Int']>;
  readonly gte: InputMaybe<Scalars['Int']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  readonly lt: InputMaybe<Scalars['Int']>;
  readonly lte: InputMaybe<Scalars['Int']>;
  readonly ne: InputMaybe<Scalars['Int']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
};

type Internal = {
  readonly content: Maybe<Scalars['String']>;
  readonly contentDigest: Scalars['String'];
  readonly contentFilePath: Maybe<Scalars['String']>;
  readonly description: Maybe<Scalars['String']>;
  readonly fieldOwners: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly ignoreType: Maybe<Scalars['Boolean']>;
  readonly mediaType: Maybe<Scalars['String']>;
  readonly owner: Scalars['String'];
  readonly type: Scalars['String'];
};

type InternalFilterInput = {
  readonly content: InputMaybe<StringQueryOperatorInput>;
  readonly contentDigest: InputMaybe<StringQueryOperatorInput>;
  readonly contentFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly fieldOwners: InputMaybe<StringQueryOperatorInput>;
  readonly ignoreType: InputMaybe<BooleanQueryOperatorInput>;
  readonly mediaType: InputMaybe<StringQueryOperatorInput>;
  readonly owner: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type JPGOptions = {
  readonly progressive: InputMaybe<Scalars['Boolean']>;
  readonly quality: InputMaybe<Scalars['Int']>;
};

type JSONQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['JSON']>;
  readonly glob: InputMaybe<Scalars['JSON']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['JSON']>>>;
  readonly ne: InputMaybe<Scalars['JSON']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['JSON']>>>;
  readonly regex: InputMaybe<Scalars['JSON']>;
};

type MarkdownExcerptFormats =
  | 'HTML'
  | 'MARKDOWN'
  | 'PLAIN';

type MarkdownHeading = {
  readonly depth: Maybe<Scalars['Int']>;
  readonly id: Maybe<Scalars['String']>;
  readonly value: Maybe<Scalars['String']>;
};

type MarkdownHeadingFilterInput = {
  readonly depth: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly value: InputMaybe<StringQueryOperatorInput>;
};

type MarkdownHeadingFilterListInput = {
  readonly elemMatch: InputMaybe<MarkdownHeadingFilterInput>;
};

type MarkdownHeadingLevels =
  | 'h1'
  | 'h2'
  | 'h3'
  | 'h4'
  | 'h5'
  | 'h6';

type MarkdownRemark = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly excerpt: Maybe<Scalars['String']>;
  readonly excerptAst: Maybe<Scalars['JSON']>;
  readonly headings: Maybe<ReadonlyArray<Maybe<MarkdownHeading>>>;
  readonly html: Maybe<Scalars['String']>;
  readonly htmlAst: Maybe<Scalars['JSON']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly tableOfContents: Maybe<Scalars['String']>;
  readonly timeToRead: Maybe<Scalars['Int']>;
  readonly wordCount: Maybe<MarkdownWordCount>;
};


type MarkdownRemark_excerptArgs = {
  format?: InputMaybe<MarkdownExcerptFormats>;
  pruneLength?: InputMaybe<Scalars['Int']>;
  truncate?: InputMaybe<Scalars['Boolean']>;
};


type MarkdownRemark_excerptAstArgs = {
  pruneLength?: InputMaybe<Scalars['Int']>;
  truncate?: InputMaybe<Scalars['Boolean']>;
};


type MarkdownRemark_headingsArgs = {
  depth: InputMaybe<MarkdownHeadingLevels>;
};


type MarkdownRemark_tableOfContentsArgs = {
  absolute?: InputMaybe<Scalars['Boolean']>;
  heading: InputMaybe<Scalars['String']>;
  maxDepth: InputMaybe<Scalars['Int']>;
  pathToSlugField?: InputMaybe<Scalars['String']>;
};

type MarkdownRemarkConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<MarkdownRemarkEdge>;
  readonly group: ReadonlyArray<MarkdownRemarkGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<MarkdownRemark>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type MarkdownRemarkConnection_distinctArgs = {
  field: MarkdownRemarkFieldsEnum;
};


type MarkdownRemarkConnection_groupArgs = {
  field: MarkdownRemarkFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type MarkdownRemarkConnection_maxArgs = {
  field: MarkdownRemarkFieldsEnum;
};


type MarkdownRemarkConnection_minArgs = {
  field: MarkdownRemarkFieldsEnum;
};


type MarkdownRemarkConnection_sumArgs = {
  field: MarkdownRemarkFieldsEnum;
};

type MarkdownRemarkEdge = {
  readonly next: Maybe<MarkdownRemark>;
  readonly node: MarkdownRemark;
  readonly previous: Maybe<MarkdownRemark>;
};

type MarkdownRemarkFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'excerpt'
  | 'excerptAst'
  | 'headings'
  | 'headings.depth'
  | 'headings.id'
  | 'headings.value'
  | 'html'
  | 'htmlAst'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'tableOfContents'
  | 'timeToRead'
  | 'wordCount.paragraphs'
  | 'wordCount.sentences'
  | 'wordCount.words';

type MarkdownRemarkFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly excerpt: InputMaybe<StringQueryOperatorInput>;
  readonly excerptAst: InputMaybe<JSONQueryOperatorInput>;
  readonly headings: InputMaybe<MarkdownHeadingFilterListInput>;
  readonly html: InputMaybe<StringQueryOperatorInput>;
  readonly htmlAst: InputMaybe<JSONQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly tableOfContents: InputMaybe<StringQueryOperatorInput>;
  readonly timeToRead: InputMaybe<IntQueryOperatorInput>;
  readonly wordCount: InputMaybe<MarkdownWordCountFilterInput>;
};

type MarkdownRemarkGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<MarkdownRemarkEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<MarkdownRemarkGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<MarkdownRemark>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type MarkdownRemarkGroupConnection_distinctArgs = {
  field: MarkdownRemarkFieldsEnum;
};


type MarkdownRemarkGroupConnection_groupArgs = {
  field: MarkdownRemarkFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type MarkdownRemarkGroupConnection_maxArgs = {
  field: MarkdownRemarkFieldsEnum;
};


type MarkdownRemarkGroupConnection_minArgs = {
  field: MarkdownRemarkFieldsEnum;
};


type MarkdownRemarkGroupConnection_sumArgs = {
  field: MarkdownRemarkFieldsEnum;
};

type MarkdownRemarkSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<MarkdownRemarkFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type MarkdownWordCount = {
  readonly paragraphs: Maybe<Scalars['Int']>;
  readonly sentences: Maybe<Scalars['Int']>;
  readonly words: Maybe<Scalars['Int']>;
};

type MarkdownWordCountFilterInput = {
  readonly paragraphs: InputMaybe<IntQueryOperatorInput>;
  readonly sentences: InputMaybe<IntQueryOperatorInput>;
  readonly words: InputMaybe<IntQueryOperatorInput>;
};

/** Node Interface */
type Node = {
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};

type NodeFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type NodeFilterListInput = {
  readonly elemMatch: InputMaybe<NodeFilterInput>;
};

type PNGOptions = {
  readonly compressionSpeed: InputMaybe<Scalars['Int']>;
  readonly quality: InputMaybe<Scalars['Int']>;
};

type PageInfo = {
  readonly currentPage: Scalars['Int'];
  readonly hasNextPage: Scalars['Boolean'];
  readonly hasPreviousPage: Scalars['Boolean'];
  readonly itemCount: Scalars['Int'];
  readonly pageCount: Scalars['Int'];
  readonly perPage: Maybe<Scalars['Int']>;
  readonly totalCount: Scalars['Int'];
};

type Potrace = {
  readonly alphaMax: InputMaybe<Scalars['Float']>;
  readonly background: InputMaybe<Scalars['String']>;
  readonly blackOnWhite: InputMaybe<Scalars['Boolean']>;
  readonly color: InputMaybe<Scalars['String']>;
  readonly optCurve: InputMaybe<Scalars['Boolean']>;
  readonly optTolerance: InputMaybe<Scalars['Float']>;
  readonly threshold: InputMaybe<Scalars['Int']>;
  readonly turdSize: InputMaybe<Scalars['Float']>;
  readonly turnPolicy: InputMaybe<PotraceTurnPolicy>;
};

type PotraceTurnPolicy =
  | 'black'
  | 'left'
  | 'majority'
  | 'minority'
  | 'right'
  | 'white';

type Query = {
  readonly allDirectory: DirectoryConnection;
  readonly allFile: FileConnection;
  readonly allGraphCmsAsset: GraphCMS_AssetConnection;
  readonly allGraphCmsDevelopmentOption: GraphCMS_DevelopmentOptionConnection;
  readonly allGraphCmsHelpfulInfo: GraphCMS_HelpfulInfoConnection;
  readonly allGraphCmsInfo: GraphCMS_InfoConnection;
  readonly allGraphCmsModelBusinessPlan: GraphCMS_ModelBusinessPlanConnection;
  readonly allGraphCmsModelSwot: GraphCMS_ModelSwotConnection;
  readonly allGraphCmsPresentationTipsPage: GraphCMS_PresentationTipsPageConnection;
  readonly allGraphCmsScheduledOperation: GraphCMS_ScheduledOperationConnection;
  readonly allGraphCmsScheduledRelease: GraphCMS_ScheduledReleaseConnection;
  readonly allGraphCmsStageLandingPage: GraphCMS_StageLandingPageConnection;
  readonly allGraphCmsStageTask: GraphCMS_StageTaskConnection;
  readonly allGraphCmsStageTaskPage: GraphCMS_StageTaskPageConnection;
  readonly allGraphCmsTaskToComplete: GraphCMS_TaskToCompleteConnection;
  readonly allGraphCmsUser: GraphCMS_UserConnection;
  readonly allGraphQlSource: GraphQLSourceConnection;
  readonly allImageSharp: ImageSharpConnection;
  readonly allMarkdownRemark: MarkdownRemarkConnection;
  readonly allSite: SiteConnection;
  readonly allSiteBuildMetadata: SiteBuildMetadataConnection;
  readonly allSiteFunction: SiteFunctionConnection;
  readonly allSitePage: SitePageConnection;
  readonly allSitePlugin: SitePluginConnection;
  readonly content: Content;
  readonly directory: Maybe<Directory>;
  readonly file: Maybe<File>;
  readonly graphCmsAsset: Maybe<GraphCMS_Asset>;
  readonly graphCmsDevelopmentOption: Maybe<GraphCMS_DevelopmentOption>;
  readonly graphCmsHelpfulInfo: Maybe<GraphCMS_HelpfulInfo>;
  readonly graphCmsInfo: Maybe<GraphCMS_Info>;
  readonly graphCmsModelBusinessPlan: Maybe<GraphCMS_ModelBusinessPlan>;
  readonly graphCmsModelSwot: Maybe<GraphCMS_ModelSwot>;
  readonly graphCmsPresentationTipsPage: Maybe<GraphCMS_PresentationTipsPage>;
  readonly graphCmsScheduledOperation: Maybe<GraphCMS_ScheduledOperation>;
  readonly graphCmsScheduledRelease: Maybe<GraphCMS_ScheduledRelease>;
  readonly graphCmsStageLandingPage: Maybe<GraphCMS_StageLandingPage>;
  readonly graphCmsStageTask: Maybe<GraphCMS_StageTask>;
  readonly graphCmsStageTaskPage: Maybe<GraphCMS_StageTaskPage>;
  readonly graphCmsTaskToComplete: Maybe<GraphCMS_TaskToComplete>;
  readonly graphCmsUser: Maybe<GraphCMS_User>;
  readonly graphQlSource: Maybe<GraphQLSource>;
  readonly imageSharp: Maybe<ImageSharp>;
  readonly markdownRemark: Maybe<MarkdownRemark>;
  readonly site: Maybe<Site>;
  readonly siteBuildMetadata: Maybe<SiteBuildMetadata>;
  readonly siteFunction: Maybe<SiteFunction>;
  readonly sitePage: Maybe<SitePage>;
  readonly sitePlugin: Maybe<SitePlugin>;
};


type Query_allDirectoryArgs = {
  filter: InputMaybe<DirectoryFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<DirectorySortInput>;
};


type Query_allFileArgs = {
  filter: InputMaybe<FileFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<FileSortInput>;
};


type Query_allGraphCmsAssetArgs = {
  filter: InputMaybe<GraphCMS_AssetFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<GraphCMS_AssetSortInput>;
};


type Query_allGraphCmsDevelopmentOptionArgs = {
  filter: InputMaybe<GraphCMS_DevelopmentOptionFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<GraphCMS_DevelopmentOptionSortInput>;
};


type Query_allGraphCmsHelpfulInfoArgs = {
  filter: InputMaybe<GraphCMS_HelpfulInfoFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<GraphCMS_HelpfulInfoSortInput>;
};


type Query_allGraphCmsInfoArgs = {
  filter: InputMaybe<GraphCMS_InfoFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<GraphCMS_InfoSortInput>;
};


type Query_allGraphCmsModelBusinessPlanArgs = {
  filter: InputMaybe<GraphCMS_ModelBusinessPlanFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<GraphCMS_ModelBusinessPlanSortInput>;
};


type Query_allGraphCmsModelSwotArgs = {
  filter: InputMaybe<GraphCMS_ModelSwotFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<GraphCMS_ModelSwotSortInput>;
};


type Query_allGraphCmsPresentationTipsPageArgs = {
  filter: InputMaybe<GraphCMS_PresentationTipsPageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<GraphCMS_PresentationTipsPageSortInput>;
};


type Query_allGraphCmsScheduledOperationArgs = {
  filter: InputMaybe<GraphCMS_ScheduledOperationFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<GraphCMS_ScheduledOperationSortInput>;
};


type Query_allGraphCmsScheduledReleaseArgs = {
  filter: InputMaybe<GraphCMS_ScheduledReleaseFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<GraphCMS_ScheduledReleaseSortInput>;
};


type Query_allGraphCmsStageLandingPageArgs = {
  filter: InputMaybe<GraphCMS_StageLandingPageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<GraphCMS_StageLandingPageSortInput>;
};


type Query_allGraphCmsStageTaskArgs = {
  filter: InputMaybe<GraphCMS_StageTaskFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<GraphCMS_StageTaskSortInput>;
};


type Query_allGraphCmsStageTaskPageArgs = {
  filter: InputMaybe<GraphCMS_StageTaskPageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<GraphCMS_StageTaskPageSortInput>;
};


type Query_allGraphCmsTaskToCompleteArgs = {
  filter: InputMaybe<GraphCMS_TaskToCompleteFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<GraphCMS_TaskToCompleteSortInput>;
};


type Query_allGraphCmsUserArgs = {
  filter: InputMaybe<GraphCMS_UserFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<GraphCMS_UserSortInput>;
};


type Query_allGraphQlSourceArgs = {
  filter: InputMaybe<GraphQLSourceFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<GraphQLSourceSortInput>;
};


type Query_allImageSharpArgs = {
  filter: InputMaybe<ImageSharpFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ImageSharpSortInput>;
};


type Query_allMarkdownRemarkArgs = {
  filter: InputMaybe<MarkdownRemarkFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<MarkdownRemarkSortInput>;
};


type Query_allSiteArgs = {
  filter: InputMaybe<SiteFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteSortInput>;
};


type Query_allSiteBuildMetadataArgs = {
  filter: InputMaybe<SiteBuildMetadataFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteBuildMetadataSortInput>;
};


type Query_allSiteFunctionArgs = {
  filter: InputMaybe<SiteFunctionFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteFunctionSortInput>;
};


type Query_allSitePageArgs = {
  filter: InputMaybe<SitePageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SitePageSortInput>;
};


type Query_allSitePluginArgs = {
  filter: InputMaybe<SitePluginFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SitePluginSortInput>;
};


type Query_directoryArgs = {
  absolutePath: InputMaybe<StringQueryOperatorInput>;
  accessTime: InputMaybe<DateQueryOperatorInput>;
  atime: InputMaybe<DateQueryOperatorInput>;
  atimeMs: InputMaybe<FloatQueryOperatorInput>;
  base: InputMaybe<StringQueryOperatorInput>;
  birthTime: InputMaybe<DateQueryOperatorInput>;
  birthtime: InputMaybe<DateQueryOperatorInput>;
  birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  changeTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  ctime: InputMaybe<DateQueryOperatorInput>;
  ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  dev: InputMaybe<IntQueryOperatorInput>;
  dir: InputMaybe<StringQueryOperatorInput>;
  ext: InputMaybe<StringQueryOperatorInput>;
  extension: InputMaybe<StringQueryOperatorInput>;
  gid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  ino: InputMaybe<FloatQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mode: InputMaybe<IntQueryOperatorInput>;
  modifiedTime: InputMaybe<DateQueryOperatorInput>;
  mtime: InputMaybe<DateQueryOperatorInput>;
  mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nlink: InputMaybe<IntQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  prettySize: InputMaybe<StringQueryOperatorInput>;
  rdev: InputMaybe<IntQueryOperatorInput>;
  relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  relativePath: InputMaybe<StringQueryOperatorInput>;
  root: InputMaybe<StringQueryOperatorInput>;
  size: InputMaybe<IntQueryOperatorInput>;
  sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  uid: InputMaybe<IntQueryOperatorInput>;
};


type Query_fileArgs = {
  absolutePath: InputMaybe<StringQueryOperatorInput>;
  accessTime: InputMaybe<DateQueryOperatorInput>;
  atime: InputMaybe<DateQueryOperatorInput>;
  atimeMs: InputMaybe<FloatQueryOperatorInput>;
  base: InputMaybe<StringQueryOperatorInput>;
  birthTime: InputMaybe<DateQueryOperatorInput>;
  birthtime: InputMaybe<DateQueryOperatorInput>;
  birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  blksize: InputMaybe<IntQueryOperatorInput>;
  blocks: InputMaybe<IntQueryOperatorInput>;
  changeTime: InputMaybe<DateQueryOperatorInput>;
  childImageSharp: InputMaybe<ImageSharpFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  childrenImageSharp: InputMaybe<ImageSharpFilterListInput>;
  ctime: InputMaybe<DateQueryOperatorInput>;
  ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  dev: InputMaybe<IntQueryOperatorInput>;
  dir: InputMaybe<StringQueryOperatorInput>;
  ext: InputMaybe<StringQueryOperatorInput>;
  extension: InputMaybe<StringQueryOperatorInput>;
  gid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  ino: InputMaybe<FloatQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mode: InputMaybe<IntQueryOperatorInput>;
  modifiedTime: InputMaybe<DateQueryOperatorInput>;
  mtime: InputMaybe<DateQueryOperatorInput>;
  mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nlink: InputMaybe<IntQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  prettySize: InputMaybe<StringQueryOperatorInput>;
  publicURL: InputMaybe<StringQueryOperatorInput>;
  rdev: InputMaybe<IntQueryOperatorInput>;
  relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  relativePath: InputMaybe<StringQueryOperatorInput>;
  root: InputMaybe<StringQueryOperatorInput>;
  size: InputMaybe<IntQueryOperatorInput>;
  sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  uid: InputMaybe<IntQueryOperatorInput>;
};


type Query_graphCmsAssetArgs = {
  children: InputMaybe<NodeFilterListInput>;
  createdAt: InputMaybe<JSONQueryOperatorInput>;
  createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  fileName: InputMaybe<StringQueryOperatorInput>;
  handle: InputMaybe<StringQueryOperatorInput>;
  height: InputMaybe<FloatQueryOperatorInput>;
  iconDevelopmentOption: InputMaybe<GraphCMS_DevelopmentOptionFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  imageInfo: InputMaybe<GraphCMS_InfoFilterListInput>;
  informationMainImageDevelopmentOption: InputMaybe<GraphCMS_DevelopmentOptionFilterListInput>;
  internal: InputMaybe<InternalFilterInput>;
  locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  mimeType: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  publishedAt: InputMaybe<JSONQueryOperatorInput>;
  publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  remoteId: InputMaybe<IDQueryOperatorInput>;
  remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  size: InputMaybe<FloatQueryOperatorInput>;
  stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  updatedAt: InputMaybe<JSONQueryOperatorInput>;
  updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
  url: InputMaybe<StringQueryOperatorInput>;
  width: InputMaybe<FloatQueryOperatorInput>;
};


type Query_graphCmsDevelopmentOptionArgs = {
  children: InputMaybe<NodeFilterListInput>;
  createdAt: InputMaybe<JSONQueryOperatorInput>;
  createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  fundingOptions: InputMaybe<GraphCMS_RichTextFilterInput>;
  gatsbyPath: InputMaybe<StringQueryOperatorInput>;
  icon: InputMaybe<GraphCMS_AssetFilterInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  informationMainImage: InputMaybe<GraphCMS_AssetFilterInput>;
  internal: InputMaybe<InternalFilterInput>;
  intro: InputMaybe<StringQueryOperatorInput>;
  locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  mainText: InputMaybe<GraphCMS_RichTextFilterInput>;
  modelSwot: InputMaybe<GraphCMS_ModelSwotFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  publishedAt: InputMaybe<JSONQueryOperatorInput>;
  publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  remoteId: InputMaybe<IDQueryOperatorInput>;
  remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  slug: InputMaybe<StringQueryOperatorInput>;
  stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  updatedAt: InputMaybe<JSONQueryOperatorInput>;
  updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};


type Query_graphCmsHelpfulInfoArgs = {
  children: InputMaybe<NodeFilterListInput>;
  createdAt: InputMaybe<JSONQueryOperatorInput>;
  createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  info: InputMaybe<GraphCMS_RichTextFilterInput>;
  internal: InputMaybe<InternalFilterInput>;
  locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  publishedAt: InputMaybe<JSONQueryOperatorInput>;
  publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  remoteId: InputMaybe<IDQueryOperatorInput>;
  remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  stageNumber: InputMaybe<IntQueryOperatorInput>;
  updatedAt: InputMaybe<JSONQueryOperatorInput>;
  updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};


type Query_graphCmsInfoArgs = {
  children: InputMaybe<NodeFilterListInput>;
  createdAt: InputMaybe<JSONQueryOperatorInput>;
  createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  helpfulInfo: InputMaybe<GraphCMS_HelpfulInfoFilterInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  image: InputMaybe<GraphCMS_AssetFilterListInput>;
  infoBlock: InputMaybe<GraphCMS_RichTextFilterListInput>;
  internal: InputMaybe<InternalFilterInput>;
  intro: InputMaybe<GraphCMS_RichTextFilterInput>;
  locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  publishedAt: InputMaybe<JSONQueryOperatorInput>;
  publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  remoteId: InputMaybe<IDQueryOperatorInput>;
  remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  slider: InputMaybe<GraphCMS_RichTextFilterListInput>;
  slug: InputMaybe<StringQueryOperatorInput>;
  stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  updatedAt: InputMaybe<JSONQueryOperatorInput>;
  updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};


type Query_graphCmsModelBusinessPlanArgs = {
  capitalCosts: InputMaybe<GraphCMS_CapitalCostsFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  createdAt: InputMaybe<JSONQueryOperatorInput>;
  createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  developmentOption: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  publishedAt: InputMaybe<JSONQueryOperatorInput>;
  publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  remoteId: InputMaybe<IDQueryOperatorInput>;
  remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  updatedAt: InputMaybe<JSONQueryOperatorInput>;
  updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};


type Query_graphCmsModelSwotArgs = {
  children: InputMaybe<NodeFilterListInput>;
  createdAt: InputMaybe<JSONQueryOperatorInput>;
  createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  developmentOption: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  opportunities: InputMaybe<GraphCMS_RichTextFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  publishedAt: InputMaybe<JSONQueryOperatorInput>;
  publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  remoteId: InputMaybe<IDQueryOperatorInput>;
  remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  strengths: InputMaybe<GraphCMS_RichTextFilterInput>;
  threats: InputMaybe<GraphCMS_RichTextFilterInput>;
  updatedAt: InputMaybe<JSONQueryOperatorInput>;
  updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
  weaknesses: InputMaybe<GraphCMS_RichTextFilterInput>;
};


type Query_graphCmsPresentationTipsPageArgs = {
  children: InputMaybe<NodeFilterListInput>;
  createdAt: InputMaybe<JSONQueryOperatorInput>;
  createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  helpfulInfo: InputMaybe<GraphCMS_HelpfulInfoFilterInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  info: InputMaybe<GraphCMS_RichTextFilterInput>;
  internal: InputMaybe<InternalFilterInput>;
  intro: InputMaybe<StringQueryOperatorInput>;
  locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  publishedAt: InputMaybe<JSONQueryOperatorInput>;
  publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  remoteId: InputMaybe<IDQueryOperatorInput>;
  remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  slug: InputMaybe<StringQueryOperatorInput>;
  stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  stageNumber: InputMaybe<IntQueryOperatorInput>;
  tips: InputMaybe<GraphCMS_RichTextFilterInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  updatedAt: InputMaybe<JSONQueryOperatorInput>;
  updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};


type Query_graphCmsScheduledOperationArgs = {
  children: InputMaybe<NodeFilterListInput>;
  createdAt: InputMaybe<JSONQueryOperatorInput>;
  createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  description: InputMaybe<StringQueryOperatorInput>;
  errorMessage: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  publishedAt: InputMaybe<JSONQueryOperatorInput>;
  publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  rawPayload: InputMaybe<JSONQueryOperatorInput>;
  release: InputMaybe<GraphCMS_ScheduledReleaseFilterInput>;
  remoteId: InputMaybe<IDQueryOperatorInput>;
  remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  status: InputMaybe<GraphCMS_ScheduledOperationStatusQueryOperatorInput>;
  updatedAt: InputMaybe<JSONQueryOperatorInput>;
  updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};


type Query_graphCmsScheduledReleaseArgs = {
  children: InputMaybe<NodeFilterListInput>;
  createdAt: InputMaybe<JSONQueryOperatorInput>;
  createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  description: InputMaybe<StringQueryOperatorInput>;
  errorMessage: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  isActive: InputMaybe<BooleanQueryOperatorInput>;
  isImplicit: InputMaybe<BooleanQueryOperatorInput>;
  operations: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  parent: InputMaybe<NodeFilterInput>;
  publishedAt: InputMaybe<JSONQueryOperatorInput>;
  publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  releaseAt: InputMaybe<JSONQueryOperatorInput>;
  remoteId: InputMaybe<IDQueryOperatorInput>;
  remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  status: InputMaybe<GraphCMS_ScheduledReleaseStatusQueryOperatorInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  updatedAt: InputMaybe<JSONQueryOperatorInput>;
  updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};


type Query_graphCmsStageLandingPageArgs = {
  children: InputMaybe<NodeFilterListInput>;
  createdAt: InputMaybe<JSONQueryOperatorInput>;
  createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  helpfulInfo: InputMaybe<GraphCMS_HelpfulInfoFilterInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  infoLink: InputMaybe<GraphCMS_RichTextFilterListInput>;
  internal: InputMaybe<InternalFilterInput>;
  locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  publishedAt: InputMaybe<JSONQueryOperatorInput>;
  publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  remoteId: InputMaybe<IDQueryOperatorInput>;
  remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  slug: InputMaybe<StringQueryOperatorInput>;
  stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  stageInfo: InputMaybe<GraphCMS_RichTextFilterInput>;
  stageIntro: InputMaybe<StringQueryOperatorInput>;
  stageIntroRich: InputMaybe<GraphCMS_RichTextFilterInput>;
  stageNumber: InputMaybe<IntQueryOperatorInput>;
  stageTitle: InputMaybe<StringQueryOperatorInput>;
  tasksToComplete: InputMaybe<GraphCMS_TaskToCompleteFilterListInput>;
  updatedAt: InputMaybe<JSONQueryOperatorInput>;
  updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};


type Query_graphCmsStageTaskArgs = {
  children: InputMaybe<NodeFilterListInput>;
  createdAt: InputMaybe<JSONQueryOperatorInput>;
  createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  helpfulInfo: InputMaybe<GraphCMS_HelpfulInfoFilterInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  intro: InputMaybe<GraphCMS_RichTextFilterInput>;
  locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  publishedAt: InputMaybe<JSONQueryOperatorInput>;
  publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  questions: InputMaybe<GraphCMS_RichTextFilterListInput>;
  remoteId: InputMaybe<IDQueryOperatorInput>;
  remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  stageNumber: InputMaybe<IntQueryOperatorInput>;
  submittedText: InputMaybe<GraphCMS_RichTextFilterInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  updatedAt: InputMaybe<JSONQueryOperatorInput>;
  updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};


type Query_graphCmsStageTaskPageArgs = {
  children: InputMaybe<NodeFilterListInput>;
  createdAt: InputMaybe<JSONQueryOperatorInput>;
  createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  helpfulInfo: InputMaybe<GraphCMS_HelpfulInfoFilterInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  publishedAt: InputMaybe<JSONQueryOperatorInput>;
  publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  remoteId: InputMaybe<IDQueryOperatorInput>;
  remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  stageNumber: InputMaybe<IntQueryOperatorInput>;
  submittedText: InputMaybe<GraphCMS_RichTextFilterInput>;
  taskInfo: InputMaybe<GraphCMS_RichTextFilterInput>;
  tasksToComplete: InputMaybe<GraphCMS_TaskToCompleteFilterListInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  updatedAt: InputMaybe<JSONQueryOperatorInput>;
  updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};


type Query_graphCmsTaskToCompleteArgs = {
  children: InputMaybe<NodeFilterListInput>;
  createdAt: InputMaybe<JSONQueryOperatorInput>;
  createdBy: InputMaybe<GraphCMS_UserFilterInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  locale: InputMaybe<GraphCMS_LocaleQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  publishedAt: InputMaybe<JSONQueryOperatorInput>;
  publishedBy: InputMaybe<GraphCMS_UserFilterInput>;
  remoteId: InputMaybe<IDQueryOperatorInput>;
  remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  scheduledIn: InputMaybe<GraphCMS_ScheduledOperationFilterListInput>;
  stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  stageNumber: InputMaybe<FloatQueryOperatorInput>;
  submittedText: InputMaybe<GraphCMS_RichTextFilterInput>;
  taskInfo: InputMaybe<GraphCMS_RichTextFilterInput>;
  taskLinkText: InputMaybe<StringQueryOperatorInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  updatedAt: InputMaybe<JSONQueryOperatorInput>;
  updatedBy: InputMaybe<GraphCMS_UserFilterInput>;
};


type Query_graphCmsUserArgs = {
  children: InputMaybe<NodeFilterListInput>;
  createdAt: InputMaybe<JSONQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  isActive: InputMaybe<BooleanQueryOperatorInput>;
  kind: InputMaybe<GraphCMS_UserKindQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  picture: InputMaybe<StringQueryOperatorInput>;
  publishedAt: InputMaybe<JSONQueryOperatorInput>;
  remoteId: InputMaybe<IDQueryOperatorInput>;
  remoteTypeName: InputMaybe<StringQueryOperatorInput>;
  stage: InputMaybe<GraphCMS_StageQueryOperatorInput>;
  updatedAt: InputMaybe<JSONQueryOperatorInput>;
};


type Query_graphQlSourceArgs = {
  children: InputMaybe<NodeFilterListInput>;
  fieldName: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  typeName: InputMaybe<StringQueryOperatorInput>;
};


type Query_imageSharpArgs = {
  children: InputMaybe<NodeFilterListInput>;
  fixed: InputMaybe<ImageSharpFixedFilterInput>;
  fluid: InputMaybe<ImageSharpFluidFilterInput>;
  gatsbyImageData: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  original: InputMaybe<ImageSharpOriginalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  resize: InputMaybe<ImageSharpResizeFilterInput>;
};


type Query_markdownRemarkArgs = {
  children: InputMaybe<NodeFilterListInput>;
  excerpt: InputMaybe<StringQueryOperatorInput>;
  excerptAst: InputMaybe<JSONQueryOperatorInput>;
  headings: InputMaybe<MarkdownHeadingFilterListInput>;
  html: InputMaybe<StringQueryOperatorInput>;
  htmlAst: InputMaybe<JSONQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  tableOfContents: InputMaybe<StringQueryOperatorInput>;
  timeToRead: InputMaybe<IntQueryOperatorInput>;
  wordCount: InputMaybe<MarkdownWordCountFilterInput>;
};


type Query_siteArgs = {
  buildTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  graphqlTypegen: InputMaybe<SiteGraphqlTypegenFilterInput>;
  host: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  jsxRuntime: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pathPrefix: InputMaybe<StringQueryOperatorInput>;
  polyfill: InputMaybe<BooleanQueryOperatorInput>;
  port: InputMaybe<IntQueryOperatorInput>;
  siteMetadata: InputMaybe<SiteSiteMetadataFilterInput>;
  trailingSlash: InputMaybe<StringQueryOperatorInput>;
};


type Query_siteBuildMetadataArgs = {
  buildTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
};


type Query_siteFunctionArgs = {
  absoluteCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  functionRoute: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  matchPath: InputMaybe<StringQueryOperatorInput>;
  originalAbsoluteFilePath: InputMaybe<StringQueryOperatorInput>;
  originalRelativeFilePath: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pluginName: InputMaybe<StringQueryOperatorInput>;
  relativeCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
};


type Query_sitePageArgs = {
  children: InputMaybe<NodeFilterListInput>;
  component: InputMaybe<StringQueryOperatorInput>;
  componentChunkName: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  internalComponentName: InputMaybe<StringQueryOperatorInput>;
  matchPath: InputMaybe<StringQueryOperatorInput>;
  pageContext: InputMaybe<JSONQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<StringQueryOperatorInput>;
  pluginCreator: InputMaybe<SitePluginFilterInput>;
};


type Query_sitePluginArgs = {
  browserAPIs: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nodeAPIs: InputMaybe<StringQueryOperatorInput>;
  packageJson: InputMaybe<JSONQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pluginFilepath: InputMaybe<StringQueryOperatorInput>;
  pluginOptions: InputMaybe<JSONQueryOperatorInput>;
  resolve: InputMaybe<StringQueryOperatorInput>;
  ssrAPIs: InputMaybe<StringQueryOperatorInput>;
  version: InputMaybe<StringQueryOperatorInput>;
};

type Site = Node & {
  readonly buildTime: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly graphqlTypegen: Maybe<SiteGraphqlTypegen>;
  readonly host: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly jsxRuntime: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly pathPrefix: Maybe<Scalars['String']>;
  readonly polyfill: Maybe<Scalars['Boolean']>;
  readonly port: Maybe<Scalars['Int']>;
  readonly siteMetadata: Maybe<SiteSiteMetadata>;
  readonly trailingSlash: Maybe<Scalars['String']>;
};


type Site_buildTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type SiteBuildMetadata = Node & {
  readonly buildTime: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};


type SiteBuildMetadata_buildTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type SiteBuildMetadataConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteBuildMetadataEdge>;
  readonly group: ReadonlyArray<SiteBuildMetadataGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteBuildMetadata>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteBuildMetadataConnection_distinctArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_groupArgs = {
  field: SiteBuildMetadataFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteBuildMetadataConnection_maxArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_minArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_sumArgs = {
  field: SiteBuildMetadataFieldsEnum;
};

type SiteBuildMetadataEdge = {
  readonly next: Maybe<SiteBuildMetadata>;
  readonly node: SiteBuildMetadata;
  readonly previous: Maybe<SiteBuildMetadata>;
};

type SiteBuildMetadataFieldsEnum =
  | 'buildTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id';

type SiteBuildMetadataFilterInput = {
  readonly buildTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type SiteBuildMetadataGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteBuildMetadataEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteBuildMetadataGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteBuildMetadata>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteBuildMetadataGroupConnection_distinctArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_groupArgs = {
  field: SiteBuildMetadataFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteBuildMetadataGroupConnection_maxArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_minArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_sumArgs = {
  field: SiteBuildMetadataFieldsEnum;
};

type SiteBuildMetadataSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteBuildMetadataFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteEdge>;
  readonly group: ReadonlyArray<SiteGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Site>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteConnection_distinctArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_groupArgs = {
  field: SiteFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteConnection_maxArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_minArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_sumArgs = {
  field: SiteFieldsEnum;
};

type SiteEdge = {
  readonly next: Maybe<Site>;
  readonly node: Site;
  readonly previous: Maybe<Site>;
};

type SiteFieldsEnum =
  | 'buildTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'graphqlTypegen.generateOnBuild'
  | 'graphqlTypegen.typesOutputPath'
  | 'host'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'jsxRuntime'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pathPrefix'
  | 'polyfill'
  | 'port'
  | 'siteMetadata.description'
  | 'siteMetadata.title'
  | 'trailingSlash';

type SiteFilterInput = {
  readonly buildTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly graphqlTypegen: InputMaybe<SiteGraphqlTypegenFilterInput>;
  readonly host: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly jsxRuntime: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pathPrefix: InputMaybe<StringQueryOperatorInput>;
  readonly polyfill: InputMaybe<BooleanQueryOperatorInput>;
  readonly port: InputMaybe<IntQueryOperatorInput>;
  readonly siteMetadata: InputMaybe<SiteSiteMetadataFilterInput>;
  readonly trailingSlash: InputMaybe<StringQueryOperatorInput>;
};

type SiteFunction = Node & {
  readonly absoluteCompiledFilePath: Scalars['String'];
  readonly children: ReadonlyArray<Node>;
  readonly functionRoute: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly matchPath: Maybe<Scalars['String']>;
  readonly originalAbsoluteFilePath: Scalars['String'];
  readonly originalRelativeFilePath: Scalars['String'];
  readonly parent: Maybe<Node>;
  readonly pluginName: Scalars['String'];
  readonly relativeCompiledFilePath: Scalars['String'];
};

type SiteFunctionConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteFunctionEdge>;
  readonly group: ReadonlyArray<SiteFunctionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteFunction>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteFunctionConnection_distinctArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_groupArgs = {
  field: SiteFunctionFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteFunctionConnection_maxArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_minArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_sumArgs = {
  field: SiteFunctionFieldsEnum;
};

type SiteFunctionEdge = {
  readonly next: Maybe<SiteFunction>;
  readonly node: SiteFunction;
  readonly previous: Maybe<SiteFunction>;
};

type SiteFunctionFieldsEnum =
  | 'absoluteCompiledFilePath'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'functionRoute'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'matchPath'
  | 'originalAbsoluteFilePath'
  | 'originalRelativeFilePath'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pluginName'
  | 'relativeCompiledFilePath';

type SiteFunctionFilterInput = {
  readonly absoluteCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly functionRoute: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly matchPath: InputMaybe<StringQueryOperatorInput>;
  readonly originalAbsoluteFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly originalRelativeFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pluginName: InputMaybe<StringQueryOperatorInput>;
  readonly relativeCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
};

type SiteFunctionGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteFunctionEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteFunctionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteFunction>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteFunctionGroupConnection_distinctArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_groupArgs = {
  field: SiteFunctionFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteFunctionGroupConnection_maxArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_minArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_sumArgs = {
  field: SiteFunctionFieldsEnum;
};

type SiteFunctionSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteFunctionFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteGraphqlTypegen = {
  readonly generateOnBuild: Maybe<Scalars['Boolean']>;
  readonly typesOutputPath: Maybe<Scalars['String']>;
};

type SiteGraphqlTypegenFilterInput = {
  readonly generateOnBuild: InputMaybe<BooleanQueryOperatorInput>;
  readonly typesOutputPath: InputMaybe<StringQueryOperatorInput>;
};

type SiteGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Site>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteGroupConnection_distinctArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_groupArgs = {
  field: SiteFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteGroupConnection_maxArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_minArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_sumArgs = {
  field: SiteFieldsEnum;
};

type SitePage = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly component: Scalars['String'];
  readonly componentChunkName: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly internalComponentName: Scalars['String'];
  readonly matchPath: Maybe<Scalars['String']>;
  readonly pageContext: Maybe<Scalars['JSON']>;
  readonly parent: Maybe<Node>;
  readonly path: Scalars['String'];
  readonly pluginCreator: Maybe<SitePlugin>;
};

type SitePageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePageEdge>;
  readonly group: ReadonlyArray<SitePageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePageConnection_distinctArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_groupArgs = {
  field: SitePageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePageConnection_maxArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_minArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_sumArgs = {
  field: SitePageFieldsEnum;
};

type SitePageEdge = {
  readonly next: Maybe<SitePage>;
  readonly node: SitePage;
  readonly previous: Maybe<SitePage>;
};

type SitePageFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'component'
  | 'componentChunkName'
  | 'id'
  | 'internalComponentName'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'matchPath'
  | 'pageContext'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path'
  | 'pluginCreator.browserAPIs'
  | 'pluginCreator.children'
  | 'pluginCreator.children.children'
  | 'pluginCreator.children.children.children'
  | 'pluginCreator.children.children.id'
  | 'pluginCreator.children.id'
  | 'pluginCreator.children.internal.content'
  | 'pluginCreator.children.internal.contentDigest'
  | 'pluginCreator.children.internal.contentFilePath'
  | 'pluginCreator.children.internal.description'
  | 'pluginCreator.children.internal.fieldOwners'
  | 'pluginCreator.children.internal.ignoreType'
  | 'pluginCreator.children.internal.mediaType'
  | 'pluginCreator.children.internal.owner'
  | 'pluginCreator.children.internal.type'
  | 'pluginCreator.children.parent.children'
  | 'pluginCreator.children.parent.id'
  | 'pluginCreator.id'
  | 'pluginCreator.internal.content'
  | 'pluginCreator.internal.contentDigest'
  | 'pluginCreator.internal.contentFilePath'
  | 'pluginCreator.internal.description'
  | 'pluginCreator.internal.fieldOwners'
  | 'pluginCreator.internal.ignoreType'
  | 'pluginCreator.internal.mediaType'
  | 'pluginCreator.internal.owner'
  | 'pluginCreator.internal.type'
  | 'pluginCreator.name'
  | 'pluginCreator.nodeAPIs'
  | 'pluginCreator.packageJson'
  | 'pluginCreator.parent.children'
  | 'pluginCreator.parent.children.children'
  | 'pluginCreator.parent.children.id'
  | 'pluginCreator.parent.id'
  | 'pluginCreator.parent.internal.content'
  | 'pluginCreator.parent.internal.contentDigest'
  | 'pluginCreator.parent.internal.contentFilePath'
  | 'pluginCreator.parent.internal.description'
  | 'pluginCreator.parent.internal.fieldOwners'
  | 'pluginCreator.parent.internal.ignoreType'
  | 'pluginCreator.parent.internal.mediaType'
  | 'pluginCreator.parent.internal.owner'
  | 'pluginCreator.parent.internal.type'
  | 'pluginCreator.parent.parent.children'
  | 'pluginCreator.parent.parent.id'
  | 'pluginCreator.pluginFilepath'
  | 'pluginCreator.pluginOptions'
  | 'pluginCreator.resolve'
  | 'pluginCreator.ssrAPIs'
  | 'pluginCreator.version';

type SitePageFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly component: InputMaybe<StringQueryOperatorInput>;
  readonly componentChunkName: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly internalComponentName: InputMaybe<StringQueryOperatorInput>;
  readonly matchPath: InputMaybe<StringQueryOperatorInput>;
  readonly pageContext: InputMaybe<JSONQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<StringQueryOperatorInput>;
  readonly pluginCreator: InputMaybe<SitePluginFilterInput>;
};

type SitePageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SitePageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePageGroupConnection_distinctArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_groupArgs = {
  field: SitePageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePageGroupConnection_maxArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_minArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_sumArgs = {
  field: SitePageFieldsEnum;
};

type SitePageSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SitePageFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SitePlugin = Node & {
  readonly browserAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly name: Maybe<Scalars['String']>;
  readonly nodeAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly packageJson: Maybe<Scalars['JSON']>;
  readonly parent: Maybe<Node>;
  readonly pluginFilepath: Maybe<Scalars['String']>;
  readonly pluginOptions: Maybe<Scalars['JSON']>;
  readonly resolve: Maybe<Scalars['String']>;
  readonly ssrAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly version: Maybe<Scalars['String']>;
};

type SitePluginConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePluginEdge>;
  readonly group: ReadonlyArray<SitePluginGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePlugin>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePluginConnection_distinctArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_groupArgs = {
  field: SitePluginFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePluginConnection_maxArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_minArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_sumArgs = {
  field: SitePluginFieldsEnum;
};

type SitePluginEdge = {
  readonly next: Maybe<SitePlugin>;
  readonly node: SitePlugin;
  readonly previous: Maybe<SitePlugin>;
};

type SitePluginFieldsEnum =
  | 'browserAPIs'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'name'
  | 'nodeAPIs'
  | 'packageJson'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pluginFilepath'
  | 'pluginOptions'
  | 'resolve'
  | 'ssrAPIs'
  | 'version';

type SitePluginFilterInput = {
  readonly browserAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nodeAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly packageJson: InputMaybe<JSONQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pluginFilepath: InputMaybe<StringQueryOperatorInput>;
  readonly pluginOptions: InputMaybe<JSONQueryOperatorInput>;
  readonly resolve: InputMaybe<StringQueryOperatorInput>;
  readonly ssrAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly version: InputMaybe<StringQueryOperatorInput>;
};

type SitePluginGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePluginEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SitePluginGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePlugin>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePluginGroupConnection_distinctArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_groupArgs = {
  field: SitePluginFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePluginGroupConnection_maxArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_minArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_sumArgs = {
  field: SitePluginFieldsEnum;
};

type SitePluginSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SitePluginFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteSiteMetadata = {
  readonly description: Maybe<Scalars['String']>;
  readonly title: Maybe<Scalars['String']>;
};

type SiteSiteMetadataFilterInput = {
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type SiteSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SortOrderEnum =
  | 'ASC'
  | 'DESC';

type StringQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['String']>;
  readonly glob: InputMaybe<Scalars['String']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  readonly ne: InputMaybe<Scalars['String']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  readonly regex: InputMaybe<Scalars['String']>;
};

type TransformOptions = {
  readonly cropFocus: InputMaybe<ImageCropFocus>;
  readonly duotone: InputMaybe<DuotoneGradient>;
  readonly fit: InputMaybe<ImageFit>;
  readonly grayscale: InputMaybe<Scalars['Boolean']>;
  readonly rotate: InputMaybe<Scalars['Int']>;
  readonly trim: InputMaybe<Scalars['Float']>;
};

type WebPOptions = {
  readonly quality: InputMaybe<Scalars['Int']>;
};

type AboutAreaQueryQueryVariables = Exact<{ [key: string]: never; }>;


type AboutAreaQueryQuery = { readonly graphCmsInfo: { readonly title: string | null, readonly intro: { readonly raw: Record<string, unknown> } | null, readonly slider: ReadonlyArray<{ readonly raw: Record<string, unknown> }>, readonly helpfulInfo: { readonly info: { readonly raw: Record<string, unknown> } } | null } | null };

type AboutCommunityQueryQueryVariables = Exact<{ [key: string]: never; }>;


type AboutCommunityQueryQuery = { readonly graphCmsInfo: { readonly title: string | null, readonly intro: { readonly raw: Record<string, unknown> } | null, readonly slider: ReadonlyArray<{ readonly raw: Record<string, unknown> }>, readonly helpfulInfo: { readonly info: { readonly raw: Record<string, unknown> } } | null } | null };

type AboutCommunityQueryAltQueryVariables = Exact<{ [key: string]: never; }>;


type AboutCommunityQueryAltQuery = { readonly graphCmsInfo: { readonly title: string | null, readonly intro: { readonly raw: Record<string, unknown> } | null, readonly slider: ReadonlyArray<{ readonly raw: Record<string, unknown> }>, readonly helpfulInfo: { readonly info: { readonly raw: Record<string, unknown> } } | null } | null };

type AboutRolesQueryQueryVariables = Exact<{ [key: string]: never; }>;


type AboutRolesQueryQuery = { readonly graphCmsInfo: { readonly title: string | null, readonly intro: { readonly raw: Record<string, unknown> } | null, readonly infoBlock: ReadonlyArray<{ readonly raw: Record<string, unknown> }>, readonly slider: ReadonlyArray<{ readonly raw: Record<string, unknown> }>, readonly helpfulInfo: { readonly info: { readonly raw: Record<string, unknown> } } | null } | null };

type AboutSWOTQueryQueryVariables = Exact<{ [key: string]: never; }>;


type AboutSWOTQueryQuery = { readonly graphCmsInfo: { readonly title: string | null, readonly intro: { readonly raw: Record<string, unknown> } | null, readonly infoBlock: ReadonlyArray<{ readonly raw: Record<string, unknown> }>, readonly slider: ReadonlyArray<{ readonly raw: Record<string, unknown> }>, readonly helpfulInfo: { readonly info: { readonly raw: Record<string, unknown> } } | null, readonly image: ReadonlyArray<{ readonly gatsbyImageData: Record<string, unknown> | null }> } | null };

type AboutSWOTQueryAltQueryVariables = Exact<{ [key: string]: never; }>;


type AboutSWOTQueryAltQuery = { readonly graphCmsInfo: { readonly title: string | null, readonly intro: { readonly raw: Record<string, unknown> } | null, readonly infoBlock: ReadonlyArray<{ readonly raw: Record<string, unknown> }>, readonly slider: ReadonlyArray<{ readonly raw: Record<string, unknown> }>, readonly helpfulInfo: { readonly info: { readonly raw: Record<string, unknown> } } | null, readonly image: ReadonlyArray<{ readonly gatsbyImageData: Record<string, unknown> | null }> } | null };

type BackgroundInfoQueryQueryVariables = Exact<{ [key: string]: never; }>;


type BackgroundInfoQueryQuery = { readonly content: { readonly info: { readonly title: string | null, readonly intro: { readonly raw: any } | null, readonly infoBlock: ReadonlyArray<{ readonly raw: any }>, readonly slider: ReadonlyArray<{ readonly raw: any }>, readonly helpfulInfo: { readonly info: { readonly raw: any } } | null } | null } };

type DevelopmentOptionQueryQueryVariables = Exact<{
  slug: InputMaybe<Scalars['String']>;
}>;


type DevelopmentOptionQueryQuery = { readonly graphCmsDevelopmentOption: { readonly title: string, readonly intro: string | null, readonly mainText: { readonly raw: Record<string, unknown> } | null, readonly fundingOptions: { readonly raw: Record<string, unknown> } | null, readonly informationMainImage: { readonly gatsbyImageData: Record<string, unknown> | null } | null, readonly icon: { readonly url: string } } | null };

type DevelopmentOptionQueryAltQueryVariables = Exact<{
  slug: InputMaybe<Scalars['String']>;
}>;


type DevelopmentOptionQueryAltQuery = { readonly graphCmsDevelopmentOption: { readonly title: string, readonly intro: string | null, readonly mainText: { readonly raw: Record<string, unknown> } | null, readonly fundingOptions: { readonly raw: Record<string, unknown> } | null, readonly informationMainImage: { readonly gatsbyImageData: Record<string, unknown> | null } | null, readonly icon: { readonly url: string } } | null };

type DevelopmentOptionsQueryQueryVariables = Exact<{ [key: string]: never; }>;


type DevelopmentOptionsQueryQuery = { readonly graphCmsInfo: { readonly title: string | null, readonly intro: { readonly raw: Record<string, unknown> } | null, readonly infoBlock: ReadonlyArray<{ readonly raw: Record<string, unknown> }>, readonly slider: ReadonlyArray<{ readonly raw: Record<string, unknown> }>, readonly helpfulInfo: { readonly info: { readonly raw: Record<string, unknown> } } | null } | null };

type GatsbyImageSharpFixedFragment = { readonly base64: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_noBase64Fragment = { readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_tracedSVGFragment = { readonly tracedSVG: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_withWebpFragment = { readonly base64: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFixed_withWebp_noBase64Fragment = { readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFixed_withWebp_tracedSVGFragment = { readonly tracedSVG: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFluidFragment = { readonly base64: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_noBase64Fragment = { readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_tracedSVGFragment = { readonly tracedSVG: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_withWebpFragment = { readonly base64: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluid_withWebp_noBase64Fragment = { readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluid_withWebp_tracedSVGFragment = { readonly tracedSVG: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluidLimitPresentationSizeFragment = { readonly maxHeight: number, readonly maxWidth: number };

type IntroductionQueryQueryVariables = Exact<{ [key: string]: never; }>;


type IntroductionQueryQuery = { readonly graphCmsInfo: { readonly title: string | null, readonly intro: { readonly raw: Record<string, unknown> } | null, readonly infoBlock: ReadonlyArray<{ readonly raw: Record<string, unknown> }> } | null };

type Stage3PageQueryQueryVariables = Exact<{ [key: string]: never; }>;


type Stage3PageQueryQuery = { readonly graphCmsStageLandingPage: { readonly stageTitle: string, readonly stageIntro: string, readonly stageIntroRich: { readonly raw: Record<string, unknown> } | null, readonly stageInfo: { readonly raw: Record<string, unknown> } | null, readonly infoLink: ReadonlyArray<{ readonly raw: Record<string, unknown> }>, readonly tasksToComplete: ReadonlyArray<{ readonly title: string | null, readonly taskLinkText: string | null, readonly taskInfo: { readonly raw: Record<string, unknown> }, readonly submittedText: { readonly raw: Record<string, unknown> } | null }>, readonly helpfulInfo: { readonly info: { readonly raw: Record<string, unknown> } } | null } | null, readonly graphCmsInfo: { readonly slider: ReadonlyArray<{ readonly raw: Record<string, unknown> }> } | null };

type Stage5PageQueryQueryVariables = Exact<{ [key: string]: never; }>;


type Stage5PageQueryQuery = { readonly graphCmsStageLandingPage: { readonly stageTitle: string, readonly stageIntro: string, readonly stageIntroRich: { readonly raw: Record<string, unknown> } | null, readonly stageInfo: { readonly raw: Record<string, unknown> } | null, readonly infoLink: ReadonlyArray<{ readonly raw: Record<string, unknown> }>, readonly tasksToComplete: ReadonlyArray<{ readonly title: string | null, readonly taskLinkText: string | null, readonly taskInfo: { readonly raw: Record<string, unknown> }, readonly submittedText: { readonly raw: Record<string, unknown> } | null }>, readonly helpfulInfo: { readonly info: { readonly raw: Record<string, unknown> } } | null } | null };

type Stage6PageQueryQueryVariables = Exact<{ [key: string]: never; }>;


type Stage6PageQueryQuery = { readonly graphCmsStageLandingPage: { readonly stageTitle: string, readonly stageIntro: string, readonly stageIntroRich: { readonly raw: Record<string, unknown> } | null, readonly stageInfo: { readonly raw: Record<string, unknown> } | null, readonly infoLink: ReadonlyArray<{ readonly raw: Record<string, unknown> }>, readonly tasksToComplete: ReadonlyArray<{ readonly title: string | null, readonly taskLinkText: string | null, readonly taskInfo: { readonly raw: Record<string, unknown> }, readonly submittedText: { readonly raw: Record<string, unknown> } | null }>, readonly helpfulInfo: { readonly info: { readonly raw: Record<string, unknown> } } | null } | null };

type Stage7PageQueryQueryVariables = Exact<{ [key: string]: never; }>;


type Stage7PageQueryQuery = { readonly graphCmsStageLandingPage: { readonly stageTitle: string, readonly stageIntro: string, readonly stageIntroRich: { readonly raw: Record<string, unknown> } | null, readonly stageInfo: { readonly raw: Record<string, unknown> } | null, readonly infoLink: ReadonlyArray<{ readonly raw: Record<string, unknown> }>, readonly tasksToComplete: ReadonlyArray<{ readonly title: string | null, readonly taskLinkText: string | null, readonly taskInfo: { readonly raw: Record<string, unknown> }, readonly submittedText: { readonly raw: Record<string, unknown> } | null }>, readonly helpfulInfo: { readonly info: { readonly raw: Record<string, unknown> } } | null } | null };

type Stage7TipsPageQueryQueryVariables = Exact<{ [key: string]: never; }>;


type Stage7TipsPageQueryQuery = { readonly graphCmsPresentationTipsPage: { readonly title: string | null, readonly tips: { readonly raw: Record<string, unknown> } | null, readonly helpfulInfo: { readonly info: { readonly raw: Record<string, unknown> } } | null } | null };

type StageLandingPageContentFragment = { readonly stageTitle: string, readonly stageIntro: string, readonly stageIntroRich: { readonly raw: Record<string, unknown> } | null, readonly stageInfo: { readonly raw: Record<string, unknown> } | null, readonly infoLink: ReadonlyArray<{ readonly raw: Record<string, unknown> }>, readonly tasksToComplete: ReadonlyArray<{ readonly title: string | null, readonly taskLinkText: string | null, readonly taskInfo: { readonly raw: Record<string, unknown> }, readonly submittedText: { readonly raw: Record<string, unknown> } | null }>, readonly helpfulInfo: { readonly info: { readonly raw: Record<string, unknown> } } | null };

type StageTaskContentFragment = { readonly title: string | null, readonly intro: { readonly raw: Record<string, unknown> } | null, readonly questions: ReadonlyArray<{ readonly raw: Record<string, unknown> }>, readonly helpfulInfo: { readonly info: { readonly raw: Record<string, unknown> } } | null, readonly submittedText: { readonly raw: Record<string, unknown> } | null };

type StageTaskPageContentFragment = { readonly title: string | null, readonly taskInfo: { readonly raw: Record<string, unknown> } | null, readonly tasksToComplete: ReadonlyArray<{ readonly title: string | null, readonly taskLinkText: string | null, readonly taskInfo: { readonly raw: Record<string, unknown> }, readonly submittedText: { readonly raw: Record<string, unknown> } | null }>, readonly helpfulInfo: { readonly info: { readonly raw: Record<string, unknown> } } | null };

type TutorGuideQueryQueryVariables = Exact<{ [key: string]: never; }>;


type TutorGuideQueryQuery = { readonly graphCmsInfo: { readonly title: string | null, readonly infoBlock: ReadonlyArray<{ readonly raw: Record<string, unknown> }> } | null };


}
